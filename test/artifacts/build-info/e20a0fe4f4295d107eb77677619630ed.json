{
	"id": "e20a0fe4f4295d107eb77677619630ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"sis.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./IERC20.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./AggregatorV3Interface.sol\";\r\ncontract personalSafuuTrader is Ownable\r\n{\r\n    AggregatorV3Interface internal priceFeed;\r\n    //address private owner;\r\n    uint256  public BnbToSafuu; \r\n    IERC20 public safuu;\r\n   \r\n    //uint256 public nativeInContract = address(this).balance;\r\n\r\nconstructor () {\r\n  BnbToSafuu = 100000;\r\n  safuu = IERC20(0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90);\r\n // safuu = IERC20(0xd9145CCE52D386f254917e481eB44e9943F39138); //for test\r\n   priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\r\n  }\r\n    function buySafuu(uint256 amttobuy) public payable\r\n    {\r\n        require(amttobuy >= BnbToSafuu, \"Minimum trade amount 1 bnb\");\r\n        uint256 payableAmt; //18decimals\r\n        payableAmt = (amttobuy/BnbToSafuu) *(10**18);\r\n        (bool success, ) = owner().call{value: payableAmt}(\"\");\r\n        require(success, \"Transfer failed!\");\r\n\r\n        //transfer the safuu to user\r\n        safuu.transfer(msg.sender, amttobuy);\r\n       \r\n    }\r\n\r\n    function sellSafuu(uint256 amttosell) public \r\n    {\r\n        require(amttosell >= BnbToSafuu, \"Minimum trade amount 1 bnb\");\r\n    _safeTransferFrom(safuu, msg.sender, address(this), amttosell);\r\n    //transfer BNB to user\r\n    uint256 payableBNB; //18decimals\r\n    payableBNB = (amttosell/BnbToSafuu) *(10**18);\r\n    (bool success, ) = msg.sender.call{value: payableBNB}(\"\");\r\n        require(success, \"Transfer failed!\");\r\n    \r\n    }\r\n\r\n\r\n    function setFactor(uint256 _newfactor) public onlyOwner {\r\n        \r\n        BnbToSafuu = _newfactor;\r\n    }\r\n    function withdrawToOwner()\r\n    public \r\n    { \r\n        // send all Ether to owner\r\n        // Owner can receive Ether since the address of owner is payable\r\n        (bool success, ) = owner().call{value: address(this).balance}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n        safuu.transfer(owner(), safuu.balanceOf(address(this)));\r\n    }\r\n    function _safeTransferFrom(\r\n        IERC20 token,\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) private {\r\n        bool sent = token.transferFrom(sender, recipient, amount);\r\n        require(sent, \"Token transfer failed\");\r\n    }\r\n}\r\n"
			},
			"AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  function version() external view returns (uint256);\r\n\r\n  // getRoundData and latestRoundData should both raise \"No data present\"\r\n  // if they do not have data to report, instead of returning unset values\r\n  // which could be misinterpreted as actual reported values.\r\n  function getRoundData(uint80 _roundId)\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n}"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"AggregatorV3Interface.sol\":{\"keccak256\":\"0x8db60f81b61f79fab0366fa7ef9d47ac67462276d0cbe7b36a2fdf74654e9c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c102d1f8b81f966eb8acd919cbe14b3785a2389427154ac99bb54d3e94fddce\",\"dweb:/ipfs/QmX9afvMGRxCX6AZbHRhmkEHYJAGDeyeT5ycx7u43zSsNK\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sis.sol": {
				"personalSafuuTrader": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BnbToSafuu",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amttobuy",
									"type": "uint256"
								}
							],
							"name": "buySafuu",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "safuu",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amttosell",
									"type": "uint256"
								}
							],
							"name": "sellSafuu",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newfactor",
									"type": "uint256"
								}
							],
							"name": "setFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawToOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sis.sol\":146:2314  contract personalSafuuTrader is Ownable\r... */\n  mstore(0x40, 0x80)\n    /* \"sis.sol\":398:665  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"Ownable.sol\":933:945  _msgSender() */\n  tag_6\n    /* \"Ownable.sol\":933:943  _msgSender */\n  shl(0x20, tag_7)\n    /* \"Ownable.sol\":933:945  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"Ownable.sol\":914:932  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"sis.sol\":431:437  100000 */\n  0x0186a0\n    /* \"sis.sol\":418:428  BnbToSafuu */\n  0x02\n    /* \"sis.sol\":418:437  BnbToSafuu = 100000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sis.sol\":457:499  0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90 */\n  0xe5ba47fd94cb645ba4119222e34fb33f59c7cd90\n    /* \"sis.sol\":442:447  safuu */\n  0x03\n  0x00\n    /* \"sis.sol\":442:500  safuu = IERC20(0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"sis.sol\":616:658  0x9326BFA02ADD2366b30bacB125260Af641031331 */\n  0x9326bfa02add2366b30bacb125260af641031331\n    /* \"sis.sol\":582:591  priceFeed */\n  0x01\n  0x00\n    /* \"sis.sol\":582:659  priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"sis.sol\":146:2314  contract personalSafuuTrader is Ownable\r... */\n  jump(tag_10)\n    /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"Context.sol\":693:700  address */\n  0x00\n    /* \"Context.sol\":719:729  msg.sender */\n  caller\n    /* \"Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"Ownable.sol\":2336:2352  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2355:2361  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":2336:2361  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":2380:2388  newOwner */\n  dup2\n    /* \"Ownable.sol\":2371:2377  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":2371:2388  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":2434:2442  newOwner */\n  dup2\n    /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":2424:2432  oldOwner */\n  dup2\n    /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":2326:2450  {... */\n  pop\n    /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"sis.sol\":146:2314  contract personalSafuuTrader is Ownable\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sis.sol\":146:2314  contract personalSafuuTrader is Ownable\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817e9d31\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x817e9d31\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xade87ecc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xebc4197c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_11:\n      dup1\n      0x23b160ac\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3cb40e16\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x80c31426\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"sis.sol\":305:324  IERC20 public safuu */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sis.sol\":1680:2037  function withdrawToOwner()\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"sis.sol\":671:1112  function buySafuu(uint256 amttobuy) public payable\r... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"sis.sol\":1566:1674  function setFactor(uint256 _newfactor) public onlyOwner {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sis.sol\":1120:1556  function sellSafuu(uint256 amttosell) public \r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"sis.sol\":271:297  uint256  public BnbToSafuu */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"sis.sol\":305:324  IERC20 public safuu */\n    tag_14:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"sis.sol\":1680:2037  function withdrawToOwner()\r... */\n    tag_19:\n        /* \"sis.sol\":1848:1860  bool success */\n      0x00\n        /* \"sis.sol\":1866:1873  owner() */\n      tag_51\n        /* \"sis.sol\":1866:1871  owner */\n      tag_33\n        /* \"sis.sol\":1866:1873  owner() */\n      jump\t// in\n    tag_51:\n        /* \"sis.sol\":1866:1878  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":1886:1907  address(this).balance */\n      selfbalance\n        /* \"sis.sol\":1866:1912  owner().call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_56\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_55)\n    tag_56:\n      0x60\n      swap2\n      pop\n    tag_55:\n      pop\n        /* \"sis.sol\":1847:1912  (bool success, ) = owner().call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sis.sol\":1931:1938  success */\n      dup1\n        /* \"sis.sol\":1923:1963  require(success, \"Failed to send Ether\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"sis.sol\":1974:1979  safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":1974:1988  safuu.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"sis.sol\":1989:1996  owner() */\n      tag_60\n        /* \"sis.sol\":1989:1994  owner */\n      tag_33\n        /* \"sis.sol\":1989:1996  owner() */\n      jump\t// in\n    tag_60:\n        /* \"sis.sol\":1998:2003  safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":1998:2013  safuu.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"sis.sol\":2022:2026  this */\n      address\n        /* \"sis.sol\":1998:2028  safuu.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"sis.sol\":1974:2029  safuu.transfer(owner(), safuu.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      pop\n        /* \"sis.sol\":1725:2037  { \r... */\n      pop\n        /* \"sis.sol\":1680:2037  function withdrawToOwner()\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_75\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_76\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_77\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_33\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_77:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      tag_82\n        /* \"Ownable.sol\":1752:1753  0 */\n      0x00\n        /* \"Ownable.sol\":1725:1743  _transferOwnership */\n      tag_83\n        /* \"Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_82:\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"sis.sol\":671:1112  function buySafuu(uint256 amttobuy) public payable\r... */\n    tag_26:\n        /* \"sis.sol\":758:768  BnbToSafuu */\n      sload(0x02)\n        /* \"sis.sol\":746:754  amttobuy */\n      dup2\n        /* \"sis.sol\":746:768  amttobuy >= BnbToSafuu */\n      lt\n      iszero\n        /* \"sis.sol\":738:799  require(amttobuy >= BnbToSafuu, \"Minimum trade amount 1 bnb\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"sis.sol\":810:828  uint256 payableAmt */\n      0x00\n        /* \"sis.sol\":889:895  10**18 */\n      0x0de0b6b3a7640000\n        /* \"sis.sol\":875:885  BnbToSafuu */\n      sload(0x02)\n        /* \"sis.sol\":866:874  amttobuy */\n      dup4\n        /* \"sis.sol\":866:885  amttobuy/BnbToSafuu */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"sis.sol\":865:896  (amttobuy/BnbToSafuu) *(10**18) */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"sis.sol\":852:896  payableAmt = (amttobuy/BnbToSafuu) *(10**18) */\n      swap1\n      pop\n        /* \"sis.sol\":908:920  bool success */\n      0x00\n        /* \"sis.sol\":926:933  owner() */\n      tag_92\n        /* \"sis.sol\":926:931  owner */\n      tag_33\n        /* \"sis.sol\":926:933  owner() */\n      jump\t// in\n    tag_92:\n        /* \"sis.sol\":926:938  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":946:956  payableAmt */\n      dup3\n        /* \"sis.sol\":926:961  owner().call{value: payableAmt}(\"\") */\n      mload(0x40)\n      tag_93\n      swap1\n      tag_53\n      jump\t// in\n    tag_93:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_96\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_95)\n    tag_96:\n      0x60\n      swap2\n      pop\n    tag_95:\n      pop\n        /* \"sis.sol\":907:961  (bool success, ) = owner().call{value: payableAmt}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sis.sol\":980:987  success */\n      dup1\n        /* \"sis.sol\":972:1008  require(success, \"Transfer failed!\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"sis.sol\":1059:1064  safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":1059:1073  safuu.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"sis.sol\":1074:1084  msg.sender */\n      caller\n        /* \"sis.sol\":1086:1094  amttobuy */\n      dup6\n        /* \"sis.sol\":1059:1095  safuu.transfer(msg.sender, amttobuy) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_104:\n      pop\n        /* \"sis.sol\":727:1112  {\r... */\n      pop\n      pop\n        /* \"sis.sol\":671:1112  function buySafuu(uint256 amttobuy) public payable\r... */\n      pop\n      jump\t// out\n        /* \"sis.sol\":1566:1674  function setFactor(uint256 _newfactor) public onlyOwner {\r... */\n    tag_30:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_106\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_76\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_106:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_107\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_33\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_107:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_80\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"sis.sol\":1656:1666  _newfactor */\n      dup1\n        /* \"sis.sol\":1643:1653  BnbToSafuu */\n      0x02\n        /* \"sis.sol\":1643:1666  BnbToSafuu = _newfactor */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sis.sol\":1566:1674  function setFactor(uint256 _newfactor) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_33:\n        /* \"Ownable.sol\":1075:1082  address */\n      0x00\n        /* \"Ownable.sol\":1101:1107  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1094:1107  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"sis.sol\":1120:1556  function sellSafuu(uint256 amttosell) public \r... */\n    tag_39:\n        /* \"sis.sol\":1203:1213  BnbToSafuu */\n      sload(0x02)\n        /* \"sis.sol\":1190:1199  amttosell */\n      dup2\n        /* \"sis.sol\":1190:1213  amttosell >= BnbToSafuu */\n      lt\n      iszero\n        /* \"sis.sol\":1182:1244  require(amttosell >= BnbToSafuu, \"Minimum trade amount 1 bnb\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_87\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"sis.sol\":1251:1313  _safeTransferFrom(safuu, msg.sender, address(this), amttosell) */\n      tag_115\n        /* \"sis.sol\":1269:1274  safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":1276:1286  msg.sender */\n      caller\n        /* \"sis.sol\":1296:1300  this */\n      address\n        /* \"sis.sol\":1303:1312  amttosell */\n      dup5\n        /* \"sis.sol\":1251:1268  _safeTransferFrom */\n      tag_116\n        /* \"sis.sol\":1251:1313  _safeTransferFrom(safuu, msg.sender, address(this), amttosell) */\n      jump\t// in\n    tag_115:\n        /* \"sis.sol\":1348:1366  uint256 payableBNB */\n      0x00\n        /* \"sis.sol\":1424:1430  10**18 */\n      0x0de0b6b3a7640000\n        /* \"sis.sol\":1410:1420  BnbToSafuu */\n      sload(0x02)\n        /* \"sis.sol\":1400:1409  amttosell */\n      dup4\n        /* \"sis.sol\":1400:1420  amttosell/BnbToSafuu */\n      tag_117\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_117:\n        /* \"sis.sol\":1399:1431  (amttosell/BnbToSafuu) *(10**18) */\n      tag_118\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_118:\n        /* \"sis.sol\":1386:1431  payableBNB = (amttosell/BnbToSafuu) *(10**18) */\n      swap1\n      pop\n        /* \"sis.sol\":1439:1451  bool success */\n      0x00\n        /* \"sis.sol\":1457:1467  msg.sender */\n      caller\n        /* \"sis.sol\":1457:1472  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sis.sol\":1480:1490  payableBNB */\n      dup3\n        /* \"sis.sol\":1457:1495  msg.sender.call{value: payableBNB}(\"\") */\n      mload(0x40)\n      tag_119\n      swap1\n      tag_53\n      jump\t// in\n    tag_119:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_122\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_121)\n    tag_122:\n      0x60\n      swap2\n      pop\n    tag_121:\n      pop\n        /* \"sis.sol\":1438:1495  (bool success, ) = msg.sender.call{value: payableBNB}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"sis.sol\":1514:1521  success */\n      dup1\n        /* \"sis.sol\":1506:1542  require(success, \"Transfer failed!\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_99\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"sis.sol\":1171:1556  {\r... */\n      pop\n      pop\n        /* \"sis.sol\":1120:1556  function sellSafuu(uint256 amttosell) public \r... */\n      pop\n      jump\t// out\n        /* \"sis.sol\":271:297  uint256  public BnbToSafuu */\n    tag_42:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_126\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_76\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_127\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_33\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_127:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_80\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"Ownable.sol\":2019:2020  0 */\n      0x00\n        /* \"Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1999:2007  newOwner */\n      dup2\n        /* \"Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      tag_134\n        /* \"Ownable.sol\":2093:2101  newOwner */\n      dup2\n        /* \"Ownable.sol\":2074:2092  _transferOwnership */\n      tag_83\n        /* \"Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_134:\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_76:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_83:\n        /* \"Ownable.sol\":2336:2352  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2355:2361  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2336:2361  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":2380:2388  newOwner */\n      dup2\n        /* \"Ownable.sol\":2371:2377  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":2371:2388  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":2434:2442  newOwner */\n      dup2\n        /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2424:2432  oldOwner */\n      dup2\n        /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":2326:2450  {... */\n      pop\n        /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"sis.sol\":2043:2311  function _safeTransferFrom(\r... */\n    tag_116:\n        /* \"sis.sol\":2197:2206  bool sent */\n      0x00\n        /* \"sis.sol\":2209:2214  token */\n      dup5\n        /* \"sis.sol\":2209:2227  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"sis.sol\":2228:2234  sender */\n      dup6\n        /* \"sis.sol\":2236:2245  recipient */\n      dup6\n        /* \"sis.sol\":2247:2253  amount */\n      dup6\n        /* \"sis.sol\":2209:2254  token.transferFrom(sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_143:\n        /* \"sis.sol\":2197:2254  bool sent = token.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"sis.sol\":2273:2277  sent */\n      dup1\n        /* \"sis.sol\":2265:2303  require(sent, \"Token transfer failed\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"sis.sol\":2186:2311  {\r... */\n      pop\n        /* \"sis.sol\":2043:2311  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_148:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_150\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_152:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_154\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_156:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_158\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_160:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_162\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_159\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:918   */\n    tag_48:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:784   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":703:782   */\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":665:784   */\n    tag_164:\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":848:901   */\n      tag_167\n        /* \"#utility.yul\":893:900   */\n      dup5\n        /* \"#utility.yul\":884:890   */\n      dup3\n        /* \"#utility.yul\":873:882   */\n      dup6\n        /* \"#utility.yul\":869:891   */\n      add\n        /* \"#utility.yul\":848:901   */\n      tag_148\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":838:901   */\n      swap2\n      pop\n        /* \"#utility.yul\":794:911   */\n      pop\n        /* \"#utility.yul\":589:918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1269   */\n    tag_73:\n        /* \"#utility.yul\":991:997   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x20\n        /* \"#utility.yul\":1028:1037   */\n      dup3\n        /* \"#utility.yul\":1019:1026   */\n      dup5\n        /* \"#utility.yul\":1015:1038   */\n      sub\n        /* \"#utility.yul\":1011:1043   */\n      slt\n        /* \"#utility.yul\":1008:1127   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1046:1125   */\n      tag_170\n      tag_166\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1008:1127   */\n    tag_169:\n        /* \"#utility.yul\":1166:1167   */\n      0x00\n        /* \"#utility.yul\":1191:1252   */\n      tag_171\n        /* \"#utility.yul\":1244:1251   */\n      dup5\n        /* \"#utility.yul\":1235:1241   */\n      dup3\n        /* \"#utility.yul\":1224:1233   */\n      dup6\n        /* \"#utility.yul\":1220:1242   */\n      add\n        /* \"#utility.yul\":1191:1252   */\n      tag_152\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1181:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1137:1262   */\n      pop\n        /* \"#utility.yul\":924:1269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1275:1604   */\n    tag_25:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_174\n      tag_166\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1351:1470   */\n    tag_173:\n        /* \"#utility.yul\":1509:1510   */\n      0x00\n        /* \"#utility.yul\":1534:1587   */\n      tag_175\n        /* \"#utility.yul\":1579:1586   */\n      dup5\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1559:1568   */\n      dup6\n        /* \"#utility.yul\":1555:1577   */\n      add\n        /* \"#utility.yul\":1534:1587   */\n      tag_156\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1524:1587   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1597   */\n      pop\n        /* \"#utility.yul\":1275:1604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1961   */\n    tag_66:\n        /* \"#utility.yul\":1680:1686   */\n      0x00\n        /* \"#utility.yul\":1729:1731   */\n      0x20\n        /* \"#utility.yul\":1717:1726   */\n      dup3\n        /* \"#utility.yul\":1708:1715   */\n      dup5\n        /* \"#utility.yul\":1704:1727   */\n      sub\n        /* \"#utility.yul\":1700:1732   */\n      slt\n        /* \"#utility.yul\":1697:1816   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1735:1814   */\n      tag_178\n      tag_166\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1697:1816   */\n    tag_177:\n        /* \"#utility.yul\":1855:1856   */\n      0x00\n        /* \"#utility.yul\":1880:1944   */\n      tag_179\n        /* \"#utility.yul\":1936:1943   */\n      dup5\n        /* \"#utility.yul\":1927:1933   */\n      dup3\n        /* \"#utility.yul\":1916:1925   */\n      dup6\n        /* \"#utility.yul\":1912:1934   */\n      add\n        /* \"#utility.yul\":1880:1944   */\n      tag_160\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1870:1944   */\n      swap2\n      pop\n        /* \"#utility.yul\":1826:1954   */\n      pop\n        /* \"#utility.yul\":1610:1961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1967:2085   */\n    tag_180:\n        /* \"#utility.yul\":2054:2078   */\n      tag_182\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2054:2078   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2049:2052   */\n      dup3\n        /* \"#utility.yul\":2042:2079   */\n      mstore\n        /* \"#utility.yul\":1967:2085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2250   */\n    tag_184:\n        /* \"#utility.yul\":2192:2243   */\n      tag_186\n        /* \"#utility.yul\":2237:2242   */\n      dup2\n        /* \"#utility.yul\":2192:2243   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2187:2190   */\n      dup3\n        /* \"#utility.yul\":2180:2244   */\n      mstore\n        /* \"#utility.yul\":2091:2250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2256:2622   */\n    tag_188:\n        /* \"#utility.yul\":2398:2401   */\n      0x00\n        /* \"#utility.yul\":2419:2486   */\n      tag_190\n        /* \"#utility.yul\":2483:2485   */\n      0x26\n        /* \"#utility.yul\":2478:2481   */\n      dup4\n        /* \"#utility.yul\":2419:2486   */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2412:2486   */\n      swap2\n      pop\n        /* \"#utility.yul\":2495:2588   */\n      tag_192\n        /* \"#utility.yul\":2584:2587   */\n      dup3\n        /* \"#utility.yul\":2495:2588   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2608:2611   */\n      dup3\n        /* \"#utility.yul\":2604:2616   */\n      add\n        /* \"#utility.yul\":2597:2616   */\n      swap1\n      pop\n        /* \"#utility.yul\":2256:2622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2628:2994   */\n    tag_194:\n        /* \"#utility.yul\":2770:2773   */\n      0x00\n        /* \"#utility.yul\":2791:2858   */\n      tag_196\n        /* \"#utility.yul\":2855:2857   */\n      0x14\n        /* \"#utility.yul\":2850:2853   */\n      dup4\n        /* \"#utility.yul\":2791:2858   */\n      tag_191\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2784:2858   */\n      swap2\n      pop\n        /* \"#utility.yul\":2867:2960   */\n      tag_197\n        /* \"#utility.yul\":2956:2959   */\n      dup3\n        /* \"#utility.yul\":2867:2960   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2985:2987   */\n      0x20\n        /* \"#utility.yul\":2980:2983   */\n      dup3\n        /* \"#utility.yul\":2976:2988   */\n      add\n        /* \"#utility.yul\":2969:2988   */\n      swap1\n      pop\n        /* \"#utility.yul\":2628:2994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3000:3366   */\n    tag_199:\n        /* \"#utility.yul\":3142:3145   */\n      0x00\n        /* \"#utility.yul\":3163:3230   */\n      tag_201\n        /* \"#utility.yul\":3227:3229   */\n      0x15\n        /* \"#utility.yul\":3222:3225   */\n      dup4\n        /* \"#utility.yul\":3163:3230   */\n      tag_191\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3156:3230   */\n      swap2\n      pop\n        /* \"#utility.yul\":3239:3332   */\n      tag_202\n        /* \"#utility.yul\":3328:3331   */\n      dup3\n        /* \"#utility.yul\":3239:3332   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3352:3355   */\n      dup3\n        /* \"#utility.yul\":3348:3360   */\n      add\n        /* \"#utility.yul\":3341:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3000:3366   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3372:3738   */\n    tag_204:\n        /* \"#utility.yul\":3514:3517   */\n      0x00\n        /* \"#utility.yul\":3535:3602   */\n      tag_206\n        /* \"#utility.yul\":3599:3601   */\n      0x1a\n        /* \"#utility.yul\":3594:3597   */\n      dup4\n        /* \"#utility.yul\":3535:3602   */\n      tag_191\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3528:3602   */\n      swap2\n      pop\n        /* \"#utility.yul\":3611:3704   */\n      tag_207\n        /* \"#utility.yul\":3700:3703   */\n      dup3\n        /* \"#utility.yul\":3611:3704   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3729:3731   */\n      0x20\n        /* \"#utility.yul\":3724:3727   */\n      dup3\n        /* \"#utility.yul\":3720:3732   */\n      add\n        /* \"#utility.yul\":3713:3732   */\n      swap1\n      pop\n        /* \"#utility.yul\":3372:3738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3744:4110   */\n    tag_209:\n        /* \"#utility.yul\":3886:3889   */\n      0x00\n        /* \"#utility.yul\":3907:3974   */\n      tag_211\n        /* \"#utility.yul\":3971:3973   */\n      0x10\n        /* \"#utility.yul\":3966:3969   */\n      dup4\n        /* \"#utility.yul\":3907:3974   */\n      tag_191\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3900:3974   */\n      swap2\n      pop\n        /* \"#utility.yul\":3983:4076   */\n      tag_212\n        /* \"#utility.yul\":4072:4075   */\n      dup3\n        /* \"#utility.yul\":3983:4076   */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4096:4099   */\n      dup3\n        /* \"#utility.yul\":4092:4104   */\n      add\n        /* \"#utility.yul\":4085:4104   */\n      swap1\n      pop\n        /* \"#utility.yul\":3744:4110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4116:4482   */\n    tag_214:\n        /* \"#utility.yul\":4258:4261   */\n      0x00\n        /* \"#utility.yul\":4279:4346   */\n      tag_216\n        /* \"#utility.yul\":4343:4345   */\n      0x20\n        /* \"#utility.yul\":4338:4341   */\n      dup4\n        /* \"#utility.yul\":4279:4346   */\n      tag_191\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4272:4346   */\n      swap2\n      pop\n        /* \"#utility.yul\":4355:4448   */\n      tag_217\n        /* \"#utility.yul\":4444:4447   */\n      dup3\n        /* \"#utility.yul\":4355:4448   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4473:4475   */\n      0x20\n        /* \"#utility.yul\":4468:4471   */\n      dup3\n        /* \"#utility.yul\":4464:4476   */\n      add\n        /* \"#utility.yul\":4457:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4116:4482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4488:4886   */\n    tag_219:\n        /* \"#utility.yul\":4647:4650   */\n      0x00\n        /* \"#utility.yul\":4668:4751   */\n      tag_221\n        /* \"#utility.yul\":4749:4750   */\n      0x00\n        /* \"#utility.yul\":4744:4747   */\n      dup4\n        /* \"#utility.yul\":4668:4751   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4661:4751   */\n      swap2\n      pop\n        /* \"#utility.yul\":4760:4853   */\n      tag_223\n        /* \"#utility.yul\":4849:4852   */\n      dup3\n        /* \"#utility.yul\":4760:4853   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4878:4879   */\n      0x00\n        /* \"#utility.yul\":4873:4876   */\n      dup3\n        /* \"#utility.yul\":4869:4880   */\n      add\n        /* \"#utility.yul\":4862:4880   */\n      swap1\n      pop\n        /* \"#utility.yul\":4488:4886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4892:5010   */\n    tag_225:\n        /* \"#utility.yul\":4979:5003   */\n      tag_227\n        /* \"#utility.yul\":4997:5002   */\n      dup2\n        /* \"#utility.yul\":4979:5003   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4974:4977   */\n      dup3\n        /* \"#utility.yul\":4967:5004   */\n      mstore\n        /* \"#utility.yul\":4892:5010   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5016:5395   */\n    tag_53:\n        /* \"#utility.yul\":5200:5203   */\n      0x00\n        /* \"#utility.yul\":5222:5369   */\n      tag_230\n        /* \"#utility.yul\":5365:5368   */\n      dup3\n        /* \"#utility.yul\":5222:5369   */\n      tag_219\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5215:5369   */\n      swap2\n      pop\n        /* \"#utility.yul\":5386:5389   */\n      dup2\n        /* \"#utility.yul\":5379:5389   */\n      swap1\n      pop\n        /* \"#utility.yul\":5016:5395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5401:5623   */\n    tag_35:\n        /* \"#utility.yul\":5494:5498   */\n      0x00\n        /* \"#utility.yul\":5532:5534   */\n      0x20\n        /* \"#utility.yul\":5521:5530   */\n      dup3\n        /* \"#utility.yul\":5517:5535   */\n      add\n        /* \"#utility.yul\":5509:5535   */\n      swap1\n      pop\n        /* \"#utility.yul\":5545:5616   */\n      tag_232\n        /* \"#utility.yul\":5613:5614   */\n      0x00\n        /* \"#utility.yul\":5602:5611   */\n      dup4\n        /* \"#utility.yul\":5598:5615   */\n      add\n        /* \"#utility.yul\":5589:5595   */\n      dup5\n        /* \"#utility.yul\":5545:5616   */\n      tag_180\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5401:5623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5629:6071   */\n    tag_139:\n        /* \"#utility.yul\":5778:5782   */\n      0x00\n        /* \"#utility.yul\":5816:5818   */\n      0x60\n        /* \"#utility.yul\":5805:5814   */\n      dup3\n        /* \"#utility.yul\":5801:5819   */\n      add\n        /* \"#utility.yul\":5793:5819   */\n      swap1\n      pop\n        /* \"#utility.yul\":5829:5900   */\n      tag_234\n        /* \"#utility.yul\":5897:5898   */\n      0x00\n        /* \"#utility.yul\":5886:5895   */\n      dup4\n        /* \"#utility.yul\":5882:5899   */\n      add\n        /* \"#utility.yul\":5873:5879   */\n      dup7\n        /* \"#utility.yul\":5829:5900   */\n      tag_180\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5910:5982   */\n      tag_235\n        /* \"#utility.yul\":5978:5980   */\n      0x20\n        /* \"#utility.yul\":5967:5976   */\n      dup4\n        /* \"#utility.yul\":5963:5981   */\n      add\n        /* \"#utility.yul\":5954:5960   */\n      dup6\n        /* \"#utility.yul\":5910:5982   */\n      tag_180\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5992:6064   */\n      tag_236\n        /* \"#utility.yul\":6060:6062   */\n      0x40\n        /* \"#utility.yul\":6049:6058   */\n      dup4\n        /* \"#utility.yul\":6045:6063   */\n      add\n        /* \"#utility.yul\":6036:6042   */\n      dup5\n        /* \"#utility.yul\":5992:6064   */\n      tag_225\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5629:6071   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6077:6409   */\n    tag_68:\n        /* \"#utility.yul\":6198:6202   */\n      0x00\n        /* \"#utility.yul\":6236:6238   */\n      0x40\n        /* \"#utility.yul\":6225:6234   */\n      dup3\n        /* \"#utility.yul\":6221:6239   */\n      add\n        /* \"#utility.yul\":6213:6239   */\n      swap1\n      pop\n        /* \"#utility.yul\":6249:6320   */\n      tag_238\n        /* \"#utility.yul\":6317:6318   */\n      0x00\n        /* \"#utility.yul\":6306:6315   */\n      dup4\n        /* \"#utility.yul\":6302:6319   */\n      add\n        /* \"#utility.yul\":6293:6299   */\n      dup6\n        /* \"#utility.yul\":6249:6320   */\n      tag_180\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6330:6402   */\n      tag_239\n        /* \"#utility.yul\":6398:6400   */\n      0x20\n        /* \"#utility.yul\":6387:6396   */\n      dup4\n        /* \"#utility.yul\":6383:6401   */\n      add\n        /* \"#utility.yul\":6374:6380   */\n      dup5\n        /* \"#utility.yul\":6330:6402   */\n      tag_225\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6077:6409   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6415:6665   */\n    tag_16:\n        /* \"#utility.yul\":6522:6526   */\n      0x00\n        /* \"#utility.yul\":6560:6562   */\n      0x20\n        /* \"#utility.yul\":6549:6558   */\n      dup3\n        /* \"#utility.yul\":6545:6563   */\n      add\n        /* \"#utility.yul\":6537:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6573:6658   */\n      tag_241\n        /* \"#utility.yul\":6655:6656   */\n      0x00\n        /* \"#utility.yul\":6644:6653   */\n      dup4\n        /* \"#utility.yul\":6640:6657   */\n      add\n        /* \"#utility.yul\":6631:6637   */\n      dup5\n        /* \"#utility.yul\":6573:6658   */\n      tag_184\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6415:6665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6671:7090   */\n    tag_133:\n        /* \"#utility.yul\":6837:6841   */\n      0x00\n        /* \"#utility.yul\":6875:6877   */\n      0x20\n        /* \"#utility.yul\":6864:6873   */\n      dup3\n        /* \"#utility.yul\":6860:6878   */\n      add\n        /* \"#utility.yul\":6852:6878   */\n      swap1\n      pop\n        /* \"#utility.yul\":6924:6933   */\n      dup2\n        /* \"#utility.yul\":6918:6922   */\n      dup2\n        /* \"#utility.yul\":6914:6934   */\n      sub\n        /* \"#utility.yul\":6910:6911   */\n      0x00\n        /* \"#utility.yul\":6899:6908   */\n      dup4\n        /* \"#utility.yul\":6895:6912   */\n      add\n        /* \"#utility.yul\":6888:6935   */\n      mstore\n        /* \"#utility.yul\":6952:7083   */\n      tag_243\n        /* \"#utility.yul\":7078:7082   */\n      dup2\n        /* \"#utility.yul\":6952:7083   */\n      tag_188\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6944:7083   */\n      swap1\n      pop\n        /* \"#utility.yul\":6671:7090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7096:7515   */\n    tag_59:\n        /* \"#utility.yul\":7262:7266   */\n      0x00\n        /* \"#utility.yul\":7300:7302   */\n      0x20\n        /* \"#utility.yul\":7289:7298   */\n      dup3\n        /* \"#utility.yul\":7285:7303   */\n      add\n        /* \"#utility.yul\":7277:7303   */\n      swap1\n      pop\n        /* \"#utility.yul\":7349:7358   */\n      dup2\n        /* \"#utility.yul\":7343:7347   */\n      dup2\n        /* \"#utility.yul\":7339:7359   */\n      sub\n        /* \"#utility.yul\":7335:7336   */\n      0x00\n        /* \"#utility.yul\":7324:7333   */\n      dup4\n        /* \"#utility.yul\":7320:7337   */\n      add\n        /* \"#utility.yul\":7313:7360   */\n      mstore\n        /* \"#utility.yul\":7377:7508   */\n      tag_245\n        /* \"#utility.yul\":7503:7507   */\n      dup2\n        /* \"#utility.yul\":7377:7508   */\n      tag_194\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7369:7508   */\n      swap1\n      pop\n        /* \"#utility.yul\":7096:7515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7521:7940   */\n    tag_146:\n        /* \"#utility.yul\":7687:7691   */\n      0x00\n        /* \"#utility.yul\":7725:7727   */\n      0x20\n        /* \"#utility.yul\":7714:7723   */\n      dup3\n        /* \"#utility.yul\":7710:7728   */\n      add\n        /* \"#utility.yul\":7702:7728   */\n      swap1\n      pop\n        /* \"#utility.yul\":7774:7783   */\n      dup2\n        /* \"#utility.yul\":7768:7772   */\n      dup2\n        /* \"#utility.yul\":7764:7784   */\n      sub\n        /* \"#utility.yul\":7760:7761   */\n      0x00\n        /* \"#utility.yul\":7749:7758   */\n      dup4\n        /* \"#utility.yul\":7745:7762   */\n      add\n        /* \"#utility.yul\":7738:7785   */\n      mstore\n        /* \"#utility.yul\":7802:7933   */\n      tag_247\n        /* \"#utility.yul\":7928:7932   */\n      dup2\n        /* \"#utility.yul\":7802:7933   */\n      tag_199\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7794:7933   */\n      swap1\n      pop\n        /* \"#utility.yul\":7521:7940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7946:8365   */\n    tag_87:\n        /* \"#utility.yul\":8112:8116   */\n      0x00\n        /* \"#utility.yul\":8150:8152   */\n      0x20\n        /* \"#utility.yul\":8139:8148   */\n      dup3\n        /* \"#utility.yul\":8135:8153   */\n      add\n        /* \"#utility.yul\":8127:8153   */\n      swap1\n      pop\n        /* \"#utility.yul\":8199:8208   */\n      dup2\n        /* \"#utility.yul\":8193:8197   */\n      dup2\n        /* \"#utility.yul\":8189:8209   */\n      sub\n        /* \"#utility.yul\":8185:8186   */\n      0x00\n        /* \"#utility.yul\":8174:8183   */\n      dup4\n        /* \"#utility.yul\":8170:8187   */\n      add\n        /* \"#utility.yul\":8163:8210   */\n      mstore\n        /* \"#utility.yul\":8227:8358   */\n      tag_249\n        /* \"#utility.yul\":8353:8357   */\n      dup2\n        /* \"#utility.yul\":8227:8358   */\n      tag_204\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8219:8358   */\n      swap1\n      pop\n        /* \"#utility.yul\":7946:8365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8790   */\n    tag_99:\n        /* \"#utility.yul\":8537:8541   */\n      0x00\n        /* \"#utility.yul\":8575:8577   */\n      0x20\n        /* \"#utility.yul\":8564:8573   */\n      dup3\n        /* \"#utility.yul\":8560:8578   */\n      add\n        /* \"#utility.yul\":8552:8578   */\n      swap1\n      pop\n        /* \"#utility.yul\":8624:8633   */\n      dup2\n        /* \"#utility.yul\":8618:8622   */\n      dup2\n        /* \"#utility.yul\":8614:8634   */\n      sub\n        /* \"#utility.yul\":8610:8611   */\n      0x00\n        /* \"#utility.yul\":8599:8608   */\n      dup4\n        /* \"#utility.yul\":8595:8612   */\n      add\n        /* \"#utility.yul\":8588:8635   */\n      mstore\n        /* \"#utility.yul\":8652:8783   */\n      tag_251\n        /* \"#utility.yul\":8778:8782   */\n      dup2\n        /* \"#utility.yul\":8652:8783   */\n      tag_209\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8644:8783   */\n      swap1\n      pop\n        /* \"#utility.yul\":8371:8790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8796:9215   */\n    tag_80:\n        /* \"#utility.yul\":8962:8966   */\n      0x00\n        /* \"#utility.yul\":9000:9002   */\n      0x20\n        /* \"#utility.yul\":8989:8998   */\n      dup3\n        /* \"#utility.yul\":8985:9003   */\n      add\n        /* \"#utility.yul\":8977:9003   */\n      swap1\n      pop\n        /* \"#utility.yul\":9049:9058   */\n      dup2\n        /* \"#utility.yul\":9043:9047   */\n      dup2\n        /* \"#utility.yul\":9039:9059   */\n      sub\n        /* \"#utility.yul\":9035:9036   */\n      0x00\n        /* \"#utility.yul\":9024:9033   */\n      dup4\n        /* \"#utility.yul\":9020:9037   */\n      add\n        /* \"#utility.yul\":9013:9060   */\n      mstore\n        /* \"#utility.yul\":9077:9208   */\n      tag_253\n        /* \"#utility.yul\":9203:9207   */\n      dup2\n        /* \"#utility.yul\":9077:9208   */\n      tag_214\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9069:9208   */\n      swap1\n      pop\n        /* \"#utility.yul\":8796:9215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9221:9443   */\n    tag_44:\n        /* \"#utility.yul\":9314:9318   */\n      0x00\n        /* \"#utility.yul\":9352:9354   */\n      0x20\n        /* \"#utility.yul\":9341:9350   */\n      dup3\n        /* \"#utility.yul\":9337:9355   */\n      add\n        /* \"#utility.yul\":9329:9355   */\n      swap1\n      pop\n        /* \"#utility.yul\":9365:9436   */\n      tag_255\n        /* \"#utility.yul\":9433:9434   */\n      0x00\n        /* \"#utility.yul\":9422:9431   */\n      dup4\n        /* \"#utility.yul\":9418:9435   */\n      add\n        /* \"#utility.yul\":9409:9415   */\n      dup5\n        /* \"#utility.yul\":9365:9436   */\n      tag_225\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9221:9443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9530:9677   */\n    tag_222:\n        /* \"#utility.yul\":9631:9642   */\n      0x00\n        /* \"#utility.yul\":9668:9671   */\n      dup2\n        /* \"#utility.yul\":9653:9671   */\n      swap1\n      pop\n        /* \"#utility.yul\":9530:9677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9683:9852   */\n    tag_191:\n        /* \"#utility.yul\":9767:9778   */\n      0x00\n        /* \"#utility.yul\":9801:9807   */\n      dup3\n        /* \"#utility.yul\":9796:9799   */\n      dup3\n        /* \"#utility.yul\":9789:9808   */\n      mstore\n        /* \"#utility.yul\":9841:9845   */\n      0x20\n        /* \"#utility.yul\":9836:9839   */\n      dup3\n        /* \"#utility.yul\":9832:9846   */\n      add\n        /* \"#utility.yul\":9817:9846   */\n      swap1\n      pop\n        /* \"#utility.yul\":9683:9852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9858:10043   */\n    tag_89:\n        /* \"#utility.yul\":9898:9899   */\n      0x00\n        /* \"#utility.yul\":9915:9935   */\n      tag_261\n        /* \"#utility.yul\":9933:9934   */\n      dup3\n        /* \"#utility.yul\":9915:9935   */\n      tag_228\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9910:9935   */\n      swap2\n      pop\n        /* \"#utility.yul\":9949:9969   */\n      tag_262\n        /* \"#utility.yul\":9967:9968   */\n      dup4\n        /* \"#utility.yul\":9949:9969   */\n      tag_228\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9944:9969   */\n      swap3\n      pop\n        /* \"#utility.yul\":9988:9989   */\n      dup3\n        /* \"#utility.yul\":9978:10013   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":9993:10011   */\n      tag_264\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9978:10013   */\n    tag_263:\n        /* \"#utility.yul\":10035:10036   */\n      dup3\n        /* \"#utility.yul\":10032:10033   */\n      dup3\n        /* \"#utility.yul\":10028:10037   */\n      div\n        /* \"#utility.yul\":10023:10037   */\n      swap1\n      pop\n        /* \"#utility.yul\":9858:10043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10049:10397   */\n    tag_91:\n        /* \"#utility.yul\":10089:10096   */\n      0x00\n        /* \"#utility.yul\":10112:10132   */\n      tag_267\n        /* \"#utility.yul\":10130:10131   */\n      dup3\n        /* \"#utility.yul\":10112:10132   */\n      tag_228\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10107:10132   */\n      swap2\n      pop\n        /* \"#utility.yul\":10146:10166   */\n      tag_268\n        /* \"#utility.yul\":10164:10165   */\n      dup4\n        /* \"#utility.yul\":10146:10166   */\n      tag_228\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10141:10166   */\n      swap3\n      pop\n        /* \"#utility.yul\":10334:10335   */\n      dup2\n        /* \"#utility.yul\":10266:10332   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10262:10336   */\n      div\n        /* \"#utility.yul\":10259:10260   */\n      dup4\n        /* \"#utility.yul\":10256:10337   */\n      gt\n        /* \"#utility.yul\":10251:10252   */\n      dup3\n        /* \"#utility.yul\":10244:10253   */\n      iszero\n        /* \"#utility.yul\":10237:10254   */\n      iszero\n        /* \"#utility.yul\":10233:10338   */\n      and\n        /* \"#utility.yul\":10230:10361   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":10341:10359   */\n      tag_270\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10230:10361   */\n    tag_269:\n        /* \"#utility.yul\":10389:10390   */\n      dup3\n        /* \"#utility.yul\":10386:10387   */\n      dup3\n        /* \"#utility.yul\":10382:10391   */\n      mul\n        /* \"#utility.yul\":10371:10391   */\n      swap1\n      pop\n        /* \"#utility.yul\":10049:10397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10403:10499   */\n    tag_183:\n        /* \"#utility.yul\":10440:10447   */\n      0x00\n        /* \"#utility.yul\":10469:10493   */\n      tag_273\n        /* \"#utility.yul\":10487:10492   */\n      dup3\n        /* \"#utility.yul\":10469:10493   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10458:10493   */\n      swap1\n      pop\n        /* \"#utility.yul\":10403:10499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10505:10595   */\n    tag_275:\n        /* \"#utility.yul\":10539:10546   */\n      0x00\n        /* \"#utility.yul\":10582:10587   */\n      dup2\n        /* \"#utility.yul\":10575:10588   */\n      iszero\n        /* \"#utility.yul\":10568:10589   */\n      iszero\n        /* \"#utility.yul\":10557:10589   */\n      swap1\n      pop\n        /* \"#utility.yul\":10505:10595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10601:10727   */\n    tag_274:\n        /* \"#utility.yul\":10638:10645   */\n      0x00\n        /* \"#utility.yul\":10678:10720   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10671:10676   */\n      dup3\n        /* \"#utility.yul\":10667:10721   */\n      and\n        /* \"#utility.yul\":10656:10721   */\n      swap1\n      pop\n        /* \"#utility.yul\":10601:10727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10733:10810   */\n    tag_228:\n        /* \"#utility.yul\":10770:10777   */\n      0x00\n        /* \"#utility.yul\":10799:10804   */\n      dup2\n        /* \"#utility.yul\":10788:10804   */\n      swap1\n      pop\n        /* \"#utility.yul\":10733:10810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10816:10956   */\n    tag_187:\n        /* \"#utility.yul\":10880:10889   */\n      0x00\n        /* \"#utility.yul\":10913:10950   */\n      tag_280\n        /* \"#utility.yul\":10944:10949   */\n      dup3\n        /* \"#utility.yul\":10913:10950   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10900:10950   */\n      swap1\n      pop\n        /* \"#utility.yul\":10816:10956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10962:11088   */\n    tag_281:\n        /* \"#utility.yul\":11012:11021   */\n      0x00\n        /* \"#utility.yul\":11045:11082   */\n      tag_283\n        /* \"#utility.yul\":11076:11081   */\n      dup3\n        /* \"#utility.yul\":11045:11082   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11032:11082   */\n      swap1\n      pop\n        /* \"#utility.yul\":10962:11088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11094:11207   */\n    tag_284:\n        /* \"#utility.yul\":11144:11153   */\n      0x00\n        /* \"#utility.yul\":11177:11201   */\n      tag_286\n        /* \"#utility.yul\":11195:11200   */\n      dup3\n        /* \"#utility.yul\":11177:11201   */\n      tag_274\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11164:11201   */\n      swap1\n      pop\n        /* \"#utility.yul\":11094:11207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11213:11393   */\n    tag_271:\n        /* \"#utility.yul\":11261:11338   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11258:11259   */\n      0x00\n        /* \"#utility.yul\":11251:11339   */\n      mstore\n        /* \"#utility.yul\":11358:11362   */\n      0x11\n        /* \"#utility.yul\":11355:11356   */\n      0x04\n        /* \"#utility.yul\":11348:11363   */\n      mstore\n        /* \"#utility.yul\":11382:11386   */\n      0x24\n        /* \"#utility.yul\":11379:11380   */\n      0x00\n        /* \"#utility.yul\":11372:11387   */\n      revert\n        /* \"#utility.yul\":11399:11579   */\n    tag_265:\n        /* \"#utility.yul\":11447:11524   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11444:11445   */\n      0x00\n        /* \"#utility.yul\":11437:11525   */\n      mstore\n        /* \"#utility.yul\":11544:11548   */\n      0x12\n        /* \"#utility.yul\":11541:11542   */\n      0x04\n        /* \"#utility.yul\":11534:11549   */\n      mstore\n        /* \"#utility.yul\":11568:11572   */\n      0x24\n        /* \"#utility.yul\":11565:11566   */\n      0x00\n        /* \"#utility.yul\":11558:11573   */\n      revert\n        /* \"#utility.yul\":11708:11825   */\n    tag_166:\n        /* \"#utility.yul\":11817:11818   */\n      0x00\n        /* \"#utility.yul\":11814:11815   */\n      dup1\n        /* \"#utility.yul\":11807:11819   */\n      revert\n        /* \"#utility.yul\":11831:12056   */\n    tag_193:\n        /* \"#utility.yul\":11971:12005   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11967:11968   */\n      0x00\n        /* \"#utility.yul\":11959:11965   */\n      dup3\n        /* \"#utility.yul\":11955:11969   */\n      add\n        /* \"#utility.yul\":11948:12006   */\n      mstore\n        /* \"#utility.yul\":12040:12048   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12035:12037   */\n      0x20\n        /* \"#utility.yul\":12027:12033   */\n      dup3\n        /* \"#utility.yul\":12023:12038   */\n      add\n        /* \"#utility.yul\":12016:12049   */\n      mstore\n        /* \"#utility.yul\":11831:12056   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12062:12232   */\n    tag_198:\n        /* \"#utility.yul\":12202:12224   */\n      0x4661696c656420746f2073656e64204574686572000000000000000000000000\n        /* \"#utility.yul\":12198:12199   */\n      0x00\n        /* \"#utility.yul\":12190:12196   */\n      dup3\n        /* \"#utility.yul\":12186:12200   */\n      add\n        /* \"#utility.yul\":12179:12225   */\n      mstore\n        /* \"#utility.yul\":12062:12232   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12238:12409   */\n    tag_203:\n        /* \"#utility.yul\":12378:12401   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":12374:12375   */\n      0x00\n        /* \"#utility.yul\":12366:12372   */\n      dup3\n        /* \"#utility.yul\":12362:12376   */\n      add\n        /* \"#utility.yul\":12355:12402   */\n      mstore\n        /* \"#utility.yul\":12238:12409   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12415:12591   */\n    tag_208:\n        /* \"#utility.yul\":12555:12583   */\n      0x4d696e696d756d20747261646520616d6f756e74203120626e62000000000000\n        /* \"#utility.yul\":12551:12552   */\n      0x00\n        /* \"#utility.yul\":12543:12549   */\n      dup3\n        /* \"#utility.yul\":12539:12553   */\n      add\n        /* \"#utility.yul\":12532:12584   */\n      mstore\n        /* \"#utility.yul\":12415:12591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12597:12763   */\n    tag_213:\n        /* \"#utility.yul\":12737:12755   */\n      0x5472616e73666572206661696c65642100000000000000000000000000000000\n        /* \"#utility.yul\":12733:12734   */\n      0x00\n        /* \"#utility.yul\":12725:12731   */\n      dup3\n        /* \"#utility.yul\":12721:12735   */\n      add\n        /* \"#utility.yul\":12714:12756   */\n      mstore\n        /* \"#utility.yul\":12597:12763   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12769:12951   */\n    tag_218:\n        /* \"#utility.yul\":12909:12943   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12905:12906   */\n      0x00\n        /* \"#utility.yul\":12897:12903   */\n      dup3\n        /* \"#utility.yul\":12893:12907   */\n      add\n        /* \"#utility.yul\":12886:12944   */\n      mstore\n        /* \"#utility.yul\":12769:12951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12957:13071   */\n    tag_224:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13077:13199   */\n    tag_151:\n        /* \"#utility.yul\":13150:13174   */\n      tag_300\n        /* \"#utility.yul\":13168:13173   */\n      dup2\n        /* \"#utility.yul\":13150:13174   */\n      tag_183\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":13143:13148   */\n      dup2\n        /* \"#utility.yul\":13140:13175   */\n      eq\n        /* \"#utility.yul\":13130:13193   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":13189:13190   */\n      0x00\n        /* \"#utility.yul\":13186:13187   */\n      dup1\n        /* \"#utility.yul\":13179:13191   */\n      revert\n        /* \"#utility.yul\":13130:13193   */\n    tag_301:\n        /* \"#utility.yul\":13077:13199   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13205:13321   */\n    tag_155:\n        /* \"#utility.yul\":13275:13296   */\n      tag_303\n        /* \"#utility.yul\":13290:13295   */\n      dup2\n        /* \"#utility.yul\":13275:13296   */\n      tag_275\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13268:13273   */\n      dup2\n        /* \"#utility.yul\":13265:13297   */\n      eq\n        /* \"#utility.yul\":13255:13315   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":13311:13312   */\n      0x00\n        /* \"#utility.yul\":13308:13309   */\n      dup1\n        /* \"#utility.yul\":13301:13313   */\n      revert\n        /* \"#utility.yul\":13255:13315   */\n    tag_304:\n        /* \"#utility.yul\":13205:13321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13327:13449   */\n    tag_159:\n        /* \"#utility.yul\":13400:13424   */\n      tag_306\n        /* \"#utility.yul\":13418:13423   */\n      dup2\n        /* \"#utility.yul\":13400:13424   */\n      tag_228\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13393:13398   */\n      dup2\n        /* \"#utility.yul\":13390:13425   */\n      eq\n        /* \"#utility.yul\":13380:13443   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":13439:13440   */\n      0x00\n        /* \"#utility.yul\":13436:13437   */\n      dup1\n        /* \"#utility.yul\":13429:13441   */\n      revert\n        /* \"#utility.yul\":13380:13443   */\n    tag_307:\n        /* \"#utility.yul\":13327:13449   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205b6504457164337bde517d96c618ae7ae8028ceea45219830af79bcb2a95481064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_285": {
									"entryPoint": null,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_57": {
									"entryPoint": 230,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_249": {
									"entryPoint": 238,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d6100226100e660201b60201c565b6100ee60201b60201c565b620186a060028190555073e5ba47fd94cb645ba4119222e34fb33f59c7cd90600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739326bfa02add2366b30bacb125260af641031331600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101b2565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6111d6806101c16000396000f3fe6080604052600436106100865760003560e01c8063817e9d3111610059578063817e9d31146101005780638da5cb5b14610129578063ade87ecc14610154578063ebc4197c1461017d578063f2fde38b146101a857610086565b806323b160ac1461008b5780633cb40e16146100b6578063715018a6146100cd57806380c31426146100e4575b600080fd5b34801561009757600080fd5b506100a06101d1565b6040516100ad9190610dbe565b60405180910390f35b3480156100c257600080fd5b506100cb6101f7565b005b3480156100d957600080fd5b506100e261040e565b005b6100fe60048036038101906100f99190610bb2565b610496565b005b34801561010c57600080fd5b5061012760048036038101906101229190610bb2565b610668565b005b34801561013557600080fd5b5061013e6106ee565b60405161014b9190610d43565b60405180910390f35b34801561016057600080fd5b5061017b60048036038101906101769190610bb2565b610717565b005b34801561018957600080fd5b50610192610860565b60405161019f9190610e99565b60405180910390f35b3480156101b457600080fd5b506101cf60048036038101906101ca9190610b58565b610866565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102016106ee565b73ffffffffffffffffffffffffffffffffffffffff164760405161022490610d2e565b60006040518083038185875af1925050503d8060008114610261576040519150601f19603f3d011682016040523d82523d6000602084013e610266565b606091505b50509050806102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a190610df9565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6102f06106ee565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161034b9190610d43565b60206040518083038186803b15801561036357600080fd5b505afa158015610377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039b9190610bdf565b6040518363ffffffff1660e01b81526004016103b8929190610d95565b602060405180830381600087803b1580156103d257600080fd5b505af11580156103e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040a9190610b85565b5050565b61041661095e565b73ffffffffffffffffffffffffffffffffffffffff166104346106ee565b73ffffffffffffffffffffffffffffffffffffffff161461048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190610e79565b60405180910390fd5b6104946000610966565b565b6002548110156104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d290610e39565b60405180910390fd5b6000670de0b6b3a7640000600254836104f49190610ed0565b6104fe9190610f01565b9050600061050a6106ee565b73ffffffffffffffffffffffffffffffffffffffff168260405161052d90610d2e565b60006040518083038185875af1925050503d806000811461056a576040519150601f19603f3d011682016040523d82523d6000602084013e61056f565b606091505b50509050806105b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105aa90610e59565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610610929190610d95565b602060405180830381600087803b15801561062a57600080fd5b505af115801561063e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106629190610b85565b50505050565b61067061095e565b73ffffffffffffffffffffffffffffffffffffffff1661068e6106ee565b73ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90610e79565b60405180910390fd5b8060028190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481101561075c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075390610e39565b60405180910390fd5b61078a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610a2a565b6000670de0b6b3a7640000600254836107a39190610ed0565b6107ad9190610f01565b905060003373ffffffffffffffffffffffffffffffffffffffff16826040516107d590610d2e565b60006040518083038185875af1925050503d8060008114610812576040519150601f19603f3d011682016040523d82523d6000602084013e610817565b606091505b505090508061085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085290610e59565b60405180910390fd5b505050565b60025481565b61086e61095e565b73ffffffffffffffffffffffffffffffffffffffff1661088c6106ee565b73ffffffffffffffffffffffffffffffffffffffff16146108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990610e79565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094990610dd9565b60405180910390fd5b61095b81610966565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401610a6993929190610d5e565b602060405180830381600087803b158015610a8357600080fd5b505af1158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb9190610b85565b905080610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490610e19565b60405180910390fd5b5050505050565b600081359050610b138161115b565b92915050565b600081519050610b2881611172565b92915050565b600081359050610b3d81611189565b92915050565b600081519050610b5281611189565b92915050565b600060208284031215610b6e57610b6d611037565b5b6000610b7c84828501610b04565b91505092915050565b600060208284031215610b9b57610b9a611037565b5b6000610ba984828501610b19565b91505092915050565b600060208284031215610bc857610bc7611037565b5b6000610bd684828501610b2e565b91505092915050565b600060208284031215610bf557610bf4611037565b5b6000610c0384828501610b43565b91505092915050565b610c1581610f5b565b82525050565b610c2481610fa3565b82525050565b6000610c37602683610ebf565b9150610c428261103c565b604082019050919050565b6000610c5a601483610ebf565b9150610c658261108b565b602082019050919050565b6000610c7d601583610ebf565b9150610c88826110b4565b602082019050919050565b6000610ca0601a83610ebf565b9150610cab826110dd565b602082019050919050565b6000610cc3601083610ebf565b9150610cce82611106565b602082019050919050565b6000610ce6602083610ebf565b9150610cf18261112f565b602082019050919050565b6000610d09600083610eb4565b9150610d1482611158565b600082019050919050565b610d2881610f99565b82525050565b6000610d3982610cfc565b9150819050919050565b6000602082019050610d586000830184610c0c565b92915050565b6000606082019050610d736000830186610c0c565b610d806020830185610c0c565b610d8d6040830184610d1f565b949350505050565b6000604082019050610daa6000830185610c0c565b610db76020830184610d1f565b9392505050565b6000602082019050610dd36000830184610c1b565b92915050565b60006020820190508181036000830152610df281610c2a565b9050919050565b60006020820190508181036000830152610e1281610c4d565b9050919050565b60006020820190508181036000830152610e3281610c70565b9050919050565b60006020820190508181036000830152610e5281610c93565b9050919050565b60006020820190508181036000830152610e7281610cb6565b9050919050565b60006020820190508181036000830152610e9281610cd9565b9050919050565b6000602082019050610eae6000830184610d1f565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610edb82610f99565b9150610ee683610f99565b925082610ef657610ef5611008565b5b828204905092915050565b6000610f0c82610f99565b9150610f1783610f99565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5057610f4f610fd9565b5b828202905092915050565b6000610f6682610f79565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610fae82610fb5565b9050919050565b6000610fc082610fc7565b9050919050565b6000610fd282610f79565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f4d696e696d756d20747261646520616d6f756e74203120626e62000000000000600082015250565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b61116481610f5b565b811461116f57600080fd5b50565b61117b81610f6d565b811461118657600080fd5b50565b61119281610f99565b811461119d57600080fd5b5056fea26469706673582212205b6504457164337bde517d96c618ae7ae8028ceea45219830af79bcb2a95481064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0xE6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xEE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x186A0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH20 0xE5BA47FD94CB645BA4119222E34FB33F59C7CD90 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x9326BFA02ADD2366B30BACB125260AF641031331 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x11D6 DUP1 PUSH2 0x1C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817E9D31 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xADE87ECC EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xEBC4197C EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A8 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x23B160AC EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3CB40E16 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x80C31426 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x1F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x224 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x266 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A1 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x2F0 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP3 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x434 PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x48A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x481 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x494 PUSH1 0x0 PUSH2 0x966 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x50A PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x52D SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x56F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP3 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x670 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x68E PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7D5 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x817 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x86E PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88C PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95B DUP2 PUSH2 0x966 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA69 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF4 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB13 DUP2 PUSH2 0x115B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB3D DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB52 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6D PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB7C DUP5 DUP3 DUP6 ADD PUSH2 0xB04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBD6 DUP5 DUP3 DUP6 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF4 PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP5 DUP3 DUP6 ADD PUSH2 0xB43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC24 DUP2 PUSH2 0xFA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC37 PUSH1 0x26 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP3 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5A PUSH1 0x14 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC65 DUP3 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH1 0x15 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC88 DUP3 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA0 PUSH1 0x1A DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCAB DUP3 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC3 PUSH1 0x10 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCCE DUP3 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE6 PUSH1 0x20 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCF1 DUP3 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD09 PUSH1 0x0 DUP4 PUSH2 0xEB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD14 DUP3 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD28 DUP2 PUSH2 0xF99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP3 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD73 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xDB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF2 DUP2 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE12 DUP2 PUSH2 0xC4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE32 DUP2 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE52 DUP2 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE72 DUP2 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE92 DUP2 PUSH2 0xCD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDB DUP3 PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE6 DUP4 PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C DUP3 PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP PUSH2 0xF17 DUP4 PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH2 0xF79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAE DUP3 PUSH2 0xFB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC0 DUP3 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD2 DUP3 PUSH2 0xF79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20747261646520616D6F756E74203120626E62000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1164 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP2 EQ PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0xF6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1192 DUP2 PUSH2 0xF99 JUMP JUMPDEST DUP2 EQ PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH6 0x4457164337B 0xDE MLOAD PUSH30 0x96C618AE7AE8028CEEA45219830AF79BCB2A95481064736F6C6343000807 STOP CALLER ",
							"sourceMap": "146:2168:4:-:0;;;398:267;;;;;;;;;;914:32:3;933:12;:10;;;:12;;:::i;:::-;914:18;;;:32;;:::i;:::-;431:6:4;418:10;:19;;;;457:42;442:5;;:58;;;;;;;;;;;;;;;;;;616:42;582:9;;:77;;;;;;;;;;;;;;;;;;146:2168;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2263:187:3:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;146:2168:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BnbToSafuu_262": {
									"entryPoint": 2144,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_57": {
									"entryPoint": 2398,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferFrom_466": {
									"entryPoint": 2602,
									"id": 466,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_249": {
									"entryPoint": 2406,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buySafuu_336": {
									"entryPoint": 1174,
									"id": 336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_178": {
									"entryPoint": 1774,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_206": {
									"entryPoint": 1038,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safuu_265": {
									"entryPoint": 465,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellSafuu_390": {
									"entryPoint": 1815,
									"id": 390,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFactor_402": {
									"entryPoint": 1640,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_229": {
									"entryPoint": 2150,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToOwner_439": {
									"entryPoint": 503,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$145_to_t_address": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13452:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:5",
														"type": ""
													}
												],
												"src": "295:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:5",
														"type": ""
													}
												],
												"src": "440:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "703:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:5"
															},
															"nodeType": "YulIf",
															"src": "665:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "794:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "809:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "823:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "813:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "838:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "873:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "884:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "869:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "869:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "893:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "848:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "848:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "838:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:5",
														"type": ""
													}
												],
												"src": "589:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1044:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1046:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1046:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1028:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1015:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1015:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:32:5"
															},
															"nodeType": "YulIf",
															"src": "1008:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1137:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1152:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1166:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1156:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1181:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1224:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1235:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1220:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1220:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1244:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1191:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1181:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "979:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "991:6:5",
														"type": ""
													}
												],
												"src": "924:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:5"
															},
															"nodeType": "YulIf",
															"src": "1351:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1524:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1559:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1570:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1555:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1555:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1579:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1534:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1534:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:5",
														"type": ""
													}
												],
												"src": "1275:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1733:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1735:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1735:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1735:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1717:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1704:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:32:5"
															},
															"nodeType": "YulIf",
															"src": "1697:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1826:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1841:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1855:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1845:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1870:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1916:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1927:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1936:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1880:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1880:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1870:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1657:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1668:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1680:6:5",
														"type": ""
													}
												],
												"src": "1610:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2032:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2049:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2072:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2054:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2054:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2020:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2027:3:5",
														"type": ""
													}
												],
												"src": "1967:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2170:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2187:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2237:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$145_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2192:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2158:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2165:3:5",
														"type": ""
													}
												],
												"src": "2091:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2402:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2412:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2478:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2419:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2419:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2412:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2584:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2495:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2495:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2597:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2608:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2390:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2398:3:5",
														"type": ""
													}
												],
												"src": "2256:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2774:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2784:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2850:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2855:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2791:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2784:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2956:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																	"nodeType": "YulIdentifier",
																	"src": "2867:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2867:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2969:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2980:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2985:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2969:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2762:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2770:3:5",
														"type": ""
													}
												],
												"src": "2628:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3146:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3156:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3222:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3163:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3156:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3328:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nodeType": "YulIdentifier",
																	"src": "3239:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3239:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3341:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3352:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3134:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3142:3:5",
														"type": ""
													}
												],
												"src": "3000:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3518:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3528:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3594:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3599:2:5",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3535:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3528:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3700:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																	"nodeType": "YulIdentifier",
																	"src": "3611:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3611:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3713:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3724:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3720:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3713:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3514:3:5",
														"type": ""
													}
												],
												"src": "3372:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3890:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3900:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3966:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3907:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4072:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																	"nodeType": "YulIdentifier",
																	"src": "3983:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3983:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4085:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4096:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4092:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3878:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3886:3:5",
														"type": ""
													}
												],
												"src": "3744:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4338:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4343:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4279:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4272:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4444:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4355:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4355:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4355:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4457:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4468:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4457:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4250:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4258:3:5",
														"type": ""
													}
												],
												"src": "4116:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4651:235:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4661:90:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4744:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4668:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:83:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4661:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4849:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "4760:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4760:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4760:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4862:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4873:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4878:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4869:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:11:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4639:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4647:3:5",
														"type": ""
													}
												],
												"src": "4488:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4974:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4997:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4979:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4967:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4945:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4952:3:5",
														"type": ""
													}
												],
												"src": "4892:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5204:191:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5215:154:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5365:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5222:141:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:147:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5379:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5386:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5379:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5191:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5200:3:5",
														"type": ""
													}
												],
												"src": "5016:379:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5499:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5509:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5521:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5532:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5517:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5509:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5589:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5602:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5613:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5545:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5471:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5483:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5494:4:5",
														"type": ""
													}
												],
												"src": "5401:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5783:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5793:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5805:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5801:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5801:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5793:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5873:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5886:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5897:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5882:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5829:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5829:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5954:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5967:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5978:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5963:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5963:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5910:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5910:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6036:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6049:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6060:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6045:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6045:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5992:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5992:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5739:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5751:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5759:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5767:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5778:4:5",
														"type": ""
													}
												],
												"src": "5629:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6203:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6213:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6225:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6236:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6213:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6293:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6249:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6249:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6374:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6387:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6398:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6383:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6330:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6330:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6330:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6167:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6179:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6187:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6198:4:5",
														"type": ""
													}
												],
												"src": "6077:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6527:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6537:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6549:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6545:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6537:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6631:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6644:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6655:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6640:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6640:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6573:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6573:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6499:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6511:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6522:4:5",
														"type": ""
													}
												],
												"src": "6415:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6842:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6852:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6864:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6875:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6860:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6852:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6899:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6910:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6895:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6895:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6918:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6924:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6914:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6914:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6888:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6888:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6944:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7078:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6952:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6952:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6944:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6822:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6837:4:5",
														"type": ""
													}
												],
												"src": "6671:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7277:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7289:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7300:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7285:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7277:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7324:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7343:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7349:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7339:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7339:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7313:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7313:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7313:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7369:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7503:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7377:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7377:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7369:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7247:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7262:4:5",
														"type": ""
													}
												],
												"src": "7096:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7692:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7702:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7714:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7725:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7710:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7710:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7702:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7749:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7760:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7768:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7774:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7764:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7764:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7738:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7738:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7738:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7794:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7928:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7802:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7794:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7672:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7687:4:5",
														"type": ""
													}
												],
												"src": "7521:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8117:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8127:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8139:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8135:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8127:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8185:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8170:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8193:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8199:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8189:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8189:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8163:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8163:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8163:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8219:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8353:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8227:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8227:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8219:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8097:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8112:4:5",
														"type": ""
													}
												],
												"src": "7946:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8542:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8552:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8564:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8575:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8560:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8552:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8599:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8610:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8595:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8595:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8618:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8624:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8614:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8614:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8588:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8588:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8644:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8778:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8652:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8644:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8522:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8537:4:5",
														"type": ""
													}
												],
												"src": "8371:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8967:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8977:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8989:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9000:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8985:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8977:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9024:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9035:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9020:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9020:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9043:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9049:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9013:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9013:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9013:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9069:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9203:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9077:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9069:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8947:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8962:4:5",
														"type": ""
													}
												],
												"src": "8796:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9319:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9329:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9341:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9352:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9337:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9329:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9409:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9422:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9433:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9418:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9418:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9365:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9365:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9365:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9291:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9303:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9314:4:5",
														"type": ""
													}
												],
												"src": "9221:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9489:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9499:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9509:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9482:6:5",
														"type": ""
													}
												],
												"src": "9449:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9643:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9653:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9668:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9653:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9615:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9620:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9631:11:5",
														"type": ""
													}
												],
												"src": "9530:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9779:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9796:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9801:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9789:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9789:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9789:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9817:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9836:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9841:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9832:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9817:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9751:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9756:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9767:11:5",
														"type": ""
													}
												],
												"src": "9683:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9900:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9910:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9933:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9915:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9915:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9910:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9944:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9967:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9949:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9949:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9944:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9991:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9993:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9993:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9993:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9988:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9981:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9981:9:5"
															},
															"nodeType": "YulIf",
															"src": "9978:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10023:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10032:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10035:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10028:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10028:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10023:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9889:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9892:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9898:1:5",
														"type": ""
													}
												],
												"src": "9858:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10097:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10107:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10130:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10112:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10112:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10107:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10141:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10146:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10146:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10141:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10339:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10341:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10341:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10341:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10251:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10244:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10244:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10237:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10237:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10259:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10266:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10334:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10262:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10262:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10256:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10256:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10233:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:105:5"
															},
															"nodeType": "YulIf",
															"src": "10230:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10371:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10386:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10389:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10382:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10382:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10371:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10080:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10083:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10089:7:5",
														"type": ""
													}
												],
												"src": "10049:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10448:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10458:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10487:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10469:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10469:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10458:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10430:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10440:7:5",
														"type": ""
													}
												],
												"src": "10403:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10547:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10557:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10582:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10575:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10575:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10568:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10557:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10529:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10539:7:5",
														"type": ""
													}
												],
												"src": "10505:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10646:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10656:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10671:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10678:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10667:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10667:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10656:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10628:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10638:7:5",
														"type": ""
													}
												],
												"src": "10601:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10778:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10788:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10799:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10788:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10760:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10770:7:5",
														"type": ""
													}
												],
												"src": "10733:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10890:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10900:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10944:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10913:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10913:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10900:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$145_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10870:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10880:9:5",
														"type": ""
													}
												],
												"src": "10816:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11022:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11032:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11076:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11045:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11045:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11032:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11002:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11012:9:5",
														"type": ""
													}
												],
												"src": "10962:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11154:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11164:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11195:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11177:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11164:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11134:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11144:9:5",
														"type": ""
													}
												],
												"src": "11094:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11241:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11258:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11261:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11251:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11251:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11251:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11355:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11358:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11348:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11348:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11348:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11379:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11382:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11372:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11372:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11213:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11427:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11444:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11447:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11437:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11437:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11437:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11541:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11544:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11534:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11534:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11568:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11558:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11558:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11558:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11399:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11674:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11691:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11684:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11684:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11684:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11585:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11797:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11814:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11817:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11807:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11807:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11807:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11708:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11937:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11959:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11967:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11955:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11971:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11948:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11948:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11948:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12027:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12035:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12023:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12023:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12040:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12016:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12016:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12016:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11929:6:5",
														"type": ""
													}
												],
												"src": "11831:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12168:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12190:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12198:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12186:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12186:14:5"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12202:22:5",
																		"type": "",
																		"value": "Failed to send Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12179:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12179:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12160:6:5",
														"type": ""
													}
												],
												"src": "12062:170:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12344:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12366:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12374:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12362:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12362:14:5"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12378:23:5",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12355:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12355:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12355:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12336:6:5",
														"type": ""
													}
												],
												"src": "12238:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12521:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12543:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12551:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12539:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12539:14:5"
																	},
																	{
																		"hexValue": "4d696e696d756d20747261646520616d6f756e74203120626e62",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12555:28:5",
																		"type": "",
																		"value": "Minimum trade amount 1 bnb"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12532:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12532:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12532:52:5"
														}
													]
												},
												"name": "store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12513:6:5",
														"type": ""
													}
												],
												"src": "12415:176:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12703:60:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12725:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12733:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12721:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12721:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12737:18:5",
																		"type": "",
																		"value": "Transfer failed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12714:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12714:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12695:6:5",
														"type": ""
													}
												],
												"src": "12597:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12875:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12897:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12905:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12893:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12893:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12909:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12886:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12886:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12886:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12867:6:5",
														"type": ""
													}
												],
												"src": "12769:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13063:8:5",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13055:6:5",
														"type": ""
													}
												],
												"src": "12957:114:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13120:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13177:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13186:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13189:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13179:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13179:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13179:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13143:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13168:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13150:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13150:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13140:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13140:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13133:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13133:43:5"
															},
															"nodeType": "YulIf",
															"src": "13130:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13113:5:5",
														"type": ""
													}
												],
												"src": "13077:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13245:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13299:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13308:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13311:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13301:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13301:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13301:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13268:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13290:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13275:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13275:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13265:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13265:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13258:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13258:40:5"
															},
															"nodeType": "YulIf",
															"src": "13255:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13238:5:5",
														"type": ""
													}
												],
												"src": "13205:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13370:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13427:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13436:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13439:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13429:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13429:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13429:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13393:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13418:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13400:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13400:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13390:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13390:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13383:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13383:43:5"
															},
															"nodeType": "YulIf",
															"src": "13380:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13363:5:5",
														"type": ""
													}
												],
												"src": "13327:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$145_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$145_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum trade amount 1 bnb\")\n\n    }\n\n    function store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed!\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817E9D31 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0xADE87ECC EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xEBC4197C EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A8 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x23B160AC EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x3CB40E16 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x80C31426 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCB PUSH2 0x1F7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE2 PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x860 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x224 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x266 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A1 SWAP1 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x2F0 PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x377 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B8 SWAP3 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x416 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x434 PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x48A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x481 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x494 PUSH1 0x0 PUSH2 0x966 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x50A PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x52D SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x56F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AA SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP3 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x670 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x68E PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xA2A JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH2 0x7AD SWAP2 SWAP1 PUSH2 0xF01 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7D5 SWAP1 PUSH2 0xD2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x817 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x852 SWAP1 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x86E PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88C PUSH2 0x6EE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D9 SWAP1 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x949 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x95B DUP2 PUSH2 0x966 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA69 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA97 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABB SWAP2 SWAP1 PUSH2 0xB85 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF4 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB13 DUP2 PUSH2 0x115B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB28 DUP2 PUSH2 0x1172 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB3D DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB52 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6E JUMPI PUSH2 0xB6D PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB7C DUP5 DUP3 DUP6 ADD PUSH2 0xB04 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB9A PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBA9 DUP5 DUP3 DUP6 ADD PUSH2 0xB19 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC8 JUMPI PUSH2 0xBC7 PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBD6 DUP5 DUP3 DUP6 ADD PUSH2 0xB2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF4 PUSH2 0x1037 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP5 DUP3 DUP6 ADD PUSH2 0xB43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC24 DUP2 PUSH2 0xFA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC37 PUSH1 0x26 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP3 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5A PUSH1 0x14 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC65 DUP3 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7D PUSH1 0x15 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xC88 DUP3 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA0 PUSH1 0x1A DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCAB DUP3 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC3 PUSH1 0x10 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCCE DUP3 PUSH2 0x1106 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE6 PUSH1 0x20 DUP4 PUSH2 0xEBF JUMP JUMPDEST SWAP2 POP PUSH2 0xCF1 DUP3 PUSH2 0x112F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD09 PUSH1 0x0 DUP4 PUSH2 0xEB4 JUMP JUMPDEST SWAP2 POP PUSH2 0xD14 DUP3 PUSH2 0x1158 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD28 DUP2 PUSH2 0xF99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD39 DUP3 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD58 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC0C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD73 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xC0C JUMP JUMPDEST PUSH2 0xDB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF2 DUP2 PUSH2 0xC2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE12 DUP2 PUSH2 0xC4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE32 DUP2 PUSH2 0xC70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE52 DUP2 PUSH2 0xC93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE72 DUP2 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE92 DUP2 PUSH2 0xCD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD1F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDB DUP3 PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE6 DUP4 PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0C DUP3 PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP PUSH2 0xF17 DUP4 PUSH2 0xF99 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF50 JUMPI PUSH2 0xF4F PUSH2 0xFD9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF66 DUP3 PUSH2 0xF79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAE DUP3 PUSH2 0xFB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC0 DUP3 PUSH2 0xFC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD2 DUP3 PUSH2 0xF79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20747261646520616D6F756E74203120626E62000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1164 DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP2 EQ PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x117B DUP2 PUSH2 0xF6D JUMP JUMPDEST DUP2 EQ PUSH2 0x1186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1192 DUP2 PUSH2 0xF99 JUMP JUMPDEST DUP2 EQ PUSH2 0x119D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH6 0x4457164337B 0xDE MLOAD PUSH30 0x96C618AE7AE8028CEEA45219830AF79BCB2A95481064736F6C6343000807 STOP CALLER ",
							"sourceMap": "146:2168:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:357;;;;;;;;;;;;;:::i;:::-;;1661:101:3;;;;;;;;;;;;;:::i;:::-;;671:441:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1566:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1029:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1120:436:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;271:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1911:198:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;305:19:4;;;;;;;;;;;;;:::o;1680:357::-;1848:12;1866:7;:5;:7::i;:::-;:12;;1886:21;1866:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1847:65;;;1931:7;1923:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;1974:5;;;;;;;;;;;:14;;;1989:7;:5;:7::i;:::-;1998:5;;;;;;;;;;;:15;;;2022:4;1998:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1974:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1725:312;1680:357::o;1661:101:3:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1725:30:::1;1752:1;1725:18;:30::i;:::-;1661:101::o:0;671:441:4:-;758:10;;746:8;:22;;738:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;810:18;889:6;875:10;;866:8;:19;;;;:::i;:::-;865:31;;;;:::i;:::-;852:44;;908:12;926:7;:5;:7::i;:::-;:12;;946:10;926:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;907:54;;;980:7;972:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;1059:5;;;;;;;;;;;:14;;;1074:10;1086:8;1059:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;727:385;;671:441;:::o;1566:108::-;1252:12:3;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1656:10:4::1;1643;:23;;;;1566:108:::0;:::o;1029:85:3:-;1075:7;1101:6;;;;;;;;;;;1094:13;;1029:85;:::o;1120:436:4:-;1203:10;;1190:9;:23;;1182:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;1251;1269:5;;;;;;;;;;;1276:10;1296:4;1303:9;1251:17;:62::i;:::-;1348:18;1424:6;1410:10;;1400:9;:20;;;;:::i;:::-;1399:32;;;;:::i;:::-;1386:45;;1439:12;1457:10;:15;;1480:10;1457:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:57;;;1514:7;1506:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;1171:385;;1120:436;:::o;271:26::-;;;;:::o;1911:198:3:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:1:::1;1999:22;;:8;:22;;;;1991:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2074:28;2093:8;2074:18;:28::i;:::-;1911:198:::0;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2263:187:3:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;2043:268:4:-;2197:9;2209:5;:18;;;2228:6;2236:9;2247:6;2209:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2197:57;;2273:4;2265:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2186:125;2043:268;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:329::-;648:6;697:2;685:9;676:7;672:23;668:32;665:119;;;703:79;;:::i;:::-;665:119;823:1;848:53;893:7;884:6;873:9;869:22;848:53;:::i;:::-;838:63;;794:117;589:329;;;;:::o;924:345::-;991:6;1040:2;1028:9;1019:7;1015:23;1011:32;1008:119;;;1046:79;;:::i;:::-;1008:119;1166:1;1191:61;1244:7;1235:6;1224:9;1220:22;1191:61;:::i;:::-;1181:71;;1137:125;924:345;;;;:::o;1275:329::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1509:1;1534:53;1579:7;1570:6;1559:9;1555:22;1534:53;:::i;:::-;1524:63;;1480:117;1275:329;;;;:::o;1610:351::-;1680:6;1729:2;1717:9;1708:7;1704:23;1700:32;1697:119;;;1735:79;;:::i;:::-;1697:119;1855:1;1880:64;1936:7;1927:6;1916:9;1912:22;1880:64;:::i;:::-;1870:74;;1826:128;1610:351;;;;:::o;1967:118::-;2054:24;2072:5;2054:24;:::i;:::-;2049:3;2042:37;1967:118;;:::o;2091:159::-;2192:51;2237:5;2192:51;:::i;:::-;2187:3;2180:64;2091:159;;:::o;2256:366::-;2398:3;2419:67;2483:2;2478:3;2419:67;:::i;:::-;2412:74;;2495:93;2584:3;2495:93;:::i;:::-;2613:2;2608:3;2604:12;2597:19;;2256:366;;;:::o;2628:::-;2770:3;2791:67;2855:2;2850:3;2791:67;:::i;:::-;2784:74;;2867:93;2956:3;2867:93;:::i;:::-;2985:2;2980:3;2976:12;2969:19;;2628:366;;;:::o;3000:::-;3142:3;3163:67;3227:2;3222:3;3163:67;:::i;:::-;3156:74;;3239:93;3328:3;3239:93;:::i;:::-;3357:2;3352:3;3348:12;3341:19;;3000:366;;;:::o;3372:::-;3514:3;3535:67;3599:2;3594:3;3535:67;:::i;:::-;3528:74;;3611:93;3700:3;3611:93;:::i;:::-;3729:2;3724:3;3720:12;3713:19;;3372:366;;;:::o;3744:::-;3886:3;3907:67;3971:2;3966:3;3907:67;:::i;:::-;3900:74;;3983:93;4072:3;3983:93;:::i;:::-;4101:2;4096:3;4092:12;4085:19;;3744:366;;;:::o;4116:::-;4258:3;4279:67;4343:2;4338:3;4279:67;:::i;:::-;4272:74;;4355:93;4444:3;4355:93;:::i;:::-;4473:2;4468:3;4464:12;4457:19;;4116:366;;;:::o;4488:398::-;4647:3;4668:83;4749:1;4744:3;4668:83;:::i;:::-;4661:90;;4760:93;4849:3;4760:93;:::i;:::-;4878:1;4873:3;4869:11;4862:18;;4488:398;;;:::o;4892:118::-;4979:24;4997:5;4979:24;:::i;:::-;4974:3;4967:37;4892:118;;:::o;5016:379::-;5200:3;5222:147;5365:3;5222:147;:::i;:::-;5215:154;;5386:3;5379:10;;5016:379;;;:::o;5401:222::-;5494:4;5532:2;5521:9;5517:18;5509:26;;5545:71;5613:1;5602:9;5598:17;5589:6;5545:71;:::i;:::-;5401:222;;;;:::o;5629:442::-;5778:4;5816:2;5805:9;5801:18;5793:26;;5829:71;5897:1;5886:9;5882:17;5873:6;5829:71;:::i;:::-;5910:72;5978:2;5967:9;5963:18;5954:6;5910:72;:::i;:::-;5992;6060:2;6049:9;6045:18;6036:6;5992:72;:::i;:::-;5629:442;;;;;;:::o;6077:332::-;6198:4;6236:2;6225:9;6221:18;6213:26;;6249:71;6317:1;6306:9;6302:17;6293:6;6249:71;:::i;:::-;6330:72;6398:2;6387:9;6383:18;6374:6;6330:72;:::i;:::-;6077:332;;;;;:::o;6415:250::-;6522:4;6560:2;6549:9;6545:18;6537:26;;6573:85;6655:1;6644:9;6640:17;6631:6;6573:85;:::i;:::-;6415:250;;;;:::o;6671:419::-;6837:4;6875:2;6864:9;6860:18;6852:26;;6924:9;6918:4;6914:20;6910:1;6899:9;6895:17;6888:47;6952:131;7078:4;6952:131;:::i;:::-;6944:139;;6671:419;;;:::o;7096:::-;7262:4;7300:2;7289:9;7285:18;7277:26;;7349:9;7343:4;7339:20;7335:1;7324:9;7320:17;7313:47;7377:131;7503:4;7377:131;:::i;:::-;7369:139;;7096:419;;;:::o;7521:::-;7687:4;7725:2;7714:9;7710:18;7702:26;;7774:9;7768:4;7764:20;7760:1;7749:9;7745:17;7738:47;7802:131;7928:4;7802:131;:::i;:::-;7794:139;;7521:419;;;:::o;7946:::-;8112:4;8150:2;8139:9;8135:18;8127:26;;8199:9;8193:4;8189:20;8185:1;8174:9;8170:17;8163:47;8227:131;8353:4;8227:131;:::i;:::-;8219:139;;7946:419;;;:::o;8371:::-;8537:4;8575:2;8564:9;8560:18;8552:26;;8624:9;8618:4;8614:20;8610:1;8599:9;8595:17;8588:47;8652:131;8778:4;8652:131;:::i;:::-;8644:139;;8371:419;;;:::o;8796:::-;8962:4;9000:2;8989:9;8985:18;8977:26;;9049:9;9043:4;9039:20;9035:1;9024:9;9020:17;9013:47;9077:131;9203:4;9077:131;:::i;:::-;9069:139;;8796:419;;;:::o;9221:222::-;9314:4;9352:2;9341:9;9337:18;9329:26;;9365:71;9433:1;9422:9;9418:17;9409:6;9365:71;:::i;:::-;9221:222;;;;:::o;9530:147::-;9631:11;9668:3;9653:18;;9530:147;;;;:::o;9683:169::-;9767:11;9801:6;9796:3;9789:19;9841:4;9836:3;9832:14;9817:29;;9683:169;;;;:::o;9858:185::-;9898:1;9915:20;9933:1;9915:20;:::i;:::-;9910:25;;9949:20;9967:1;9949:20;:::i;:::-;9944:25;;9988:1;9978:35;;9993:18;;:::i;:::-;9978:35;10035:1;10032;10028:9;10023:14;;9858:185;;;;:::o;10049:348::-;10089:7;10112:20;10130:1;10112:20;:::i;:::-;10107:25;;10146:20;10164:1;10146:20;:::i;:::-;10141:25;;10334:1;10266:66;10262:74;10259:1;10256:81;10251:1;10244:9;10237:17;10233:105;10230:131;;;10341:18;;:::i;:::-;10230:131;10389:1;10386;10382:9;10371:20;;10049:348;;;;:::o;10403:96::-;10440:7;10469:24;10487:5;10469:24;:::i;:::-;10458:35;;10403:96;;;:::o;10505:90::-;10539:7;10582:5;10575:13;10568:21;10557:32;;10505:90;;;:::o;10601:126::-;10638:7;10678:42;10671:5;10667:54;10656:65;;10601:126;;;:::o;10733:77::-;10770:7;10799:5;10788:16;;10733:77;;;:::o;10816:140::-;10880:9;10913:37;10944:5;10913:37;:::i;:::-;10900:50;;10816:140;;;:::o;10962:126::-;11012:9;11045:37;11076:5;11045:37;:::i;:::-;11032:50;;10962:126;;;:::o;11094:113::-;11144:9;11177:24;11195:5;11177:24;:::i;:::-;11164:37;;11094:113;;;:::o;11213:180::-;11261:77;11258:1;11251:88;11358:4;11355:1;11348:15;11382:4;11379:1;11372:15;11399:180;11447:77;11444:1;11437:88;11544:4;11541:1;11534:15;11568:4;11565:1;11558:15;11708:117;11817:1;11814;11807:12;11831:225;11971:34;11967:1;11959:6;11955:14;11948:58;12040:8;12035:2;12027:6;12023:15;12016:33;11831:225;:::o;12062:170::-;12202:22;12198:1;12190:6;12186:14;12179:46;12062:170;:::o;12238:171::-;12378:23;12374:1;12366:6;12362:14;12355:47;12238:171;:::o;12415:176::-;12555:28;12551:1;12543:6;12539:14;12532:52;12415:176;:::o;12597:166::-;12737:18;12733:1;12725:6;12721:14;12714:42;12597:166;:::o;12769:182::-;12909:34;12905:1;12897:6;12893:14;12886:58;12769:182;:::o;12957:114::-;;:::o;13077:122::-;13150:24;13168:5;13150:24;:::i;:::-;13143:5;13140:35;13130:63;;13189:1;13186;13179:12;13130:63;13077:122;:::o;13205:116::-;13275:21;13290:5;13275:21;:::i;:::-;13268:5;13265:32;13255:60;;13311:1;13308;13301:12;13255:60;13205:116;:::o;13327:122::-;13400:24;13418:5;13400:24;:::i;:::-;13393:5;13390:35;13380:63;;13439:1;13436;13429:12;13380:63;13327:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "913200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BnbToSafuu()": "2495",
								"buySafuu(uint256)": "infinite",
								"owner()": "2544",
								"renounceOwnership()": "30419",
								"safuu()": "2601",
								"sellSafuu(uint256)": "infinite",
								"setFactor(uint256)": "24760",
								"transferOwnership(address)": "30811",
								"withdrawToOwner()": "infinite"
							},
							"internal": {
								"_safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 665,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 665,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 398,
									"end": 665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 431,
									"end": 437,
									"name": "PUSH",
									"source": 4,
									"value": "186A0"
								},
								{
									"begin": 418,
									"end": 428,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 418,
									"end": 437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 418,
									"end": 437,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 418,
									"end": 437,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 418,
									"end": 437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 499,
									"name": "PUSH",
									"source": 4,
									"value": "E5BA47FD94CB645BA4119222E34FB33F59C7CD90"
								},
								{
									"begin": 442,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 442,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 442,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 442,
									"end": 500,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 442,
									"end": 500,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 442,
									"end": 500,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 442,
									"end": 500,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 616,
									"end": 658,
									"name": "PUSH",
									"source": 4,
									"value": "9326BFA02ADD2366B30BACB125260AF641031331"
								},
								{
									"begin": 582,
									"end": 591,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 582,
									"end": 591,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 582,
									"end": 659,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 582,
									"end": 659,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 582,
									"end": 659,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 582,
									"end": 659,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 582,
									"end": 659,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2336,
									"end": 2352,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2380,
									"end": 2388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2434,
									"end": 2442,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2424,
									"end": 2432,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2326,
									"end": 2450,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2314,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b6504457164337bde517d96c618ae7ae8028ceea45219830af79bcb2a95481064736f6c63430008070033",
									".code": [
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "817E9D31"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "817E9D31"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "ADE87ECC"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "EBC4197C"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "23B160AC"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "3CB40E16"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "80C31426"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 146,
											"end": 2314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 305,
											"end": 324,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 305,
											"end": 324,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 324,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1886,
											"end": 1907,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1923,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 1988,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1989,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2013,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2022,
											"end": 2026,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1998,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 2029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1725,
											"end": 2037,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 2037,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 746,
											"end": 754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 746,
											"end": 768,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 746,
											"end": 768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 738,
											"end": 799,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 738,
											"end": 799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 810,
											"end": 828,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 895,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 875,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 875,
											"end": 885,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 866,
											"end": 874,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 866,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 866,
											"end": 885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 866,
											"end": 885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 866,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 866,
											"end": 885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 866,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 865,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 865,
											"end": 896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 865,
											"end": 896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 865,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 865,
											"end": 896,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 896,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 865,
											"end": 896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 852,
											"end": 896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 852,
											"end": 896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 908,
											"end": 920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 926,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 926,
											"end": 933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 926,
											"end": 938,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 938,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 946,
											"end": 956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 926,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 926,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 907,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 907,
											"end": 961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 907,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 980,
											"end": 987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 972,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1094,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 727,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 727,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 671,
											"end": 1112,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1656,
											"end": 1666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1653,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1643,
											"end": 1666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1666,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1566,
											"end": 1674,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1203,
											"end": 1213,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 1213,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1190,
											"end": 1213,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1182,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1286,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1312,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1251,
											"end": 1313,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1313,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1251,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1410,
											"end": 1420,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1410,
											"end": 1420,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1400,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1399,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1467,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1480,
											"end": 1490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1438,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1438,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1438,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1506,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1556,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 271,
											"end": 297,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 271,
											"end": 297,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2442,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2228,
											"end": 2234,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2245,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2253,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2209,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2197,
											"end": 2254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2311,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 703,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 665,
											"end": 784,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 665,
											"end": 784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 869,
											"end": 891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 848,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 848,
											"end": 901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 838,
											"end": 901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 794,
											"end": 911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 918,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1038,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1043,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1046,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1008,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1167,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1244,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1191,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1252,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1269,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1534,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1524,
											"end": 1587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1604,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1717,
											"end": 1726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1727,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1732,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1735,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1697,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1912,
											"end": 1934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1880,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1961,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2054,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2079,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1967,
											"end": 2085,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2091,
											"end": 2250,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2091,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2237,
											"end": 2242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2192,
											"end": 2243,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2243,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2192,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2250,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2256,
											"end": 2622,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2256,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2478,
											"end": 2481,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2419,
											"end": 2486,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2419,
											"end": 2486,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2419,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2412,
											"end": 2486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2584,
											"end": 2587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2495,
											"end": 2588,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2588,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2495,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2622,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2628,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2628,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2855,
											"end": 2857,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2850,
											"end": 2853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2791,
											"end": 2858,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2858,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2791,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2956,
											"end": 2959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2867,
											"end": 2960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2867,
											"end": 2960,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2867,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 2987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 2988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2994,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3000,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3000,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3227,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3222,
											"end": 3225,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3163,
											"end": 3230,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3163,
											"end": 3230,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3163,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3328,
											"end": 3331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3239,
											"end": 3332,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3332,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3239,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3355,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3366,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3366,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3372,
											"end": 3738,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3372,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3599,
											"end": 3601,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 3594,
											"end": 3597,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3535,
											"end": 3602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3602,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3535,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3602,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3611,
											"end": 3704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3611,
											"end": 3704,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3611,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3731,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3720,
											"end": 3732,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3732,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3713,
											"end": 3732,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3738,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3738,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3744,
											"end": 4110,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3744,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3886,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3971,
											"end": 3973,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3966,
											"end": 3969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3907,
											"end": 3974,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3974,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3907,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3974,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4072,
											"end": 4075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3983,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4096,
											"end": 4099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 4110,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 4110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 4110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 4110,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4116,
											"end": 4482,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4116,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4258,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4343,
											"end": 4345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4341,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4279,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4279,
											"end": 4346,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4346,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4279,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4355,
											"end": 4448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4355,
											"end": 4448,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4355,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4468,
											"end": 4471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4457,
											"end": 4476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4482,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4482,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4482,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4488,
											"end": 4886,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4488,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4647,
											"end": 4650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4747,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4668,
											"end": 4751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4668,
											"end": 4751,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4668,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4760,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4849,
											"end": 4852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4760,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4760,
											"end": 4853,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4760,
											"end": 4853,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4760,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4886,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4997,
											"end": 5002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4979,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 5004,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 5010,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5016,
											"end": 5395,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5016,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5200,
											"end": 5203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5365,
											"end": 5368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5222,
											"end": 5369,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5222,
											"end": 5369,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5222,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5369,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5395,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5494,
											"end": 5498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5534,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5521,
											"end": 5530,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5613,
											"end": 5614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5611,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5598,
											"end": 5615,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5545,
											"end": 5616,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5616,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5545,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5623,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5805,
											"end": 5814,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5897,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5829,
											"end": 5900,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5829,
											"end": 5900,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5829,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5978,
											"end": 5980,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5967,
											"end": 5976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5910,
											"end": 5982,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5910,
											"end": 5982,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5910,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6060,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6049,
											"end": 6058,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5992,
											"end": 6064,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6064,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5992,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 6071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6198,
											"end": 6202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6317,
											"end": 6318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6299,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6249,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6398,
											"end": 6400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6387,
											"end": 6396,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6374,
											"end": 6380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 6330,
											"end": 6402,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6330,
											"end": 6402,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6330,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6409,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6560,
											"end": 6562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6558,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6537,
											"end": 6563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6537,
											"end": 6563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6655,
											"end": 6656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6644,
											"end": 6653,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6573,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6573,
											"end": 6658,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6573,
											"end": 6658,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6573,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6415,
											"end": 6665,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6671,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6671,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6877,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6860,
											"end": 6878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 6878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 6933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6918,
											"end": 6922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 6908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 6935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7078,
											"end": 7082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 6952,
											"end": 7083,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6952,
											"end": 7083,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6952,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 7083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 7083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 7090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 7090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 7090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 7090,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7096,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7096,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7289,
											"end": 7298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7285,
											"end": 7303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7277,
											"end": 7303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7359,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7335,
											"end": 7336,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7320,
											"end": 7337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7503,
											"end": 7507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7377,
											"end": 7508,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7377,
											"end": 7508,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 7377,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7369,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7369,
											"end": 7508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7096,
											"end": 7515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7096,
											"end": 7515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7096,
											"end": 7515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7096,
											"end": 7515,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7521,
											"end": 7940,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7521,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7687,
											"end": 7691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7714,
											"end": 7723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7702,
											"end": 7728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7702,
											"end": 7728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7774,
											"end": 7783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7768,
											"end": 7772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7764,
											"end": 7784,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7760,
											"end": 7761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7749,
											"end": 7758,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7745,
											"end": 7762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7802,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7928,
											"end": 7932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7802,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7802,
											"end": 7933,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7802,
											"end": 7933,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 7802,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7940,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7946,
											"end": 8365,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 7946,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8152,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8148,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8127,
											"end": 8153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8127,
											"end": 8153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8199,
											"end": 8208,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8193,
											"end": 8197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8189,
											"end": 8209,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8185,
											"end": 8186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8170,
											"end": 8187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8210,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8227,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8227,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8227,
											"end": 8358,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8227,
											"end": 8358,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 8227,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8219,
											"end": 8358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8219,
											"end": 8358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 8365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 8365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 8365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 8365,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8371,
											"end": 8790,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8371,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8575,
											"end": 8577,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8564,
											"end": 8573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8624,
											"end": 8633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8618,
											"end": 8622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8614,
											"end": 8634,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8610,
											"end": 8611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8599,
											"end": 8608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8595,
											"end": 8612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8652,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8778,
											"end": 8782,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8652,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8652,
											"end": 8783,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8652,
											"end": 8783,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8652,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8644,
											"end": 8783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8644,
											"end": 8783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8790,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8790,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8796,
											"end": 9215,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8796,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8962,
											"end": 8966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9000,
											"end": 9002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8989,
											"end": 8998,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8985,
											"end": 9003,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8977,
											"end": 9003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8977,
											"end": 9003,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9043,
											"end": 9047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9039,
											"end": 9059,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9035,
											"end": 9036,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9020,
											"end": 9037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9077,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9203,
											"end": 9207,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9077,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9077,
											"end": 9208,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9077,
											"end": 9208,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9077,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9069,
											"end": 9208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 9215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 9215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 9215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 9215,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9352,
											"end": 9354,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9341,
											"end": 9350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9337,
											"end": 9355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9329,
											"end": 9355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9329,
											"end": 9355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9433,
											"end": 9434,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9418,
											"end": 9435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9409,
											"end": 9415,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9365,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9365,
											"end": 9436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9365,
											"end": 9436,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9365,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9221,
											"end": 9443,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9631,
											"end": 9642,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9653,
											"end": 9671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9653,
											"end": 9671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9677,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9767,
											"end": 9778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9807,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9796,
											"end": 9799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 9808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9841,
											"end": 9845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9836,
											"end": 9839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9832,
											"end": 9846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9683,
											"end": 9852,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9898,
											"end": 9899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9933,
											"end": 9934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9915,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9910,
											"end": 9935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9967,
											"end": 9968,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9949,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9949,
											"end": 9969,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9949,
											"end": 9969,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9949,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 9969,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9944,
											"end": 9969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9988,
											"end": 9989,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9978,
											"end": 10013,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9978,
											"end": 10013,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9978,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10032,
											"end": 10033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10023,
											"end": 10037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9858,
											"end": 10043,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10089,
											"end": 10096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10112,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10112,
											"end": 10132,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10112,
											"end": 10132,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10112,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10107,
											"end": 10132,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10107,
											"end": 10132,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10146,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10146,
											"end": 10166,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10146,
											"end": 10166,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10146,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10166,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10141,
											"end": 10166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10334,
											"end": 10335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10266,
											"end": 10332,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10262,
											"end": 10336,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10256,
											"end": 10337,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10251,
											"end": 10252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10244,
											"end": 10253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10237,
											"end": 10254,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10338,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10230,
											"end": 10361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10230,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10230,
											"end": 10361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10230,
											"end": 10361,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10230,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10389,
											"end": 10390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10391,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10371,
											"end": 10391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10049,
											"end": 10397,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10403,
											"end": 10499,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 10403,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10487,
											"end": 10492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10469,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10469,
											"end": 10493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10469,
											"end": 10493,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10469,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10458,
											"end": 10493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10403,
											"end": 10499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10403,
											"end": 10499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10403,
											"end": 10499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10403,
											"end": 10499,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10505,
											"end": 10595,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 10505,
											"end": 10595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10582,
											"end": 10587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10588,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10589,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10505,
											"end": 10595,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10601,
											"end": 10727,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10601,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10638,
											"end": 10645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10678,
											"end": 10720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10667,
											"end": 10721,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10656,
											"end": 10721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10656,
											"end": 10721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10601,
											"end": 10727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10601,
											"end": 10727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10601,
											"end": 10727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10601,
											"end": 10727,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10733,
											"end": 10810,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 10733,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10788,
											"end": 10804,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10788,
											"end": 10804,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 10810,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 10810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 10810,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 10810,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10816,
											"end": 10956,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 10816,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10913,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10944,
											"end": 10949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10913,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10913,
											"end": 10950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10913,
											"end": 10950,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10913,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10900,
											"end": 10950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10900,
											"end": 10950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10956,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10962,
											"end": 11088,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10962,
											"end": 11088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11012,
											"end": 11021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11076,
											"end": 11081,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 11045,
											"end": 11082,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11045,
											"end": 11082,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 11045,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11032,
											"end": 11082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11032,
											"end": 11082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10962,
											"end": 11088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10962,
											"end": 11088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10962,
											"end": 11088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10962,
											"end": 11088,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11094,
											"end": 11207,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 11094,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11144,
											"end": 11153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 11195,
											"end": 11200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11201,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11207,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11213,
											"end": 11393,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 11213,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11261,
											"end": 11338,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11251,
											"end": 11339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11358,
											"end": 11362,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11355,
											"end": 11356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11348,
											"end": 11363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11382,
											"end": 11386,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11379,
											"end": 11380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11387,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11399,
											"end": 11579,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 11399,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11524,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11444,
											"end": 11445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11525,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11544,
											"end": 11548,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11534,
											"end": 11549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11568,
											"end": 11572,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11565,
											"end": 11566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11573,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11708,
											"end": 11825,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 11708,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11814,
											"end": 11815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11807,
											"end": 11819,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11831,
											"end": 12056,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 11831,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11971,
											"end": 12005,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11967,
											"end": 11968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11955,
											"end": 11969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11948,
											"end": 12006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12040,
											"end": 12048,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12035,
											"end": 12037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12027,
											"end": 12033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12023,
											"end": 12038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12016,
											"end": 12049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11831,
											"end": 12056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11831,
											"end": 12056,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12062,
											"end": 12232,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 12062,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12202,
											"end": 12224,
											"name": "PUSH",
											"source": 5,
											"value": "4661696C656420746F2073656E64204574686572000000000000000000000000"
										},
										{
											"begin": 12198,
											"end": 12199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12190,
											"end": 12196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12186,
											"end": 12200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12179,
											"end": 12225,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12062,
											"end": 12232,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12238,
											"end": 12409,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 12238,
											"end": 12409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12378,
											"end": 12401,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 12374,
											"end": 12375,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12372,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12362,
											"end": 12376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12355,
											"end": 12402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12238,
											"end": 12409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12238,
											"end": 12409,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12415,
											"end": 12591,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 12415,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12555,
											"end": 12583,
											"name": "PUSH",
											"source": 5,
											"value": "4D696E696D756D20747261646520616D6F756E74203120626E62000000000000"
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12543,
											"end": 12549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12539,
											"end": 12553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12532,
											"end": 12584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12591,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12597,
											"end": 12763,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 12597,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C65642100000000000000000000000000000000"
										},
										{
											"begin": 12733,
											"end": 12734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12725,
											"end": 12731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12721,
											"end": 12735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12714,
											"end": 12756,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12597,
											"end": 12763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12597,
											"end": 12763,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12769,
											"end": 12951,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 12769,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12909,
											"end": 12943,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12905,
											"end": 12906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12903,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12893,
											"end": 12907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12886,
											"end": 12944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12769,
											"end": 12951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12769,
											"end": 12951,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12957,
											"end": 13071,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 12957,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12957,
											"end": 13071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12957,
											"end": 13071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13077,
											"end": 13199,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 13077,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13150,
											"end": 13174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13168,
											"end": 13173,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13150,
											"end": 13174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 13150,
											"end": 13174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13150,
											"end": 13174,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 13150,
											"end": 13174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13143,
											"end": 13148,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13140,
											"end": 13175,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13130,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 13130,
											"end": 13193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13187,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13179,
											"end": 13191,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13130,
											"end": 13193,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 13130,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13077,
											"end": 13199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13077,
											"end": 13199,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13205,
											"end": 13321,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 13205,
											"end": 13321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 13290,
											"end": 13295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 13275,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13268,
											"end": 13273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13265,
											"end": 13297,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 13255,
											"end": 13315,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13311,
											"end": 13312,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13308,
											"end": 13309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13255,
											"end": 13315,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 13255,
											"end": 13315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13205,
											"end": 13321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13205,
											"end": 13321,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13327,
											"end": 13449,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 13327,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13418,
											"end": 13423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 13400,
											"end": 13424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13400,
											"end": 13424,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 13400,
											"end": 13424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13393,
											"end": 13398,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13390,
											"end": 13425,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13380,
											"end": 13443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 13380,
											"end": 13443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13439,
											"end": 13440,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13436,
											"end": 13437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13429,
											"end": 13441,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13380,
											"end": 13443,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 13380,
											"end": 13443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13327,
											"end": 13449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13327,
											"end": 13449,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BnbToSafuu()": "ebc4197c",
							"buySafuu(uint256)": "80c31426",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safuu()": "23b160ac",
							"sellSafuu(uint256)": "ade87ecc",
							"setFactor(uint256)": "817e9d31",
							"transferOwnership(address)": "f2fde38b",
							"withdrawToOwner()": "3cb40e16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BnbToSafuu\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amttobuy\",\"type\":\"uint256\"}],\"name\":\"buySafuu\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safuu\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amttosell\",\"type\":\"uint256\"}],\"name\":\"sellSafuu\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newfactor\",\"type\":\"uint256\"}],\"name\":\"setFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sis.sol\":\"personalSafuuTrader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"AggregatorV3Interface.sol\":{\"keccak256\":\"0x8db60f81b61f79fab0366fa7ef9d47ac67462276d0cbe7b36a2fdf74654e9c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c102d1f8b81f966eb8acd919cbe14b3785a2389427154ac99bb54d3e94fddce\",\"dweb:/ipfs/QmX9afvMGRxCX6AZbHRhmkEHYJAGDeyeT5ycx7u43zSsNK\"]},\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"sis.sol\":{\"keccak256\":\"0x8f8258a8fddd96e1198508969e3dc9440051de7b22b000068e4d1ff64468c6bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3c0f6a31e8746ba697c25e2af8d49fca7c1a3c4b78a7b606bbbb77dac9c7760\",\"dweb:/ipfs/QmSk39H1weDa3dE2vBq2zZA6Dsgcj4LYYxcnpMEFnsx4oZ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "70:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "106:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "140:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:7:0"
									},
									"scope": 45,
									"src": "97:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "162:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "199:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:15:0"
									},
									"scope": 45,
									"src": "153:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "229:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 45,
									"src": "220:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "500:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "520:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "576:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "629:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "621:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "647:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "680:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "673:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:135:0"
									},
									"scope": 45,
									"src": "491:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "718:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "812:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "805:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "805:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "835:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "827:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "861:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "853:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "886:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "879:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:135:0"
									},
									"scope": 45,
									"src": "709:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "60:852:0",
							"usedErrors": []
						}
					],
					"src": "33:879:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							67
						]
					},
					"id": 68,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 53,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 55,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 67,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 62,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 61,
												"id": 64,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 67,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 68,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							145
						]
					},
					"id": 146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 70,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 145,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 145,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 145,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 145,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 145,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 145,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 135,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 144,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 146,
							"src": "187:2596:2",
							"usedErrors": []
						}
					],
					"src": "91:2693:2"
				},
				"id": 2
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							67
						],
						"Ownable": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:3"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 68,
							"src": "112:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 150,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "661:7:3"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250,
								67
							],
							"name": "Ownable",
							"nameLocation": "650:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "675:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 152,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 159,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "731:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "762:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:3"
									},
									"src": "704:84:3"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "904:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 164,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "933:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 163,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "914:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "914:32:3"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 169,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:3"
									},
									"scope": 250,
									"src": "890:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1084:30:3",
										"statements": [
											{
												"expression": {
													"id": 175,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "1101:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "1094:13:3"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:3"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:3"
									},
									"scope": 250,
									"src": "1029:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1223:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "1241:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "1252:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:3"
											},
											{
												"id": 190,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 192,
									"name": "onlyOwner",
									"nameLocation": "1211:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:3"
									},
									"src": "1202:117:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1715:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1752:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1744:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 199,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1744:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 198,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "1725:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1725:30:3"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1325:331:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 195,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "1705:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1670:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:3"
									},
									"scope": 250,
									"src": "1661:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1981:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1999:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2019:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1991:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2093:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 224,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "2074:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2074:28:3"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1768:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 211,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "1971:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1971:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1920:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1946:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1938:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:3"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:3"
									},
									"scope": 250,
									"src": "1911:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2326:124:3",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2344:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "2336:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 235,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"id": 237,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2355:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:25:3"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2371:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 240,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2380:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2371:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2371:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 244,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2424:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2434:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2403:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "EmitStatement",
												"src": "2398:45:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2115:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2272:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2299:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2291:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:18:3"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:3"
									},
									"scope": 250,
									"src": "2263:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "632:1820:3",
							"usedErrors": []
						}
					],
					"src": "87:2366:3"
				},
				"id": 3
			},
			"sis.sol": {
				"ast": {
					"absolutePath": "sis.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							67
						],
						"IERC20": [
							145
						],
						"Ownable": [
							250
						],
						"personalSafuuTrader": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 146,
							"src": "58:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 251,
							"src": "82:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "AggregatorV3Interface.sol",
							"file": "./AggregatorV3Interface.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 468,
							"sourceUnit": 46,
							"src": "107:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 256,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "178:7:4"
									},
									"id": 257,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467,
								250,
								67
							],
							"name": "personalSafuuTrader",
							"nameLocation": "155:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 260,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "225:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "194:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 259,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 258,
											"name": "AggregatorV3Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "194:21:4"
										},
										"referencedDeclaration": 45,
										"src": "194:21:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ebc4197c",
									"id": 262,
									"mutability": "mutable",
									"name": "BnbToSafuu",
									"nameLocation": "287:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "271:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "271:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "23b160ac",
									"id": 265,
									"mutability": "mutable",
									"name": "safuu",
									"nameLocation": "319:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "305:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 264,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 263,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 145,
											"src": "305:6:4"
										},
										"referencedDeclaration": 145,
										"src": "305:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "413:252:4",
										"statements": [
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "BnbToSafuu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "418:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030303030",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "431:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"src": "418:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "418:19:4"
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "safuu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "442:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307845356241343766443934434236343562613431313932323265333466423333463539433743443930",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "457:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 273,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "450:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "450:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "442:58:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "442:58:4"
											},
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "582:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "616:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "594:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "594:65:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "582:77:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "582:77:4"
											}
										]
									},
									"id": 285,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "410:2:4"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:0:4"
									},
									"scope": 467,
									"src": "398:267:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "727:385:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "amttobuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "746:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 292,
																"name": "BnbToSafuu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "758:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20747261646520616d6f756e74203120626e62",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "770:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																"typeString": "literal_string \"Minimum trade amount 1 bnb\""
															},
															"value": "Minimum trade amount 1 bnb"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																"typeString": "literal_string \"Minimum trade amount 1 bnb\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "738:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "738:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "738:61:4"
											},
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "payableAmt",
														"nameLocation": "818:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "810:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "810:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"nodeType": "VariableDeclarationStatement",
												"src": "810:18:4"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 300,
														"name": "payableAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "852:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 301,
																		"name": "amttobuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "866:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 302,
																		"name": "BnbToSafuu",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "875:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "866:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 304,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "865:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "889:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "893:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "889:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 308,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "888:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "865:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "852:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "852:44:4"
											},
											{
												"assignments": [
													313,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "913:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "908:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 312,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "908:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 321,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "958:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 314,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "926:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "926:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "926:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 317,
																"name": "payableAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "946:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "926:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "907:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 323,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "980:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c656421",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "989:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																"typeString": "literal_string \"Transfer failed!\""
															},
															"value": "Transfer failed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																"typeString": "literal_string \"Transfer failed!\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "972:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "972:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "972:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 330,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1074:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1074:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 332,
															"name": "amttobuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "1086:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 327,
															"name": "safuu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1059:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "1059:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1059:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1059:36:4"
											}
										]
									},
									"functionSelector": "80c31426",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buySafuu",
									"nameLocation": "680:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "amttobuy",
												"nameLocation": "697:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "689:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:18:4"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:0:4"
									},
									"scope": 467,
									"src": "671:441:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "1171:385:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "amttosell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "1190:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 343,
																"name": "BnbToSafuu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1203:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1190:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20747261646520616d6f756e74203120626e62",
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1215:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																"typeString": "literal_string \"Minimum trade amount 1 bnb\""
															},
															"value": "Minimum trade amount 1 bnb"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																"typeString": "literal_string \"Minimum trade amount 1 bnb\""
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1182:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1182:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1182:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 349,
															"name": "safuu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1269:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 350,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1276:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1276:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 354,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1296:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_personalSafuuTrader_$467",
																		"typeString": "contract personalSafuuTrader"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_personalSafuuTrader_$467",
																		"typeString": "contract personalSafuuTrader"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1288:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 352,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1288:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1288:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "amttosell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "1303:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "1251:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1251:62:4"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "payableBNB",
														"nameLocation": "1356:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "1348:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 361,
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:18:4"
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "payableBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "1386:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "amttosell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "1400:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 364,
																		"name": "BnbToSafuu",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "1410:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1400:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 366,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1399:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1424:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1428:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "1424:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 370,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1423:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1399:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1386:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "1386:45:4"
											},
											{
												"assignments": [
													375,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1444:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "1439:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 374,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1439:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 383,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1492:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 376,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1457:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1457:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1457:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 379,
																"name": "payableBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "1480:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1457:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1457:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1438:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c656421",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1523:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																"typeString": "literal_string \"Transfer failed!\""
															},
															"value": "Transfer failed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																"typeString": "literal_string \"Transfer failed!\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "1506:36:4"
											}
										]
									},
									"functionSelector": "ade87ecc",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellSafuu",
									"nameLocation": "1129:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amttosell",
												"nameLocation": "1147:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "1139:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1138:19:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:0:4"
									},
									"scope": 467,
									"src": "1120:436:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "1622:52:4",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "BnbToSafuu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "1643:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 398,
														"name": "_newfactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1656:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1643:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "1643:23:4"
											}
										]
									},
									"functionSelector": "817e9d31",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "1612:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1612:9:4"
										}
									],
									"name": "setFactor",
									"nameLocation": "1575:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_newfactor",
												"nameLocation": "1593:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1585:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:20:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1622:0:4"
									},
									"scope": 467,
									"src": "1566:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "1725:312:4",
										"statements": [
											{
												"assignments": [
													406,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1853:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "1848:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1848:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 418,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 407,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "1866:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1866:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1866:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 412,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1894:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$467",
																				"typeString": "contract personalSafuuTrader"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$467",
																				"typeString": "contract personalSafuuTrader"
																			}
																		],
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1886:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 410,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1886:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1886:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "1886:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1866:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1866:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1847:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1931:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1923:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1923:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 427,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "1989:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1989:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 433,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2022:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$467",
																				"typeString": "contract personalSafuuTrader"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$467",
																				"typeString": "contract personalSafuuTrader"
																			}
																		],
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2014:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 431,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2014:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2014:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 429,
																	"name": "safuu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1998:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 84,
																"src": "1998:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1998:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 424,
															"name": "safuu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "1974:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "1974:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1974:55:4"
											}
										]
									},
									"functionSelector": "3cb40e16",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToOwner",
									"nameLocation": "1689:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:2:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:0:4"
									},
									"scope": 467,
									"src": "1680:357:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "2186:125:4",
										"statements": [
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "2202:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 465,
														"src": "2197:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 451,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2197:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2228:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2236:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2247:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "2209:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "2209:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2197:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "2273:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2265:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "2265:38:4"
											}
										]
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "2052:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2087:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2080:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 440,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "2080:6:4"
													},
													"referencedDeclaration": 145,
													"src": "2080:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2111:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2103:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2136:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2128:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2164:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2156:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:108:4"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:0:4"
									},
									"scope": 467,
									"src": "2043:268:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 468,
							"src": "146:2168:4",
							"usedErrors": []
						}
					],
					"src": "33:2283:4"
				},
				"id": 4
			}
		}
	}
}