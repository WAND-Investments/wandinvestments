{
	"id": "3295de5d0c736f284c321abbca2ef84e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/sis.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"./IERC20.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./AggregatorV3Interface.sol\";\r\n\r\nlibrary SafeMathInt {\r\n    int256 private constant MIN_INT256 = int256(1) << 255;\r\n    int256 private constant MAX_INT256 = ~(int256(1) << 255);\r\n\r\n    function mul(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a * b;\r\n\r\n        require(c != MIN_INT256 || (a & MIN_INT256) != (b & MIN_INT256));\r\n        require((b == 0) || (c / b == a));\r\n        return c;\r\n    }\r\n\r\n    function div(int256 a, int256 b) internal pure returns (int256) {\r\n        require(b != -1 || a != MIN_INT256);\r\n\r\n        return a / b;\r\n    }\r\n\r\n    function sub(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a - b;\r\n        require((b >= 0 && c <= a) || (b < 0 && c > a));\r\n        return c;\r\n    }\r\n\r\n    function add(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a + b;\r\n        require((b >= 0 && c >= a) || (b < 0 && c < a));\r\n        return c;\r\n    }\r\n\r\n    function abs(int256 a) internal pure returns (int256) {\r\n        require(a != MIN_INT256);\r\n        return a < 0 ? -a : a;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n//start of contract\r\ncontract personalSafuuTrader is Ownable\r\n{\r\n        using SafeMath for uint256;\r\n    AggregatorV3Interface internal priceFeed;\r\n    //address private owner;\r\n    uint256  public BnbToSafuu; \r\n    IERC20 public Safuu;\r\n    IERC20 public USDC;\r\n    //uint256 public nativeInContract = address(this).balance;\r\n\r\nconstructor () {\r\n  BnbToSafuu = 100000;\r\n  Safuu = IERC20(0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90);\r\n  USDC = IERC20(0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d);\r\n // safuu = IERC20(0xd9145CCE52D386f254917e481eB44e9943F39138); //for test\r\n   priceFeed = AggregatorV3Interface(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE);\r\n  }\r\n\r\n  function testDiv(uint256 amttobuy, uint256 _factor) public returns (uint256)\r\n    {\r\n        \r\n        uint256 payableAmt; //18decimals\r\n        payableAmt = amttobuy.div(_factor) *(10**18);\r\n       return payableAmt;\r\n       \r\n    }\r\n    function buySafuu(uint256 amttobuy) public payable\r\n    {\r\n        require(amttobuy >= BnbToSafuu, \"Minimum trade amount 1 bnb\");\r\n        uint256 payableAmt; //18decimals\r\n        payableAmt = (amttobuy/BnbToSafuu) *(10**18);\r\n        (bool success, ) = owner().call{value: payableAmt}(\"\");\r\n        require(success, \"Transfer failed!\");\r\n\r\n        //transfer the safuu to user\r\n        Safuu.transfer(msg.sender, amttobuy);\r\n       \r\n    }\r\n    function getLatestPrice() public view returns (int) {\r\n        (\r\n            uint80 roundID, \r\n            int price,\r\n            uint startedAt,\r\n            uint timeStamp,\r\n            uint80 answeredInRound\r\n        ) = priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n    function sellSafuu(uint256 amttosell) public \r\n    {\r\n        require(amttosell == BnbToSafuu, \"Must be 1 bnb worth\");\r\n    _safeTransferFrom(Safuu, msg.sender, address(this), amttosell);\r\n    //transfer BNB to user\r\n    uint256 usdc; //18decimals\r\n    //payableBNB = (amttosell/BnbToSafuu) *(10**18);\r\n    //(bool success, ) = msg.sender.call{value: payableBNB}(\"\");\r\n      //  require(success, \"Transfer failed!\");\r\n     usdc = uint256(getLatestPrice()) *(10**10);\r\n    USDC.transfer(msg.sender, usdc);\r\n    }\r\n\r\n\r\n    function setFactor(uint256 _newfactor) public onlyOwner {\r\n        \r\n        BnbToSafuu = _newfactor;\r\n    }\r\n    function withdrawToOwner()\r\n    public \r\n    { \r\n        // send all Ether to owner\r\n        // Owner can receive Ether since the address of owner is payable\r\n        (bool success, ) = owner().call{value: address(this).balance}(\"\");\r\n        require(success, \"Failed to send Ether\");\r\n        Safuu.transfer(owner(), Safuu.balanceOf(address(this)));\r\n        USDC.transfer(owner(), USDC.balanceOf(address(this)));\r\n    }\r\n    function _safeTransferFrom(\r\n        IERC20 token,\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) private {\r\n        bool sent = token.transferFrom(sender, recipient, amount);\r\n        require(sent, \"Token transfer failed\");\r\n    }\r\n}\r\n"
			},
			"test/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface AggregatorV3Interface {\r\n  function decimals() external view returns (uint8);\r\n\r\n  function description() external view returns (string memory);\r\n\r\n  function version() external view returns (uint256);\r\n\r\n  // getRoundData and latestRoundData should both raise \"No data present\"\r\n  // if they do not have data to report, instead of returning unset values\r\n  // which could be misinterpreted as actual reported values.\r\n  function getRoundData(uint80 _roundId)\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n}"
			},
			"test/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"test/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"test/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8db60f81b61f79fab0366fa7ef9d47ac67462276d0cbe7b36a2fdf74654e9c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c102d1f8b81f966eb8acd919cbe14b3785a2389427154ac99bb54d3e94fddce\",\"dweb:/ipfs/QmX9afvMGRxCX6AZbHRhmkEHYJAGDeyeT5ycx7u43zSsNK\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"test/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"test/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"test/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"test/sis.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/sis.sol\":1202:2551  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/sis.sol\":1202:2551  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206481ce4efc563421e7e9a02057f16ea4f527afad53f1dde13c57c1a48e8c2adc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206481ce4efc563421e7e9a02057f16ea4f527afad53f1dde13c57c1a48e8c2adc64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x81CE4EFC56 CALLVALUE 0x21 0xE7 0xE9 LOG0 KECCAK256 JUMPI CALL PUSH15 0xA4F527AFAD53F1DDE13C57C1A48E8C 0x2A 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1202:1349:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206481ce4efc563421e7e9a02057f16ea4f527afad53f1dde13c57c1a48e8c2adc64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x81CE4EFC56 CALLVALUE 0x21 0xE7 0xE9 LOG0 KECCAK256 JUMPI CALL PUSH15 0xA4F527AFAD53F1DDE13C57C1A48E8C 0x2A 0xDC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1202:1349:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 2551,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206481ce4efc563421e7e9a02057f16ea4f527afad53f1dde13c57c1a48e8c2adc64736f6c63430008070033",
									".code": [
										{
											"begin": 1202,
											"end": 2551,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 2551,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/sis.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8db60f81b61f79fab0366fa7ef9d47ac67462276d0cbe7b36a2fdf74654e9c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c102d1f8b81f966eb8acd919cbe14b3785a2389427154ac99bb54d3e94fddce\",\"dweb:/ipfs/QmX9afvMGRxCX6AZbHRhmkEHYJAGDeyeT5ycx7u43zSsNK\"]},\"test/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"test/Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"test/sis.sol\":{\"keccak256\":\"0x32529b4c74b98de35ec338ddd3f6b601e2d77b24a69491a8bb02f45c6c36d965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882a43fd988a11dcda7effdad62e699b0975d79b16b177d842a8af562781a4d1\",\"dweb:/ipfs/QmZaBEWAPR6mUzC1Xvnm3zhmnd49bUFEhbFv7eavYaTG1W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathInt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/sis.sol\":148:1198  library SafeMathInt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/sis.sol\":148:1198  library SafeMathInt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ec8ec5caad930b9ecf7f0ab56da649fd3d11727fdf061fc6e30168b1594f1a5864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec8ec5caad930b9ecf7f0ab56da649fd3d11727fdf061fc6e30168b1594f1a5864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC DUP15 0xC5 0xCA 0xAD SWAP4 SIGNEXTEND SWAP15 0xCF PUSH32 0xAB56DA649FD3D11727FDF061FC6E30168B1594F1A5864736F6C634300080700 CALLER ",
							"sourceMap": "148:1050:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ec8ec5caad930b9ecf7f0ab56da649fd3d11727fdf061fc6e30168b1594f1a5864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC DUP15 0xC5 0xCA 0xAD SWAP4 SIGNEXTEND SWAP15 0xCF PUSH32 0xAB56DA649FD3D11727FDF061FC6E30168B1594F1A5864736F6C634300080700 CALLER ",
							"sourceMap": "148:1050:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 148,
									"end": 1198,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ec8ec5caad930b9ecf7f0ab56da649fd3d11727fdf061fc6e30168b1594f1a5864736f6c63430008070033",
									".code": [
										{
											"begin": 148,
											"end": 1198,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 148,
											"end": 1198,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/sis.sol\":\"SafeMathInt\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8db60f81b61f79fab0366fa7ef9d47ac67462276d0cbe7b36a2fdf74654e9c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c102d1f8b81f966eb8acd919cbe14b3785a2389427154ac99bb54d3e94fddce\",\"dweb:/ipfs/QmX9afvMGRxCX6AZbHRhmkEHYJAGDeyeT5ycx7u43zSsNK\"]},\"test/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"test/Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"test/sis.sol\":{\"keccak256\":\"0x32529b4c74b98de35ec338ddd3f6b601e2d77b24a69491a8bb02f45c6c36d965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882a43fd988a11dcda7effdad62e699b0975d79b16b177d842a8af562781a4d1\",\"dweb:/ipfs/QmZaBEWAPR6mUzC1Xvnm3zhmnd49bUFEhbFv7eavYaTG1W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"personalSafuuTrader": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BnbToSafuu",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Safuu",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amttobuy",
									"type": "uint256"
								}
							],
							"name": "buySafuu",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amttosell",
									"type": "uint256"
								}
							],
							"name": "sellSafuu",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newfactor",
									"type": "uint256"
								}
							],
							"name": "setFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amttobuy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_factor",
									"type": "uint256"
								}
							],
							"name": "testDiv",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawToOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/sis.sol\":2576:5529  contract personalSafuuTrader is Ownable\r... */\n  mstore(0x40, 0x80)\n    /* \"test/sis.sol\":2885:3214  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"test/Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"test/Ownable.sol\":933:945  _msgSender() */\n  tag_6\n    /* \"test/Ownable.sol\":933:943  _msgSender */\n  shl(0x20, tag_7)\n    /* \"test/Ownable.sol\":933:945  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"test/Ownable.sol\":914:932  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"test/Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"test/sis.sol\":2918:2924  100000 */\n  0x0186a0\n    /* \"test/sis.sol\":2905:2915  BnbToSafuu */\n  0x02\n    /* \"test/sis.sol\":2905:2924  BnbToSafuu = 100000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"test/sis.sol\":2944:2986  0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90 */\n  0xe5ba47fd94cb645ba4119222e34fb33f59c7cd90\n    /* \"test/sis.sol\":2929:2934  Safuu */\n  0x03\n  0x00\n    /* \"test/sis.sol\":2929:2987  Safuu = IERC20(0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test/sis.sol\":3006:3048  0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d */\n  0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\n    /* \"test/sis.sol\":2992:2996  USDC */\n  0x04\n  0x00\n    /* \"test/sis.sol\":2992:3049  USDC = IERC20(0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test/sis.sol\":3165:3207  0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE */\n  0x0567f2323251f0aab15c8dfb1967e4e8a7d42aee\n    /* \"test/sis.sol\":3131:3140  priceFeed */\n  0x01\n  0x00\n    /* \"test/sis.sol\":3131:3208  priceFeed = AggregatorV3Interface(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test/sis.sol\":2576:5529  contract personalSafuuTrader is Ownable\r... */\n  jump(tag_10)\n    /* \"test/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"test/Context.sol\":693:700  address */\n  0x00\n    /* \"test/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"test/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"test/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"test/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"test/Ownable.sol\":2336:2352  address oldOwner */\n  0x00\n    /* \"test/Ownable.sol\":2355:2361  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"test/Ownable.sol\":2336:2361  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"test/Ownable.sol\":2380:2388  newOwner */\n  dup2\n    /* \"test/Ownable.sol\":2371:2377  _owner */\n  0x00\n  dup1\n    /* \"test/Ownable.sol\":2371:2388  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test/Ownable.sol\":2434:2442  newOwner */\n  dup2\n    /* \"test/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"test/Ownable.sol\":2424:2432  oldOwner */\n  dup2\n    /* \"test/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"test/Ownable.sol\":2326:2450  {... */\n  pop\n    /* \"test/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"test/sis.sol\":2576:5529  contract personalSafuuTrader is Ownable\r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/sis.sol\":2576:5529  contract personalSafuuTrader is Ownable\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8a71c2f4\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8a71c2f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e15f473\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xade87ecc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xebc4197c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x3b3a7e31\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3cb40e16\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x80c31426\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x817e9d31\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"test/sis.sol\":3220:3453  function testDiv(uint256 amttobuy, uint256 _factor) public returns (uint256)\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/sis.sol\":4831:5252  function withdrawToOwner()\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"test/Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"test/sis.sol\":3459:3900  function buySafuu(uint256 amttobuy) public payable\r... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"test/sis.sol\":4717:4825  function setFactor(uint256 _newfactor) public onlyOwner {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"test/sis.sol\":2798:2816  IERC20 public USDC */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/sis.sol\":2772:2791  IERC20 public Safuu */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/sis.sol\":3906:4190  function getLatestPrice() public view returns (int) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/sis.sol\":4196:4707  function sellSafuu(uint256 amttosell) public \r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"test/sis.sol\":2738:2764  uint256  public BnbToSafuu */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"test/sis.sol\":3220:3453  function testDiv(uint256 amttobuy, uint256 _factor) public returns (uint256)\r... */\n    tag_19:\n        /* \"test/sis.sol\":3288:3295  uint256 */\n      0x00\n        /* \"test/sis.sol\":3323:3341  uint256 payableAmt */\n      dup1\n        /* \"test/sis.sol\":3402:3408  10**18 */\n      0x0de0b6b3a7640000\n        /* \"test/sis.sol\":3378:3399  amttobuy.div(_factor) */\n      tag_69\n        /* \"test/sis.sol\":3391:3398  _factor */\n      dup5\n        /* \"test/sis.sol\":3378:3386  amttobuy */\n      dup7\n        /* \"test/sis.sol\":3378:3390  amttobuy.div */\n      tag_70\n      swap1\n        /* \"test/sis.sol\":3378:3399  amttobuy.div(_factor) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_69:\n        /* \"test/sis.sol\":3378:3409  amttobuy.div(_factor) *(10**18) */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"test/sis.sol\":3365:3409  payableAmt = amttobuy.div(_factor) *(10**18) */\n      swap1\n      pop\n        /* \"test/sis.sol\":3426:3436  payableAmt */\n      dup1\n        /* \"test/sis.sol\":3419:3436  return payableAmt */\n      swap2\n      pop\n      pop\n        /* \"test/sis.sol\":3220:3453  function testDiv(uint256 amttobuy, uint256 _factor) public returns (uint256)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":4831:5252  function withdrawToOwner()\r... */\n    tag_24:\n        /* \"test/sis.sol\":4999:5011  bool success */\n      0x00\n        /* \"test/sis.sol\":5017:5024  owner() */\n      tag_74\n        /* \"test/sis.sol\":5017:5022  owner */\n      tag_47\n        /* \"test/sis.sol\":5017:5024  owner() */\n      jump\t// in\n    tag_74:\n        /* \"test/sis.sol\":5017:5029  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":5037:5058  address(this).balance */\n      selfbalance\n        /* \"test/sis.sol\":5017:5063  owner().call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_79\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_78)\n    tag_79:\n      0x60\n      swap2\n      pop\n    tag_78:\n      pop\n        /* \"test/sis.sol\":4998:5063  (bool success, ) = owner().call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"test/sis.sol\":5082:5089  success */\n      dup1\n        /* \"test/sis.sol\":5074:5114  require(success, \"Failed to send Ether\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"test/sis.sol\":5125:5130  Safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":5125:5139  Safuu.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"test/sis.sol\":5140:5147  owner() */\n      tag_83\n        /* \"test/sis.sol\":5140:5145  owner */\n      tag_47\n        /* \"test/sis.sol\":5140:5147  owner() */\n      jump\t// in\n    tag_83:\n        /* \"test/sis.sol\":5149:5154  Safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":5149:5164  Safuu.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"test/sis.sol\":5173:5177  this */\n      address\n        /* \"test/sis.sol\":5149:5179  Safuu.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"test/sis.sol\":5125:5180  Safuu.transfer(owner(), Safuu.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      pop\n        /* \"test/sis.sol\":5191:5195  USDC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":5191:5204  USDC.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"test/sis.sol\":5205:5212  owner() */\n      tag_97\n        /* \"test/sis.sol\":5205:5210  owner */\n      tag_47\n        /* \"test/sis.sol\":5205:5212  owner() */\n      jump\t// in\n    tag_97:\n        /* \"test/sis.sol\":5214:5218  USDC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":5214:5228  USDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"test/sis.sol\":5237:5241  this */\n      address\n        /* \"test/sis.sol\":5214:5243  USDC.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_98:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_102:\n        /* \"test/sis.sol\":5191:5244  USDC.transfer(owner(), USDC.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_107:\n      pop\n        /* \"test/sis.sol\":4876:5252  { \r... */\n      pop\n        /* \"test/sis.sol\":4831:5252  function withdrawToOwner()\r... */\n      jump\t// out\n        /* \"test/Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_27:\n        /* \"test/Ownable.sol\":1252:1264  _msgSender() */\n      tag_109\n        /* \"test/Ownable.sol\":1252:1262  _msgSender */\n      tag_110\n        /* \"test/Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"test/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":1241:1248  owner() */\n      tag_111\n        /* \"test/Ownable.sol\":1241:1246  owner */\n      tag_47\n        /* \"test/Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_111:\n        /* \"test/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"test/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"test/Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      tag_116\n        /* \"test/Ownable.sol\":1752:1753  0 */\n      0x00\n        /* \"test/Ownable.sol\":1725:1743  _transferOwnership */\n      tag_117\n        /* \"test/Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_116:\n        /* \"test/Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"test/sis.sol\":3459:3900  function buySafuu(uint256 amttobuy) public payable\r... */\n    tag_31:\n        /* \"test/sis.sol\":3546:3556  BnbToSafuu */\n      sload(0x02)\n        /* \"test/sis.sol\":3534:3542  amttobuy */\n      dup2\n        /* \"test/sis.sol\":3534:3556  amttobuy >= BnbToSafuu */\n      lt\n      iszero\n        /* \"test/sis.sol\":3526:3587  require(amttobuy >= BnbToSafuu, \"Minimum trade amount 1 bnb\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"test/sis.sol\":3598:3616  uint256 payableAmt */\n      0x00\n        /* \"test/sis.sol\":3677:3683  10**18 */\n      0x0de0b6b3a7640000\n        /* \"test/sis.sol\":3663:3673  BnbToSafuu */\n      sload(0x02)\n        /* \"test/sis.sol\":3654:3662  amttobuy */\n      dup4\n        /* \"test/sis.sol\":3654:3673  amttobuy/BnbToSafuu */\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"test/sis.sol\":3653:3684  (amttobuy/BnbToSafuu) *(10**18) */\n      tag_124\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_124:\n        /* \"test/sis.sol\":3640:3684  payableAmt = (amttobuy/BnbToSafuu) *(10**18) */\n      swap1\n      pop\n        /* \"test/sis.sol\":3696:3708  bool success */\n      0x00\n        /* \"test/sis.sol\":3714:3721  owner() */\n      tag_125\n        /* \"test/sis.sol\":3714:3719  owner */\n      tag_47\n        /* \"test/sis.sol\":3714:3721  owner() */\n      jump\t// in\n    tag_125:\n        /* \"test/sis.sol\":3714:3726  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":3734:3744  payableAmt */\n      dup3\n        /* \"test/sis.sol\":3714:3749  owner().call{value: payableAmt}(\"\") */\n      mload(0x40)\n      tag_126\n      swap1\n      tag_76\n      jump\t// in\n    tag_126:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_129\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_128)\n    tag_129:\n      0x60\n      swap2\n      pop\n    tag_128:\n      pop\n        /* \"test/sis.sol\":3695:3749  (bool success, ) = owner().call{value: payableAmt}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"test/sis.sol\":3768:3775  success */\n      dup1\n        /* \"test/sis.sol\":3760:3796  require(success, \"Transfer failed!\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"test/sis.sol\":3847:3852  Safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":3847:3861  Safuu.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"test/sis.sol\":3862:3872  msg.sender */\n      caller\n        /* \"test/sis.sol\":3874:3882  amttobuy */\n      dup6\n        /* \"test/sis.sol\":3847:3883  Safuu.transfer(msg.sender, amttobuy) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_137:\n      pop\n        /* \"test/sis.sol\":3515:3900  {\r... */\n      pop\n      pop\n        /* \"test/sis.sol\":3459:3900  function buySafuu(uint256 amttobuy) public payable\r... */\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":4717:4825  function setFactor(uint256 _newfactor) public onlyOwner {\r... */\n    tag_35:\n        /* \"test/Ownable.sol\":1252:1264  _msgSender() */\n      tag_139\n        /* \"test/Ownable.sol\":1252:1262  _msgSender */\n      tag_110\n        /* \"test/Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"test/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":1241:1248  owner() */\n      tag_140\n        /* \"test/Ownable.sol\":1241:1246  owner */\n      tag_47\n        /* \"test/Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_140:\n        /* \"test/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"test/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_114\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \"test/sis.sol\":4807:4817  _newfactor */\n      dup1\n        /* \"test/sis.sol\":4794:4804  BnbToSafuu */\n      0x02\n        /* \"test/sis.sol\":4794:4817  BnbToSafuu = _newfactor */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test/sis.sol\":4717:4825  function setFactor(uint256 _newfactor) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":2798:2816  IERC20 public USDC */\n    tag_38:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"test/sis.sol\":2772:2791  IERC20 public Safuu */\n    tag_43:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"test/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_47:\n        /* \"test/Ownable.sol\":1075:1082  address */\n      0x00\n        /* \"test/Ownable.sol\":1101:1107  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":1094:1107  return _owner */\n      swap1\n      pop\n        /* \"test/Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"test/sis.sol\":3906:4190  function getLatestPrice() public view returns (int) {\r... */\n    tag_52:\n        /* \"test/sis.sol\":3953:3956  int */\n      0x00\n        /* \"test/sis.sol\":3984:3998  uint80 roundID */\n      dup1\n        /* \"test/sis.sol\":4014:4023  int price */\n      0x00\n        /* \"test/sis.sol\":4038:4052  uint startedAt */\n      dup1\n        /* \"test/sis.sol\":4067:4081  uint timeStamp */\n      0x00\n        /* \"test/sis.sol\":4096:4118  uint80 answeredInRound */\n      dup1\n        /* \"test/sis.sol\":4132:4141  priceFeed */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":4132:4157  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"test/sis.sol\":4132:4159  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"test/sis.sol\":3969:4159  (\r... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"test/sis.sol\":4177:4182  price */\n      dup4\n        /* \"test/sis.sol\":4170:4182  return price */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"test/sis.sol\":3906:4190  function getLatestPrice() public view returns (int) {\r... */\n      swap1\n      jump\t// out\n        /* \"test/sis.sol\":4196:4707  function sellSafuu(uint256 amttosell) public \r... */\n    tag_58:\n        /* \"test/sis.sol\":4279:4289  BnbToSafuu */\n      sload(0x02)\n        /* \"test/sis.sol\":4266:4275  amttosell */\n      dup2\n        /* \"test/sis.sol\":4266:4289  amttosell == BnbToSafuu */\n      eq\n        /* \"test/sis.sol\":4258:4313  require(amttosell == BnbToSafuu, \"Must be 1 bnb worth\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"test/sis.sol\":4320:4382  _safeTransferFrom(Safuu, msg.sender, address(this), amttosell) */\n      tag_155\n        /* \"test/sis.sol\":4338:4343  Safuu */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":4345:4355  msg.sender */\n      caller\n        /* \"test/sis.sol\":4365:4369  this */\n      address\n        /* \"test/sis.sol\":4372:4381  amttosell */\n      dup5\n        /* \"test/sis.sol\":4320:4337  _safeTransferFrom */\n      tag_156\n        /* \"test/sis.sol\":4320:4382  _safeTransferFrom(Safuu, msg.sender, address(this), amttosell) */\n      jump\t// in\n    tag_155:\n        /* \"test/sis.sol\":4417:4429  uint256 usdc */\n      0x00\n        /* \"test/sis.sol\":4654:4660  10**10 */\n      0x02540be400\n        /* \"test/sis.sol\":4634:4650  getLatestPrice() */\n      tag_157\n        /* \"test/sis.sol\":4634:4648  getLatestPrice */\n      tag_52\n        /* \"test/sis.sol\":4634:4650  getLatestPrice() */\n      jump\t// in\n    tag_157:\n        /* \"test/sis.sol\":4626:4661  uint256(getLatestPrice()) *(10**10) */\n      tag_158\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_158:\n        /* \"test/sis.sol\":4619:4661  usdc = uint256(getLatestPrice()) *(10**10) */\n      swap1\n      pop\n        /* \"test/sis.sol\":4668:4672  USDC */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/sis.sol\":4668:4681  USDC.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"test/sis.sol\":4682:4692  msg.sender */\n      caller\n        /* \"test/sis.sol\":4694:4698  usdc */\n      dup4\n        /* \"test/sis.sol\":4668:4699  USDC.transfer(msg.sender, usdc) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_163:\n      pop\n        /* \"test/sis.sol\":4247:4707  {\r... */\n      pop\n        /* \"test/sis.sol\":4196:4707  function sellSafuu(uint256 amttosell) public \r... */\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":2738:2764  uint256  public BnbToSafuu */\n    tag_61:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"test/Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_67:\n        /* \"test/Ownable.sol\":1252:1264  _msgSender() */\n      tag_165\n        /* \"test/Ownable.sol\":1252:1262  _msgSender */\n      tag_110\n        /* \"test/Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"test/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":1241:1248  owner() */\n      tag_166\n        /* \"test/Ownable.sol\":1241:1246  owner */\n      tag_47\n        /* \"test/Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_166:\n        /* \"test/Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"test/Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_114\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"test/Ownable.sol\":2019:2020  0 */\n      0x00\n        /* \"test/Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":1999:2007  newOwner */\n      dup2\n        /* \"test/Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"test/Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"test/Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      tag_173\n        /* \"test/Ownable.sol\":2093:2101  newOwner */\n      dup2\n        /* \"test/Ownable.sol\":2074:2092  _transferOwnership */\n      tag_117\n        /* \"test/Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_173:\n        /* \"test/Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":2051:2183  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_70:\n        /* \"test/sis.sol\":2109:2116  uint256 */\n      0x00\n        /* \"test/sis.sol\":2136:2175  div(a, b, \"SafeMath: division by zero\") */\n      tag_175\n        /* \"test/sis.sol\":2140:2141  a */\n      dup4\n        /* \"test/sis.sol\":2143:2144  b */\n      dup4\n        /* \"test/sis.sol\":2136:2175  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"test/sis.sol\":2136:2139  div */\n      tag_176\n        /* \"test/sis.sol\":2136:2175  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_175:\n        /* \"test/sis.sol\":2129:2175  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"test/sis.sol\":2051:2183  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"test/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_110:\n        /* \"test/Context.sol\":693:700  address */\n      0x00\n        /* \"test/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"test/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"test/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"test/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_117:\n        /* \"test/Ownable.sol\":2336:2352  address oldOwner */\n      0x00\n        /* \"test/Ownable.sol\":2355:2361  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":2336:2361  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"test/Ownable.sol\":2380:2388  newOwner */\n      dup2\n        /* \"test/Ownable.sol\":2371:2377  _owner */\n      0x00\n      dup1\n        /* \"test/Ownable.sol\":2371:2388  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"test/Ownable.sol\":2434:2442  newOwner */\n      dup2\n        /* \"test/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/Ownable.sol\":2424:2432  oldOwner */\n      dup2\n        /* \"test/Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"test/Ownable.sol\":2326:2450  {... */\n      pop\n        /* \"test/Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":5258:5526  function _safeTransferFrom(\r... */\n    tag_156:\n        /* \"test/sis.sol\":5412:5421  bool sent */\n      0x00\n        /* \"test/sis.sol\":5424:5429  token */\n      dup5\n        /* \"test/sis.sol\":5424:5442  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"test/sis.sol\":5443:5449  sender */\n      dup6\n        /* \"test/sis.sol\":5451:5460  recipient */\n      dup6\n        /* \"test/sis.sol\":5462:5468  amount */\n      dup6\n        /* \"test/sis.sol\":5424:5469  token.transferFrom(sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_185:\n        /* \"test/sis.sol\":5412:5469  bool sent = token.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"test/sis.sol\":5488:5492  sent */\n      dup1\n        /* \"test/sis.sol\":5480:5518  require(sent, \"Token transfer failed\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"test/sis.sol\":5401:5526  {\r... */\n      pop\n        /* \"test/sis.sol\":5258:5526  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"test/sis.sol\":2191:2416  function div(\r... */\n    tag_176:\n        /* \"test/sis.sol\":2311:2318  uint256 */\n      0x00\n        /* \"test/sis.sol\":2343:2344  0 */\n      dup1\n        /* \"test/sis.sol\":2339:2340  b */\n      dup4\n        /* \"test/sis.sol\":2339:2344  b > 0 */\n      gt\n        /* \"test/sis.sol\":2346:2358  errorMessage */\n      dup3\n        /* \"test/sis.sol\":2331:2359  require(b > 0, errorMessage) */\n      swap1\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n      pop\n        /* \"test/sis.sol\":2370:2379  uint256 c */\n      0x00\n        /* \"test/sis.sol\":2386:2387  b */\n      dup4\n        /* \"test/sis.sol\":2382:2383  a */\n      dup6\n        /* \"test/sis.sol\":2382:2387  a / b */\n      tag_193\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_193:\n        /* \"test/sis.sol\":2370:2387  uint256 c = a / b */\n      swap1\n      pop\n        /* \"test/sis.sol\":2407:2408  c */\n      dup1\n        /* \"test/sis.sol\":2400:2408  return c */\n      swap2\n      pop\n      pop\n        /* \"test/sis.sol\":2191:2416  function div(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_195:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_197\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_199:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_201\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:436   */\n    tag_203:\n        /* \"#utility.yul\":351:356   */\n      0x00\n        /* \"#utility.yul\":382:388   */\n      dup2\n        /* \"#utility.yul\":376:389   */\n      mload\n        /* \"#utility.yul\":367:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":398:430   */\n      tag_205\n        /* \"#utility.yul\":424:429   */\n      dup2\n        /* \"#utility.yul\":398:430   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":295:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:581   */\n    tag_207:\n        /* \"#utility.yul\":488:493   */\n      0x00\n        /* \"#utility.yul\":526:532   */\n      dup2\n        /* \"#utility.yul\":513:533   */\n      calldataload\n        /* \"#utility.yul\":504:533   */\n      swap1\n      pop\n        /* \"#utility.yul\":542:575   */\n      tag_209\n        /* \"#utility.yul\":569:574   */\n      dup2\n        /* \"#utility.yul\":542:575   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":442:581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":587:730   */\n    tag_211:\n        /* \"#utility.yul\":644:649   */\n      0x00\n        /* \"#utility.yul\":675:681   */\n      dup2\n        /* \"#utility.yul\":669:682   */\n      mload\n        /* \"#utility.yul\":660:682   */\n      swap1\n      pop\n        /* \"#utility.yul\":691:724   */\n      tag_213\n        /* \"#utility.yul\":718:723   */\n      dup2\n        /* \"#utility.yul\":691:724   */\n      tag_210\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":587:730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":736:877   */\n    tag_214:\n        /* \"#utility.yul\":792:797   */\n      0x00\n        /* \"#utility.yul\":823:829   */\n      dup2\n        /* \"#utility.yul\":817:830   */\n      mload\n        /* \"#utility.yul\":808:830   */\n      swap1\n      pop\n        /* \"#utility.yul\":839:871   */\n      tag_216\n        /* \"#utility.yul\":865:870   */\n      dup2\n        /* \"#utility.yul\":839:871   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":736:877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":883:1212   */\n    tag_66:\n        /* \"#utility.yul\":942:948   */\n      0x00\n        /* \"#utility.yul\":991:993   */\n      0x20\n        /* \"#utility.yul\":979:988   */\n      dup3\n        /* \"#utility.yul\":970:977   */\n      dup5\n        /* \"#utility.yul\":966:989   */\n      sub\n        /* \"#utility.yul\":962:994   */\n      slt\n        /* \"#utility.yul\":959:1078   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":997:1076   */\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":959:1078   */\n    tag_219:\n        /* \"#utility.yul\":1117:1118   */\n      0x00\n        /* \"#utility.yul\":1142:1195   */\n      tag_222\n        /* \"#utility.yul\":1187:1194   */\n      dup5\n        /* \"#utility.yul\":1178:1184   */\n      dup3\n        /* \"#utility.yul\":1167:1176   */\n      dup6\n        /* \"#utility.yul\":1163:1185   */\n      add\n        /* \"#utility.yul\":1142:1195   */\n      tag_195\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1132:1195   */\n      swap2\n      pop\n        /* \"#utility.yul\":1088:1205   */\n      pop\n        /* \"#utility.yul\":883:1212   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1218:1563   */\n    tag_96:\n        /* \"#utility.yul\":1285:1291   */\n      0x00\n        /* \"#utility.yul\":1334:1336   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup3\n        /* \"#utility.yul\":1313:1320   */\n      dup5\n        /* \"#utility.yul\":1309:1332   */\n      sub\n        /* \"#utility.yul\":1305:1337   */\n      slt\n        /* \"#utility.yul\":1302:1421   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":1340:1419   */\n      tag_225\n      tag_221\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1302:1421   */\n    tag_224:\n        /* \"#utility.yul\":1460:1461   */\n      0x00\n        /* \"#utility.yul\":1485:1546   */\n      tag_226\n        /* \"#utility.yul\":1538:1545   */\n      dup5\n        /* \"#utility.yul\":1529:1535   */\n      dup3\n        /* \"#utility.yul\":1518:1527   */\n      dup6\n        /* \"#utility.yul\":1514:1536   */\n      add\n        /* \"#utility.yul\":1485:1546   */\n      tag_199\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1475:1546   */\n      swap2\n      pop\n        /* \"#utility.yul\":1431:1556   */\n      pop\n        /* \"#utility.yul\":1218:1563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1569:1898   */\n    tag_30:\n        /* \"#utility.yul\":1628:1634   */\n      0x00\n        /* \"#utility.yul\":1677:1679   */\n      0x20\n        /* \"#utility.yul\":1665:1674   */\n      dup3\n        /* \"#utility.yul\":1656:1663   */\n      dup5\n        /* \"#utility.yul\":1652:1675   */\n      sub\n        /* \"#utility.yul\":1648:1680   */\n      slt\n        /* \"#utility.yul\":1645:1764   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1683:1762   */\n      tag_229\n      tag_221\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1645:1764   */\n    tag_228:\n        /* \"#utility.yul\":1803:1804   */\n      0x00\n        /* \"#utility.yul\":1828:1881   */\n      tag_230\n        /* \"#utility.yul\":1873:1880   */\n      dup5\n        /* \"#utility.yul\":1864:1870   */\n      dup3\n        /* \"#utility.yul\":1853:1862   */\n      dup6\n        /* \"#utility.yul\":1849:1871   */\n      add\n        /* \"#utility.yul\":1828:1881   */\n      tag_207\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1818:1881   */\n      swap2\n      pop\n        /* \"#utility.yul\":1774:1891   */\n      pop\n        /* \"#utility.yul\":1569:1898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1904:2255   */\n    tag_89:\n        /* \"#utility.yul\":1974:1980   */\n      0x00\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup3\n        /* \"#utility.yul\":2002:2009   */\n      dup5\n        /* \"#utility.yul\":1998:2021   */\n      sub\n        /* \"#utility.yul\":1994:2026   */\n      slt\n        /* \"#utility.yul\":1991:2110   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2029:2108   */\n      tag_233\n      tag_221\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1991:2110   */\n    tag_232:\n        /* \"#utility.yul\":2149:2150   */\n      0x00\n        /* \"#utility.yul\":2174:2238   */\n      tag_234\n        /* \"#utility.yul\":2230:2237   */\n      dup5\n        /* \"#utility.yul\":2221:2227   */\n      dup3\n        /* \"#utility.yul\":2210:2219   */\n      dup6\n        /* \"#utility.yul\":2206:2228   */\n      add\n        /* \"#utility.yul\":2174:2238   */\n      tag_211\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2164:2238   */\n      swap2\n      pop\n        /* \"#utility.yul\":2120:2248   */\n      pop\n        /* \"#utility.yul\":1904:2255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2735   */\n    tag_18:\n        /* \"#utility.yul\":2329:2335   */\n      0x00\n        /* \"#utility.yul\":2337:2343   */\n      dup1\n        /* \"#utility.yul\":2386:2388   */\n      0x40\n        /* \"#utility.yul\":2374:2383   */\n      dup4\n        /* \"#utility.yul\":2365:2372   */\n      dup6\n        /* \"#utility.yul\":2361:2384   */\n      sub\n        /* \"#utility.yul\":2357:2389   */\n      slt\n        /* \"#utility.yul\":2354:2473   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2392:2471   */\n      tag_237\n      tag_221\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2354:2473   */\n    tag_236:\n        /* \"#utility.yul\":2512:2513   */\n      0x00\n        /* \"#utility.yul\":2537:2590   */\n      tag_238\n        /* \"#utility.yul\":2582:2589   */\n      dup6\n        /* \"#utility.yul\":2573:2579   */\n      dup3\n        /* \"#utility.yul\":2562:2571   */\n      dup7\n        /* \"#utility.yul\":2558:2580   */\n      add\n        /* \"#utility.yul\":2537:2590   */\n      tag_207\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2527:2590   */\n      swap3\n      pop\n        /* \"#utility.yul\":2483:2600   */\n      pop\n        /* \"#utility.yul\":2639:2641   */\n      0x20\n        /* \"#utility.yul\":2665:2718   */\n      tag_239\n        /* \"#utility.yul\":2710:2717   */\n      dup6\n        /* \"#utility.yul\":2701:2707   */\n      dup3\n        /* \"#utility.yul\":2690:2699   */\n      dup7\n        /* \"#utility.yul\":2686:2708   */\n      add\n        /* \"#utility.yul\":2665:2718   */\n      tag_207\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2655:2718   */\n      swap2\n      pop\n        /* \"#utility.yul\":2610:2728   */\n      pop\n        /* \"#utility.yul\":2261:2735   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:3712   */\n    tag_150:\n        /* \"#utility.yul\":2844:2850   */\n      0x00\n        /* \"#utility.yul\":2852:2858   */\n      dup1\n        /* \"#utility.yul\":2860:2866   */\n      0x00\n        /* \"#utility.yul\":2868:2874   */\n      dup1\n        /* \"#utility.yul\":2876:2882   */\n      0x00\n        /* \"#utility.yul\":2925:2928   */\n      0xa0\n        /* \"#utility.yul\":2913:2922   */\n      dup7\n        /* \"#utility.yul\":2904:2911   */\n      dup9\n        /* \"#utility.yul\":2900:2923   */\n      sub\n        /* \"#utility.yul\":2896:2929   */\n      slt\n        /* \"#utility.yul\":2893:3013   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2932:3011   */\n      tag_242\n      tag_221\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2893:3013   */\n    tag_241:\n        /* \"#utility.yul\":3052:3053   */\n      0x00\n        /* \"#utility.yul\":3077:3140   */\n      tag_243\n        /* \"#utility.yul\":3132:3139   */\n      dup9\n        /* \"#utility.yul\":3123:3129   */\n      dup3\n        /* \"#utility.yul\":3112:3121   */\n      dup10\n        /* \"#utility.yul\":3108:3130   */\n      add\n        /* \"#utility.yul\":3077:3140   */\n      tag_214\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3067:3140   */\n      swap6\n      pop\n        /* \"#utility.yul\":3023:3150   */\n      pop\n        /* \"#utility.yul\":3189:3191   */\n      0x20\n        /* \"#utility.yul\":3215:3278   */\n      tag_244\n        /* \"#utility.yul\":3270:3277   */\n      dup9\n        /* \"#utility.yul\":3261:3267   */\n      dup3\n        /* \"#utility.yul\":3250:3259   */\n      dup10\n        /* \"#utility.yul\":3246:3268   */\n      add\n        /* \"#utility.yul\":3215:3278   */\n      tag_203\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3205:3278   */\n      swap5\n      pop\n        /* \"#utility.yul\":3160:3288   */\n      pop\n        /* \"#utility.yul\":3327:3329   */\n      0x40\n        /* \"#utility.yul\":3353:3417   */\n      tag_245\n        /* \"#utility.yul\":3409:3416   */\n      dup9\n        /* \"#utility.yul\":3400:3406   */\n      dup3\n        /* \"#utility.yul\":3389:3398   */\n      dup10\n        /* \"#utility.yul\":3385:3407   */\n      add\n        /* \"#utility.yul\":3353:3417   */\n      tag_211\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3343:3417   */\n      swap4\n      pop\n        /* \"#utility.yul\":3298:3427   */\n      pop\n        /* \"#utility.yul\":3466:3468   */\n      0x60\n        /* \"#utility.yul\":3492:3556   */\n      tag_246\n        /* \"#utility.yul\":3548:3555   */\n      dup9\n        /* \"#utility.yul\":3539:3545   */\n      dup3\n        /* \"#utility.yul\":3528:3537   */\n      dup10\n        /* \"#utility.yul\":3524:3546   */\n      add\n        /* \"#utility.yul\":3492:3556   */\n      tag_211\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3482:3556   */\n      swap3\n      pop\n        /* \"#utility.yul\":3437:3566   */\n      pop\n        /* \"#utility.yul\":3605:3608   */\n      0x80\n        /* \"#utility.yul\":3632:3695   */\n      tag_247\n        /* \"#utility.yul\":3687:3694   */\n      dup9\n        /* \"#utility.yul\":3678:3684   */\n      dup3\n        /* \"#utility.yul\":3667:3676   */\n      dup10\n        /* \"#utility.yul\":3663:3685   */\n      add\n        /* \"#utility.yul\":3632:3695   */\n      tag_214\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3622:3695   */\n      swap2\n      pop\n        /* \"#utility.yul\":3576:3705   */\n      pop\n        /* \"#utility.yul\":2741:3712   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3718:3836   */\n    tag_248:\n        /* \"#utility.yul\":3805:3829   */\n      tag_250\n        /* \"#utility.yul\":3823:3828   */\n      dup2\n        /* \"#utility.yul\":3805:3829   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3800:3803   */\n      dup3\n        /* \"#utility.yul\":3793:3830   */\n      mstore\n        /* \"#utility.yul\":3718:3836   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3842:4001   */\n    tag_252:\n        /* \"#utility.yul\":3943:3994   */\n      tag_254\n        /* \"#utility.yul\":3988:3993   */\n      dup2\n        /* \"#utility.yul\":3943:3994   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3938:3941   */\n      dup3\n        /* \"#utility.yul\":3931:3995   */\n      mstore\n        /* \"#utility.yul\":3842:4001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4007:4122   */\n    tag_256:\n        /* \"#utility.yul\":4092:4115   */\n      tag_258\n        /* \"#utility.yul\":4109:4114   */\n      dup2\n        /* \"#utility.yul\":4092:4115   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4087:4090   */\n      dup3\n        /* \"#utility.yul\":4080:4116   */\n      mstore\n        /* \"#utility.yul\":4007:4122   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4128:4492   */\n    tag_260:\n        /* \"#utility.yul\":4216:4219   */\n      0x00\n        /* \"#utility.yul\":4244:4283   */\n      tag_262\n        /* \"#utility.yul\":4277:4282   */\n      dup3\n        /* \"#utility.yul\":4244:4283   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4299:4370   */\n      tag_264\n        /* \"#utility.yul\":4363:4369   */\n      dup2\n        /* \"#utility.yul\":4358:4361   */\n      dup6\n        /* \"#utility.yul\":4299:4370   */\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4292:4370   */\n      swap4\n      pop\n        /* \"#utility.yul\":4379:4431   */\n      tag_266\n        /* \"#utility.yul\":4424:4430   */\n      dup2\n        /* \"#utility.yul\":4419:4422   */\n      dup6\n        /* \"#utility.yul\":4412:4416   */\n      0x20\n        /* \"#utility.yul\":4405:4410   */\n      dup7\n        /* \"#utility.yul\":4401:4417   */\n      add\n        /* \"#utility.yul\":4379:4431   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4456:4485   */\n      tag_268\n        /* \"#utility.yul\":4478:4484   */\n      dup2\n        /* \"#utility.yul\":4456:4485   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4451:4454   */\n      dup5\n        /* \"#utility.yul\":4447:4486   */\n      add\n        /* \"#utility.yul\":4440:4486   */\n      swap2\n      pop\n        /* \"#utility.yul\":4220:4492   */\n      pop\n        /* \"#utility.yul\":4128:4492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4498:4864   */\n    tag_270:\n        /* \"#utility.yul\":4640:4643   */\n      0x00\n        /* \"#utility.yul\":4661:4728   */\n      tag_272\n        /* \"#utility.yul\":4725:4727   */\n      0x26\n        /* \"#utility.yul\":4720:4723   */\n      dup4\n        /* \"#utility.yul\":4661:4728   */\n      tag_265\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4654:4728   */\n      swap2\n      pop\n        /* \"#utility.yul\":4737:4830   */\n      tag_273\n        /* \"#utility.yul\":4826:4829   */\n      dup3\n        /* \"#utility.yul\":4737:4830   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4855:4857   */\n      0x40\n        /* \"#utility.yul\":4850:4853   */\n      dup3\n        /* \"#utility.yul\":4846:4858   */\n      add\n        /* \"#utility.yul\":4839:4858   */\n      swap1\n      pop\n        /* \"#utility.yul\":4498:4864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5236   */\n    tag_275:\n        /* \"#utility.yul\":5012:5015   */\n      0x00\n        /* \"#utility.yul\":5033:5100   */\n      tag_277\n        /* \"#utility.yul\":5097:5099   */\n      0x14\n        /* \"#utility.yul\":5092:5095   */\n      dup4\n        /* \"#utility.yul\":5033:5100   */\n      tag_265\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5026:5100   */\n      swap2\n      pop\n        /* \"#utility.yul\":5109:5202   */\n      tag_278\n        /* \"#utility.yul\":5198:5201   */\n      dup3\n        /* \"#utility.yul\":5109:5202   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":5227:5229   */\n      0x20\n        /* \"#utility.yul\":5222:5225   */\n      dup3\n        /* \"#utility.yul\":5218:5230   */\n      add\n        /* \"#utility.yul\":5211:5230   */\n      swap1\n      pop\n        /* \"#utility.yul\":4870:5236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5608   */\n    tag_280:\n        /* \"#utility.yul\":5384:5387   */\n      0x00\n        /* \"#utility.yul\":5405:5472   */\n      tag_282\n        /* \"#utility.yul\":5469:5471   */\n      0x15\n        /* \"#utility.yul\":5464:5467   */\n      dup4\n        /* \"#utility.yul\":5405:5472   */\n      tag_265\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5398:5472   */\n      swap2\n      pop\n        /* \"#utility.yul\":5481:5574   */\n      tag_283\n        /* \"#utility.yul\":5570:5573   */\n      dup3\n        /* \"#utility.yul\":5481:5574   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5599:5601   */\n      0x20\n        /* \"#utility.yul\":5594:5597   */\n      dup3\n        /* \"#utility.yul\":5590:5602   */\n      add\n        /* \"#utility.yul\":5583:5602   */\n      swap1\n      pop\n        /* \"#utility.yul\":5242:5608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5614:5980   */\n    tag_285:\n        /* \"#utility.yul\":5756:5759   */\n      0x00\n        /* \"#utility.yul\":5777:5844   */\n      tag_287\n        /* \"#utility.yul\":5841:5843   */\n      0x1a\n        /* \"#utility.yul\":5836:5839   */\n      dup4\n        /* \"#utility.yul\":5777:5844   */\n      tag_265\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5770:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5853:5946   */\n      tag_288\n        /* \"#utility.yul\":5942:5945   */\n      dup3\n        /* \"#utility.yul\":5853:5946   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5971:5973   */\n      0x20\n        /* \"#utility.yul\":5966:5969   */\n      dup3\n        /* \"#utility.yul\":5962:5974   */\n      add\n        /* \"#utility.yul\":5955:5974   */\n      swap1\n      pop\n        /* \"#utility.yul\":5614:5980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6352   */\n    tag_290:\n        /* \"#utility.yul\":6128:6131   */\n      0x00\n        /* \"#utility.yul\":6149:6216   */\n      tag_292\n        /* \"#utility.yul\":6213:6215   */\n      0x13\n        /* \"#utility.yul\":6208:6211   */\n      dup4\n        /* \"#utility.yul\":6149:6216   */\n      tag_265\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6142:6216   */\n      swap2\n      pop\n        /* \"#utility.yul\":6225:6318   */\n      tag_293\n        /* \"#utility.yul\":6314:6317   */\n      dup3\n        /* \"#utility.yul\":6225:6318   */\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6343:6345   */\n      0x20\n        /* \"#utility.yul\":6338:6341   */\n      dup3\n        /* \"#utility.yul\":6334:6346   */\n      add\n        /* \"#utility.yul\":6327:6346   */\n      swap1\n      pop\n        /* \"#utility.yul\":5986:6352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6358:6724   */\n    tag_295:\n        /* \"#utility.yul\":6500:6503   */\n      0x00\n        /* \"#utility.yul\":6521:6588   */\n      tag_297\n        /* \"#utility.yul\":6585:6587   */\n      0x10\n        /* \"#utility.yul\":6580:6583   */\n      dup4\n        /* \"#utility.yul\":6521:6588   */\n      tag_265\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6514:6588   */\n      swap2\n      pop\n        /* \"#utility.yul\":6597:6690   */\n      tag_298\n        /* \"#utility.yul\":6686:6689   */\n      dup3\n        /* \"#utility.yul\":6597:6690   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6715:6717   */\n      0x20\n        /* \"#utility.yul\":6710:6713   */\n      dup3\n        /* \"#utility.yul\":6706:6718   */\n      add\n        /* \"#utility.yul\":6699:6718   */\n      swap1\n      pop\n        /* \"#utility.yul\":6358:6724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6730:7096   */\n    tag_300:\n        /* \"#utility.yul\":6872:6875   */\n      0x00\n        /* \"#utility.yul\":6893:6960   */\n      tag_302\n        /* \"#utility.yul\":6957:6959   */\n      0x20\n        /* \"#utility.yul\":6952:6955   */\n      dup4\n        /* \"#utility.yul\":6893:6960   */\n      tag_265\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6886:6960   */\n      swap2\n      pop\n        /* \"#utility.yul\":6969:7062   */\n      tag_303\n        /* \"#utility.yul\":7058:7061   */\n      dup3\n        /* \"#utility.yul\":6969:7062   */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7087:7089   */\n      0x20\n        /* \"#utility.yul\":7082:7085   */\n      dup3\n        /* \"#utility.yul\":7078:7090   */\n      add\n        /* \"#utility.yul\":7071:7090   */\n      swap1\n      pop\n        /* \"#utility.yul\":6730:7096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7102:7500   */\n    tag_305:\n        /* \"#utility.yul\":7261:7264   */\n      0x00\n        /* \"#utility.yul\":7282:7365   */\n      tag_307\n        /* \"#utility.yul\":7363:7364   */\n      0x00\n        /* \"#utility.yul\":7358:7361   */\n      dup4\n        /* \"#utility.yul\":7282:7365   */\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7275:7365   */\n      swap2\n      pop\n        /* \"#utility.yul\":7374:7467   */\n      tag_309\n        /* \"#utility.yul\":7463:7466   */\n      dup3\n        /* \"#utility.yul\":7374:7467   */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7492:7493   */\n      0x00\n        /* \"#utility.yul\":7487:7490   */\n      dup3\n        /* \"#utility.yul\":7483:7494   */\n      add\n        /* \"#utility.yul\":7476:7494   */\n      swap1\n      pop\n        /* \"#utility.yul\":7102:7500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7506:7624   */\n    tag_311:\n        /* \"#utility.yul\":7593:7617   */\n      tag_313\n        /* \"#utility.yul\":7611:7616   */\n      dup2\n        /* \"#utility.yul\":7593:7617   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7588:7591   */\n      dup3\n        /* \"#utility.yul\":7581:7618   */\n      mstore\n        /* \"#utility.yul\":7506:7624   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7630:8009   */\n    tag_76:\n        /* \"#utility.yul\":7814:7817   */\n      0x00\n        /* \"#utility.yul\":7836:7983   */\n      tag_316\n        /* \"#utility.yul\":7979:7982   */\n      dup3\n        /* \"#utility.yul\":7836:7983   */\n      tag_305\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7829:7983   */\n      swap2\n      pop\n        /* \"#utility.yul\":8000:8003   */\n      dup2\n        /* \"#utility.yul\":7993:8003   */\n      swap1\n      pop\n        /* \"#utility.yul\":7630:8009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8237   */\n    tag_49:\n        /* \"#utility.yul\":8108:8112   */\n      0x00\n        /* \"#utility.yul\":8146:8148   */\n      0x20\n        /* \"#utility.yul\":8135:8144   */\n      dup3\n        /* \"#utility.yul\":8131:8149   */\n      add\n        /* \"#utility.yul\":8123:8149   */\n      swap1\n      pop\n        /* \"#utility.yul\":8159:8230   */\n      tag_318\n        /* \"#utility.yul\":8227:8228   */\n      0x00\n        /* \"#utility.yul\":8216:8225   */\n      dup4\n        /* \"#utility.yul\":8212:8229   */\n      add\n        /* \"#utility.yul\":8203:8209   */\n      dup5\n        /* \"#utility.yul\":8159:8230   */\n      tag_248\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8015:8237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8243:8685   */\n    tag_181:\n        /* \"#utility.yul\":8392:8396   */\n      0x00\n        /* \"#utility.yul\":8430:8432   */\n      0x60\n        /* \"#utility.yul\":8419:8428   */\n      dup3\n        /* \"#utility.yul\":8415:8433   */\n      add\n        /* \"#utility.yul\":8407:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8514   */\n      tag_320\n        /* \"#utility.yul\":8511:8512   */\n      0x00\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8513   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup7\n        /* \"#utility.yul\":8443:8514   */\n      tag_248\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8524:8596   */\n      tag_321\n        /* \"#utility.yul\":8592:8594   */\n      0x20\n        /* \"#utility.yul\":8581:8590   */\n      dup4\n        /* \"#utility.yul\":8577:8595   */\n      add\n        /* \"#utility.yul\":8568:8574   */\n      dup6\n        /* \"#utility.yul\":8524:8596   */\n      tag_248\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8606:8678   */\n      tag_322\n        /* \"#utility.yul\":8674:8676   */\n      0x40\n        /* \"#utility.yul\":8663:8672   */\n      dup4\n        /* \"#utility.yul\":8659:8677   */\n      add\n        /* \"#utility.yul\":8650:8656   */\n      dup5\n        /* \"#utility.yul\":8606:8678   */\n      tag_311\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8243:8685   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8691:9023   */\n    tag_91:\n        /* \"#utility.yul\":8812:8816   */\n      0x00\n        /* \"#utility.yul\":8850:8852   */\n      0x40\n        /* \"#utility.yul\":8839:8848   */\n      dup3\n        /* \"#utility.yul\":8835:8853   */\n      add\n        /* \"#utility.yul\":8827:8853   */\n      swap1\n      pop\n        /* \"#utility.yul\":8863:8934   */\n      tag_324\n        /* \"#utility.yul\":8931:8932   */\n      0x00\n        /* \"#utility.yul\":8920:8929   */\n      dup4\n        /* \"#utility.yul\":8916:8933   */\n      add\n        /* \"#utility.yul\":8907:8913   */\n      dup6\n        /* \"#utility.yul\":8863:8934   */\n      tag_248\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8944:9016   */\n      tag_325\n        /* \"#utility.yul\":9012:9014   */\n      0x20\n        /* \"#utility.yul\":9001:9010   */\n      dup4\n        /* \"#utility.yul\":8997:9015   */\n      add\n        /* \"#utility.yul\":8988:8994   */\n      dup5\n        /* \"#utility.yul\":8944:9016   */\n      tag_311\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8691:9023   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9029:9279   */\n    tag_40:\n        /* \"#utility.yul\":9136:9140   */\n      0x00\n        /* \"#utility.yul\":9174:9176   */\n      0x20\n        /* \"#utility.yul\":9163:9172   */\n      dup3\n        /* \"#utility.yul\":9159:9177   */\n      add\n        /* \"#utility.yul\":9151:9177   */\n      swap1\n      pop\n        /* \"#utility.yul\":9187:9272   */\n      tag_327\n        /* \"#utility.yul\":9269:9270   */\n      0x00\n        /* \"#utility.yul\":9258:9267   */\n      dup4\n        /* \"#utility.yul\":9254:9271   */\n      add\n        /* \"#utility.yul\":9245:9251   */\n      dup5\n        /* \"#utility.yul\":9187:9272   */\n      tag_252\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9029:9279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9285:9503   */\n    tag_54:\n        /* \"#utility.yul\":9376:9380   */\n      0x00\n        /* \"#utility.yul\":9414:9416   */\n      0x20\n        /* \"#utility.yul\":9403:9412   */\n      dup3\n        /* \"#utility.yul\":9399:9417   */\n      add\n        /* \"#utility.yul\":9391:9417   */\n      swap1\n      pop\n        /* \"#utility.yul\":9427:9496   */\n      tag_329\n        /* \"#utility.yul\":9493:9494   */\n      0x00\n        /* \"#utility.yul\":9482:9491   */\n      dup4\n        /* \"#utility.yul\":9478:9495   */\n      add\n        /* \"#utility.yul\":9469:9475   */\n      dup5\n        /* \"#utility.yul\":9427:9496   */\n      tag_256\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9285:9503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9509:9822   */\n    tag_192:\n        /* \"#utility.yul\":9622:9626   */\n      0x00\n        /* \"#utility.yul\":9660:9662   */\n      0x20\n        /* \"#utility.yul\":9649:9658   */\n      dup3\n        /* \"#utility.yul\":9645:9663   */\n      add\n        /* \"#utility.yul\":9637:9663   */\n      swap1\n      pop\n        /* \"#utility.yul\":9709:9718   */\n      dup2\n        /* \"#utility.yul\":9703:9707   */\n      dup2\n        /* \"#utility.yul\":9699:9719   */\n      sub\n        /* \"#utility.yul\":9695:9696   */\n      0x00\n        /* \"#utility.yul\":9684:9693   */\n      dup4\n        /* \"#utility.yul\":9680:9697   */\n      add\n        /* \"#utility.yul\":9673:9720   */\n      mstore\n        /* \"#utility.yul\":9737:9815   */\n      tag_331\n        /* \"#utility.yul\":9810:9814   */\n      dup2\n        /* \"#utility.yul\":9801:9807   */\n      dup5\n        /* \"#utility.yul\":9737:9815   */\n      tag_260\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":9729:9815   */\n      swap1\n      pop\n        /* \"#utility.yul\":9509:9822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9828:10247   */\n    tag_172:\n        /* \"#utility.yul\":9994:9998   */\n      0x00\n        /* \"#utility.yul\":10032:10034   */\n      0x20\n        /* \"#utility.yul\":10021:10030   */\n      dup3\n        /* \"#utility.yul\":10017:10035   */\n      add\n        /* \"#utility.yul\":10009:10035   */\n      swap1\n      pop\n        /* \"#utility.yul\":10081:10090   */\n      dup2\n        /* \"#utility.yul\":10075:10079   */\n      dup2\n        /* \"#utility.yul\":10071:10091   */\n      sub\n        /* \"#utility.yul\":10067:10068   */\n      0x00\n        /* \"#utility.yul\":10056:10065   */\n      dup4\n        /* \"#utility.yul\":10052:10069   */\n      add\n        /* \"#utility.yul\":10045:10092   */\n      mstore\n        /* \"#utility.yul\":10109:10240   */\n      tag_333\n        /* \"#utility.yul\":10235:10239   */\n      dup2\n        /* \"#utility.yul\":10109:10240   */\n      tag_270\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10101:10240   */\n      swap1\n      pop\n        /* \"#utility.yul\":9828:10247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10253:10672   */\n    tag_82:\n        /* \"#utility.yul\":10419:10423   */\n      0x00\n        /* \"#utility.yul\":10457:10459   */\n      0x20\n        /* \"#utility.yul\":10446:10455   */\n      dup3\n        /* \"#utility.yul\":10442:10460   */\n      add\n        /* \"#utility.yul\":10434:10460   */\n      swap1\n      pop\n        /* \"#utility.yul\":10506:10515   */\n      dup2\n        /* \"#utility.yul\":10500:10504   */\n      dup2\n        /* \"#utility.yul\":10496:10516   */\n      sub\n        /* \"#utility.yul\":10492:10493   */\n      0x00\n        /* \"#utility.yul\":10481:10490   */\n      dup4\n        /* \"#utility.yul\":10477:10494   */\n      add\n        /* \"#utility.yul\":10470:10517   */\n      mstore\n        /* \"#utility.yul\":10534:10665   */\n      tag_335\n        /* \"#utility.yul\":10660:10664   */\n      dup2\n        /* \"#utility.yul\":10534:10665   */\n      tag_275\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10526:10665   */\n      swap1\n      pop\n        /* \"#utility.yul\":10253:10672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10678:11097   */\n    tag_188:\n        /* \"#utility.yul\":10844:10848   */\n      0x00\n        /* \"#utility.yul\":10882:10884   */\n      0x20\n        /* \"#utility.yul\":10871:10880   */\n      dup3\n        /* \"#utility.yul\":10867:10885   */\n      add\n        /* \"#utility.yul\":10859:10885   */\n      swap1\n      pop\n        /* \"#utility.yul\":10931:10940   */\n      dup2\n        /* \"#utility.yul\":10925:10929   */\n      dup2\n        /* \"#utility.yul\":10921:10941   */\n      sub\n        /* \"#utility.yul\":10917:10918   */\n      0x00\n        /* \"#utility.yul\":10906:10915   */\n      dup4\n        /* \"#utility.yul\":10902:10919   */\n      add\n        /* \"#utility.yul\":10895:10942   */\n      mstore\n        /* \"#utility.yul\":10959:11090   */\n      tag_337\n        /* \"#utility.yul\":11085:11089   */\n      dup2\n        /* \"#utility.yul\":10959:11090   */\n      tag_280\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10951:11090   */\n      swap1\n      pop\n        /* \"#utility.yul\":10678:11097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11103:11522   */\n    tag_121:\n        /* \"#utility.yul\":11269:11273   */\n      0x00\n        /* \"#utility.yul\":11307:11309   */\n      0x20\n        /* \"#utility.yul\":11296:11305   */\n      dup3\n        /* \"#utility.yul\":11292:11310   */\n      add\n        /* \"#utility.yul\":11284:11310   */\n      swap1\n      pop\n        /* \"#utility.yul\":11356:11365   */\n      dup2\n        /* \"#utility.yul\":11350:11354   */\n      dup2\n        /* \"#utility.yul\":11346:11366   */\n      sub\n        /* \"#utility.yul\":11342:11343   */\n      0x00\n        /* \"#utility.yul\":11331:11340   */\n      dup4\n        /* \"#utility.yul\":11327:11344   */\n      add\n        /* \"#utility.yul\":11320:11367   */\n      mstore\n        /* \"#utility.yul\":11384:11515   */\n      tag_339\n        /* \"#utility.yul\":11510:11514   */\n      dup2\n        /* \"#utility.yul\":11384:11515   */\n      tag_285\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":11376:11515   */\n      swap1\n      pop\n        /* \"#utility.yul\":11103:11522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11528:11947   */\n    tag_154:\n        /* \"#utility.yul\":11694:11698   */\n      0x00\n        /* \"#utility.yul\":11732:11734   */\n      0x20\n        /* \"#utility.yul\":11721:11730   */\n      dup3\n        /* \"#utility.yul\":11717:11735   */\n      add\n        /* \"#utility.yul\":11709:11735   */\n      swap1\n      pop\n        /* \"#utility.yul\":11781:11790   */\n      dup2\n        /* \"#utility.yul\":11775:11779   */\n      dup2\n        /* \"#utility.yul\":11771:11791   */\n      sub\n        /* \"#utility.yul\":11767:11768   */\n      0x00\n        /* \"#utility.yul\":11756:11765   */\n      dup4\n        /* \"#utility.yul\":11752:11769   */\n      add\n        /* \"#utility.yul\":11745:11792   */\n      mstore\n        /* \"#utility.yul\":11809:11940   */\n      tag_341\n        /* \"#utility.yul\":11935:11939   */\n      dup2\n        /* \"#utility.yul\":11809:11940   */\n      tag_290\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11801:11940   */\n      swap1\n      pop\n        /* \"#utility.yul\":11528:11947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11953:12372   */\n    tag_132:\n        /* \"#utility.yul\":12119:12123   */\n      0x00\n        /* \"#utility.yul\":12157:12159   */\n      0x20\n        /* \"#utility.yul\":12146:12155   */\n      dup3\n        /* \"#utility.yul\":12142:12160   */\n      add\n        /* \"#utility.yul\":12134:12160   */\n      swap1\n      pop\n        /* \"#utility.yul\":12206:12215   */\n      dup2\n        /* \"#utility.yul\":12200:12204   */\n      dup2\n        /* \"#utility.yul\":12196:12216   */\n      sub\n        /* \"#utility.yul\":12192:12193   */\n      0x00\n        /* \"#utility.yul\":12181:12190   */\n      dup4\n        /* \"#utility.yul\":12177:12194   */\n      add\n        /* \"#utility.yul\":12170:12217   */\n      mstore\n        /* \"#utility.yul\":12234:12365   */\n      tag_343\n        /* \"#utility.yul\":12360:12364   */\n      dup2\n        /* \"#utility.yul\":12234:12365   */\n      tag_295\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12226:12365   */\n      swap1\n      pop\n        /* \"#utility.yul\":11953:12372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12378:12797   */\n    tag_114:\n        /* \"#utility.yul\":12544:12548   */\n      0x00\n        /* \"#utility.yul\":12582:12584   */\n      0x20\n        /* \"#utility.yul\":12571:12580   */\n      dup3\n        /* \"#utility.yul\":12567:12585   */\n      add\n        /* \"#utility.yul\":12559:12585   */\n      swap1\n      pop\n        /* \"#utility.yul\":12631:12640   */\n      dup2\n        /* \"#utility.yul\":12625:12629   */\n      dup2\n        /* \"#utility.yul\":12621:12641   */\n      sub\n        /* \"#utility.yul\":12617:12618   */\n      0x00\n        /* \"#utility.yul\":12606:12615   */\n      dup4\n        /* \"#utility.yul\":12602:12619   */\n      add\n        /* \"#utility.yul\":12595:12642   */\n      mstore\n        /* \"#utility.yul\":12659:12790   */\n      tag_345\n        /* \"#utility.yul\":12785:12789   */\n      dup2\n        /* \"#utility.yul\":12659:12790   */\n      tag_300\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12651:12790   */\n      swap1\n      pop\n        /* \"#utility.yul\":12378:12797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12803:13025   */\n    tag_21:\n        /* \"#utility.yul\":12896:12900   */\n      0x00\n        /* \"#utility.yul\":12934:12936   */\n      0x20\n        /* \"#utility.yul\":12923:12932   */\n      dup3\n        /* \"#utility.yul\":12919:12937   */\n      add\n        /* \"#utility.yul\":12911:12937   */\n      swap1\n      pop\n        /* \"#utility.yul\":12947:13018   */\n      tag_347\n        /* \"#utility.yul\":13015:13016   */\n      0x00\n        /* \"#utility.yul\":13004:13013   */\n      dup4\n        /* \"#utility.yul\":13000:13017   */\n      add\n        /* \"#utility.yul\":12991:12997   */\n      dup5\n        /* \"#utility.yul\":12947:13018   */\n      tag_311\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":12803:13025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13112:13211   */\n    tag_263:\n        /* \"#utility.yul\":13164:13170   */\n      0x00\n        /* \"#utility.yul\":13198:13203   */\n      dup2\n        /* \"#utility.yul\":13192:13204   */\n      mload\n        /* \"#utility.yul\":13182:13204   */\n      swap1\n      pop\n        /* \"#utility.yul\":13112:13211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13217:13364   */\n    tag_308:\n        /* \"#utility.yul\":13318:13329   */\n      0x00\n        /* \"#utility.yul\":13355:13358   */\n      dup2\n        /* \"#utility.yul\":13340:13358   */\n      swap1\n      pop\n        /* \"#utility.yul\":13217:13364   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13370:13539   */\n    tag_265:\n        /* \"#utility.yul\":13454:13465   */\n      0x00\n        /* \"#utility.yul\":13488:13494   */\n      dup3\n        /* \"#utility.yul\":13483:13486   */\n      dup3\n        /* \"#utility.yul\":13476:13495   */\n      mstore\n        /* \"#utility.yul\":13528:13532   */\n      0x20\n        /* \"#utility.yul\":13523:13526   */\n      dup3\n        /* \"#utility.yul\":13519:13533   */\n      add\n        /* \"#utility.yul\":13504:13533   */\n      swap1\n      pop\n        /* \"#utility.yul\":13370:13539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13545:13730   */\n    tag_123:\n        /* \"#utility.yul\":13585:13586   */\n      0x00\n        /* \"#utility.yul\":13602:13622   */\n      tag_354\n        /* \"#utility.yul\":13620:13621   */\n      dup3\n        /* \"#utility.yul\":13602:13622   */\n      tag_314\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":13597:13622   */\n      swap2\n      pop\n        /* \"#utility.yul\":13636:13656   */\n      tag_355\n        /* \"#utility.yul\":13654:13655   */\n      dup4\n        /* \"#utility.yul\":13636:13656   */\n      tag_314\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":13631:13656   */\n      swap3\n      pop\n        /* \"#utility.yul\":13675:13676   */\n      dup3\n        /* \"#utility.yul\":13665:13700   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":13680:13698   */\n      tag_357\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13665:13700   */\n    tag_356:\n        /* \"#utility.yul\":13722:13723   */\n      dup3\n        /* \"#utility.yul\":13719:13720   */\n      dup3\n        /* \"#utility.yul\":13715:13724   */\n      div\n        /* \"#utility.yul\":13710:13724   */\n      swap1\n      pop\n        /* \"#utility.yul\":13545:13730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13736:14084   */\n    tag_72:\n        /* \"#utility.yul\":13776:13783   */\n      0x00\n        /* \"#utility.yul\":13799:13819   */\n      tag_360\n        /* \"#utility.yul\":13817:13818   */\n      dup3\n        /* \"#utility.yul\":13799:13819   */\n      tag_314\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":13794:13819   */\n      swap2\n      pop\n        /* \"#utility.yul\":13833:13853   */\n      tag_361\n        /* \"#utility.yul\":13851:13852   */\n      dup4\n        /* \"#utility.yul\":13833:13853   */\n      tag_314\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13828:13853   */\n      swap3\n      pop\n        /* \"#utility.yul\":14021:14022   */\n      dup2\n        /* \"#utility.yul\":13953:14019   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13949:14023   */\n      div\n        /* \"#utility.yul\":13946:13947   */\n      dup4\n        /* \"#utility.yul\":13943:14024   */\n      gt\n        /* \"#utility.yul\":13938:13939   */\n      dup3\n        /* \"#utility.yul\":13931:13940   */\n      iszero\n        /* \"#utility.yul\":13924:13941   */\n      iszero\n        /* \"#utility.yul\":13920:14025   */\n      and\n        /* \"#utility.yul\":13917:14048   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":14028:14046   */\n      tag_363\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":13917:14048   */\n    tag_362:\n        /* \"#utility.yul\":14076:14077   */\n      dup3\n        /* \"#utility.yul\":14073:14074   */\n      dup3\n        /* \"#utility.yul\":14069:14078   */\n      mul\n        /* \"#utility.yul\":14058:14078   */\n      swap1\n      pop\n        /* \"#utility.yul\":13736:14084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14090:14186   */\n    tag_251:\n        /* \"#utility.yul\":14127:14134   */\n      0x00\n        /* \"#utility.yul\":14156:14180   */\n      tag_366\n        /* \"#utility.yul\":14174:14179   */\n      dup3\n        /* \"#utility.yul\":14156:14180   */\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14145:14180   */\n      swap1\n      pop\n        /* \"#utility.yul\":14090:14186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14192:14282   */\n    tag_368:\n        /* \"#utility.yul\":14226:14233   */\n      0x00\n        /* \"#utility.yul\":14269:14274   */\n      dup2\n        /* \"#utility.yul\":14262:14275   */\n      iszero\n        /* \"#utility.yul\":14255:14276   */\n      iszero\n        /* \"#utility.yul\":14244:14276   */\n      swap1\n      pop\n        /* \"#utility.yul\":14192:14282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14288:14364   */\n    tag_259:\n        /* \"#utility.yul\":14324:14331   */\n      0x00\n        /* \"#utility.yul\":14353:14358   */\n      dup2\n        /* \"#utility.yul\":14342:14358   */\n      swap1\n      pop\n        /* \"#utility.yul\":14288:14364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14370:14496   */\n    tag_367:\n        /* \"#utility.yul\":14407:14414   */\n      0x00\n        /* \"#utility.yul\":14447:14489   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14440:14445   */\n      dup3\n        /* \"#utility.yul\":14436:14490   */\n      and\n        /* \"#utility.yul\":14425:14490   */\n      swap1\n      pop\n        /* \"#utility.yul\":14370:14496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14502:14579   */\n    tag_314:\n        /* \"#utility.yul\":14539:14546   */\n      0x00\n        /* \"#utility.yul\":14568:14573   */\n      dup2\n        /* \"#utility.yul\":14557:14573   */\n      swap1\n      pop\n        /* \"#utility.yul\":14502:14579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14585:14690   */\n    tag_373:\n        /* \"#utility.yul\":14621:14628   */\n      0x00\n        /* \"#utility.yul\":14661:14683   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":14654:14659   */\n      dup3\n        /* \"#utility.yul\":14650:14684   */\n      and\n        /* \"#utility.yul\":14639:14684   */\n      swap1\n      pop\n        /* \"#utility.yul\":14585:14690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14696:14836   */\n    tag_255:\n        /* \"#utility.yul\":14760:14769   */\n      0x00\n        /* \"#utility.yul\":14793:14830   */\n      tag_376\n        /* \"#utility.yul\":14824:14829   */\n      dup3\n        /* \"#utility.yul\":14793:14830   */\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":14780:14830   */\n      swap1\n      pop\n        /* \"#utility.yul\":14696:14836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14842:14968   */\n    tag_377:\n        /* \"#utility.yul\":14892:14901   */\n      0x00\n        /* \"#utility.yul\":14925:14962   */\n      tag_379\n        /* \"#utility.yul\":14956:14961   */\n      dup3\n        /* \"#utility.yul\":14925:14962   */\n      tag_380\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":14912:14962   */\n      swap1\n      pop\n        /* \"#utility.yul\":14842:14968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14974:15087   */\n    tag_380:\n        /* \"#utility.yul\":15024:15033   */\n      0x00\n        /* \"#utility.yul\":15057:15081   */\n      tag_382\n        /* \"#utility.yul\":15075:15080   */\n      dup3\n        /* \"#utility.yul\":15057:15081   */\n      tag_367\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":15044:15081   */\n      swap1\n      pop\n        /* \"#utility.yul\":14974:15087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15093:15400   */\n    tag_267:\n        /* \"#utility.yul\":15161:15162   */\n      0x00\n        /* \"#utility.yul\":15171:15284   */\n    tag_384:\n        /* \"#utility.yul\":15185:15191   */\n      dup4\n        /* \"#utility.yul\":15182:15183   */\n      dup2\n        /* \"#utility.yul\":15179:15192   */\n      lt\n        /* \"#utility.yul\":15171:15284   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":15270:15271   */\n      dup1\n        /* \"#utility.yul\":15265:15268   */\n      dup3\n        /* \"#utility.yul\":15261:15272   */\n      add\n        /* \"#utility.yul\":15255:15273   */\n      mload\n        /* \"#utility.yul\":15251:15252   */\n      dup2\n        /* \"#utility.yul\":15246:15249   */\n      dup5\n        /* \"#utility.yul\":15242:15253   */\n      add\n        /* \"#utility.yul\":15235:15274   */\n      mstore\n        /* \"#utility.yul\":15207:15209   */\n      0x20\n        /* \"#utility.yul\":15204:15205   */\n      dup2\n        /* \"#utility.yul\":15200:15210   */\n      add\n        /* \"#utility.yul\":15195:15210   */\n      swap1\n      pop\n        /* \"#utility.yul\":15171:15284   */\n      jump(tag_384)\n    tag_386:\n        /* \"#utility.yul\":15302:15308   */\n      dup4\n        /* \"#utility.yul\":15299:15300   */\n      dup2\n        /* \"#utility.yul\":15296:15309   */\n      gt\n        /* \"#utility.yul\":15293:15394   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":15382:15383   */\n      0x00\n        /* \"#utility.yul\":15373:15379   */\n      dup5\n        /* \"#utility.yul\":15368:15371   */\n      dup5\n        /* \"#utility.yul\":15364:15380   */\n      add\n        /* \"#utility.yul\":15357:15384   */\n      mstore\n        /* \"#utility.yul\":15293:15394   */\n    tag_387:\n        /* \"#utility.yul\":15142:15400   */\n      pop\n        /* \"#utility.yul\":15093:15400   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15406:15586   */\n    tag_364:\n        /* \"#utility.yul\":15454:15531   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15451:15452   */\n      0x00\n        /* \"#utility.yul\":15444:15532   */\n      mstore\n        /* \"#utility.yul\":15551:15555   */\n      0x11\n        /* \"#utility.yul\":15548:15549   */\n      0x04\n        /* \"#utility.yul\":15541:15556   */\n      mstore\n        /* \"#utility.yul\":15575:15579   */\n      0x24\n        /* \"#utility.yul\":15572:15573   */\n      0x00\n        /* \"#utility.yul\":15565:15580   */\n      revert\n        /* \"#utility.yul\":15592:15772   */\n    tag_358:\n        /* \"#utility.yul\":15640:15717   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15637:15638   */\n      0x00\n        /* \"#utility.yul\":15630:15718   */\n      mstore\n        /* \"#utility.yul\":15737:15741   */\n      0x12\n        /* \"#utility.yul\":15734:15735   */\n      0x04\n        /* \"#utility.yul\":15727:15742   */\n      mstore\n        /* \"#utility.yul\":15761:15765   */\n      0x24\n        /* \"#utility.yul\":15758:15759   */\n      0x00\n        /* \"#utility.yul\":15751:15766   */\n      revert\n        /* \"#utility.yul\":15901:16018   */\n    tag_221:\n        /* \"#utility.yul\":16010:16011   */\n      0x00\n        /* \"#utility.yul\":16007:16008   */\n      dup1\n        /* \"#utility.yul\":16000:16012   */\n      revert\n        /* \"#utility.yul\":16024:16126   */\n    tag_269:\n        /* \"#utility.yul\":16065:16071   */\n      0x00\n        /* \"#utility.yul\":16116:16118   */\n      0x1f\n        /* \"#utility.yul\":16112:16119   */\n      not\n        /* \"#utility.yul\":16107:16109   */\n      0x1f\n        /* \"#utility.yul\":16100:16105   */\n      dup4\n        /* \"#utility.yul\":16096:16110   */\n      add\n        /* \"#utility.yul\":16092:16120   */\n      and\n        /* \"#utility.yul\":16082:16120   */\n      swap1\n      pop\n        /* \"#utility.yul\":16024:16126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16132:16357   */\n    tag_274:\n        /* \"#utility.yul\":16272:16306   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16268:16269   */\n      0x00\n        /* \"#utility.yul\":16260:16266   */\n      dup3\n        /* \"#utility.yul\":16256:16270   */\n      add\n        /* \"#utility.yul\":16249:16307   */\n      mstore\n        /* \"#utility.yul\":16341:16349   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16336:16338   */\n      0x20\n        /* \"#utility.yul\":16328:16334   */\n      dup3\n        /* \"#utility.yul\":16324:16339   */\n      add\n        /* \"#utility.yul\":16317:16350   */\n      mstore\n        /* \"#utility.yul\":16132:16357   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16363:16533   */\n    tag_279:\n        /* \"#utility.yul\":16503:16525   */\n      0x4661696c656420746f2073656e64204574686572000000000000000000000000\n        /* \"#utility.yul\":16499:16500   */\n      0x00\n        /* \"#utility.yul\":16491:16497   */\n      dup3\n        /* \"#utility.yul\":16487:16501   */\n      add\n        /* \"#utility.yul\":16480:16526   */\n      mstore\n        /* \"#utility.yul\":16363:16533   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16539:16710   */\n    tag_284:\n        /* \"#utility.yul\":16679:16702   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":16675:16676   */\n      0x00\n        /* \"#utility.yul\":16667:16673   */\n      dup3\n        /* \"#utility.yul\":16663:16677   */\n      add\n        /* \"#utility.yul\":16656:16703   */\n      mstore\n        /* \"#utility.yul\":16539:16710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16716:16892   */\n    tag_289:\n        /* \"#utility.yul\":16856:16884   */\n      0x4d696e696d756d20747261646520616d6f756e74203120626e62000000000000\n        /* \"#utility.yul\":16852:16853   */\n      0x00\n        /* \"#utility.yul\":16844:16850   */\n      dup3\n        /* \"#utility.yul\":16840:16854   */\n      add\n        /* \"#utility.yul\":16833:16885   */\n      mstore\n        /* \"#utility.yul\":16716:16892   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16898:17067   */\n    tag_294:\n        /* \"#utility.yul\":17038:17059   */\n      0x4d757374206265203120626e6220776f72746800000000000000000000000000\n        /* \"#utility.yul\":17034:17035   */\n      0x00\n        /* \"#utility.yul\":17026:17032   */\n      dup3\n        /* \"#utility.yul\":17022:17036   */\n      add\n        /* \"#utility.yul\":17015:17060   */\n      mstore\n        /* \"#utility.yul\":16898:17067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17073:17239   */\n    tag_299:\n        /* \"#utility.yul\":17213:17231   */\n      0x5472616e73666572206661696c65642100000000000000000000000000000000\n        /* \"#utility.yul\":17209:17210   */\n      0x00\n        /* \"#utility.yul\":17201:17207   */\n      dup3\n        /* \"#utility.yul\":17197:17211   */\n      add\n        /* \"#utility.yul\":17190:17232   */\n      mstore\n        /* \"#utility.yul\":17073:17239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17245:17427   */\n    tag_304:\n        /* \"#utility.yul\":17385:17419   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":17381:17382   */\n      0x00\n        /* \"#utility.yul\":17373:17379   */\n      dup3\n        /* \"#utility.yul\":17369:17383   */\n      add\n        /* \"#utility.yul\":17362:17420   */\n      mstore\n        /* \"#utility.yul\":17245:17427   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17433:17547   */\n    tag_310:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17553:17675   */\n    tag_198:\n        /* \"#utility.yul\":17626:17650   */\n      tag_403\n        /* \"#utility.yul\":17644:17649   */\n      dup2\n        /* \"#utility.yul\":17626:17650   */\n      tag_251\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":17619:17624   */\n      dup2\n        /* \"#utility.yul\":17616:17651   */\n      eq\n        /* \"#utility.yul\":17606:17669   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":17665:17666   */\n      0x00\n        /* \"#utility.yul\":17662:17663   */\n      dup1\n        /* \"#utility.yul\":17655:17667   */\n      revert\n        /* \"#utility.yul\":17606:17669   */\n    tag_404:\n        /* \"#utility.yul\":17553:17675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17681:17797   */\n    tag_202:\n        /* \"#utility.yul\":17751:17772   */\n      tag_406\n        /* \"#utility.yul\":17766:17771   */\n      dup2\n        /* \"#utility.yul\":17751:17772   */\n      tag_368\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":17744:17749   */\n      dup2\n        /* \"#utility.yul\":17741:17773   */\n      eq\n        /* \"#utility.yul\":17731:17791   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":17787:17788   */\n      0x00\n        /* \"#utility.yul\":17784:17785   */\n      dup1\n        /* \"#utility.yul\":17777:17789   */\n      revert\n        /* \"#utility.yul\":17731:17791   */\n    tag_407:\n        /* \"#utility.yul\":17681:17797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17803:17923   */\n    tag_206:\n        /* \"#utility.yul\":17875:17898   */\n      tag_409\n        /* \"#utility.yul\":17892:17897   */\n      dup2\n        /* \"#utility.yul\":17875:17898   */\n      tag_259\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":17868:17873   */\n      dup2\n        /* \"#utility.yul\":17865:17899   */\n      eq\n        /* \"#utility.yul\":17855:17917   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":17913:17914   */\n      0x00\n        /* \"#utility.yul\":17910:17911   */\n      dup1\n        /* \"#utility.yul\":17903:17915   */\n      revert\n        /* \"#utility.yul\":17855:17917   */\n    tag_410:\n        /* \"#utility.yul\":17803:17923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17929:18051   */\n    tag_210:\n        /* \"#utility.yul\":18002:18026   */\n      tag_412\n        /* \"#utility.yul\":18020:18025   */\n      dup2\n        /* \"#utility.yul\":18002:18026   */\n      tag_314\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":17995:18000   */\n      dup2\n        /* \"#utility.yul\":17992:18027   */\n      eq\n        /* \"#utility.yul\":17982:18045   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":18041:18042   */\n      0x00\n        /* \"#utility.yul\":18038:18039   */\n      dup1\n        /* \"#utility.yul\":18031:18043   */\n      revert\n        /* \"#utility.yul\":17982:18045   */\n    tag_413:\n        /* \"#utility.yul\":17929:18051   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18057:18177   */\n    tag_217:\n        /* \"#utility.yul\":18129:18152   */\n      tag_415\n        /* \"#utility.yul\":18146:18151   */\n      dup2\n        /* \"#utility.yul\":18129:18152   */\n      tag_373\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":18122:18127   */\n      dup2\n        /* \"#utility.yul\":18119:18153   */\n      eq\n        /* \"#utility.yul\":18109:18171   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":18167:18168   */\n      0x00\n        /* \"#utility.yul\":18164:18165   */\n      dup1\n        /* \"#utility.yul\":18157:18169   */\n      revert\n        /* \"#utility.yul\":18109:18171   */\n    tag_416:\n        /* \"#utility.yul\":18057:18177   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204c70d60a6d1fd62f991e5f9fb95ce0a5100f84d961465e6c14bd6d85b094329b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_169": {
									"entryPoint": null,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_653": {
									"entryPoint": null,
									"id": 653,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_57": {
									"entryPoint": 315,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_249": {
									"entryPoint": 323,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261013b60201b60201c565b61014360201b60201c565b620186a060028190555073e5ba47fd94cb645ba4119222e34fb33f59c7cd90600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738ac76a51cc950d9822d68b83fe1ad97b32cd580d600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730567f2323251f0aab15c8dfb1967e4e8a7d42aee600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61181d806102166000396000f3fe6080604052600436106100a75760003560e01c80638a71c2f4116100645780638a71c2f4146101875780638da5cb5b146101b25780638e15f473146101dd578063ade87ecc14610208578063ebc4197c14610231578063f2fde38b1461025c576100a7565b80633b3a7e31146100ac5780633cb40e16146100e9578063715018a61461010057806380c3142614610117578063817e9d311461013357806389a302711461015c575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce919061100a565b610285565b6040516100e0919061141a565b60405180910390f35b3480156100f557600080fd5b506100fe6102ba565b005b34801561010c57600080fd5b50610115610632565b005b610131600480360381019061012c9190610fb0565b6106ba565b005b34801561013f57600080fd5b5061015a60048036038101906101559190610fb0565b61088c565b005b34801561016857600080fd5b50610171610912565b60405161017e91906112e2565b60405180910390f35b34801561019357600080fd5b5061019c610938565b6040516101a991906112e2565b60405180910390f35b3480156101be57600080fd5b506101c761095e565b6040516101d49190611267565b60405180910390f35b3480156101e957600080fd5b506101f2610987565b6040516101ff91906112fd565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190610fb0565b610a45565b005b34801561023d57600080fd5b50610246610b87565b604051610253919061141a565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e9190610f56565b610b8d565b005b600080670de0b6b3a76400006102a48486610c8590919063ffffffff16565b6102ae919061148d565b90508091505092915050565b60006102c461095e565b73ffffffffffffffffffffffffffffffffffffffff16476040516102e790611252565b60006040518083038185875af1925050503d8060008114610324576040519150601f19603f3d011682016040523d82523d6000602084013e610329565b606091505b505090508061036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103649061135a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6103b361095e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040e9190611267565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610fdd565b6040518363ffffffff1660e01b815260040161047b9291906112b9565b602060405180830381600087803b15801561049557600080fd5b505af11580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610f83565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61051461095e565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161056f9190611267565b60206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190610fdd565b6040518363ffffffff1660e01b81526004016105dc9291906112b9565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610f83565b5050565b61063a610ccf565b73ffffffffffffffffffffffffffffffffffffffff1661065861095e565b73ffffffffffffffffffffffffffffffffffffffff16146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a5906113fa565b60405180910390fd5b6106b86000610cd7565b565b6002548110156106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f69061139a565b60405180910390fd5b6000670de0b6b3a764000060025483610718919061145c565b610722919061148d565b9050600061072e61095e565b73ffffffffffffffffffffffffffffffffffffffff168260405161075190611252565b60006040518083038185875af1925050503d806000811461078e576040519150601f19603f3d011682016040523d82523d6000602084013e610793565b606091505b50509050806107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce906113da565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016108349291906112b9565b602060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108869190610f83565b50505050565b610894610ccf565b73ffffffffffffffffffffffffffffffffffffffff166108b261095e565b73ffffffffffffffffffffffffffffffffffffffff1614610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff906113fa565b60405180910390fd5b8060028190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a30919061104a565b94509450945094509450839550505050505090565b6002548114610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906113ba565b60405180910390fd5b610ab7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610d9b565b60006402540be400610ac7610987565b610ad1919061148d565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b309291906112b9565b602060405180830381600087803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190610f83565b505050565b60025481565b610b95610ccf565b73ffffffffffffffffffffffffffffffffffffffff16610bb361095e565b73ffffffffffffffffffffffffffffffffffffffff1614610c09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c00906113fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c709061133a565b60405180910390fd5b610c8281610cd7565b50565b6000610cc783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e75565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401610dda93929190611282565b602060405180830381600087803b158015610df457600080fd5b505af1158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2c9190610f83565b905080610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e659061137a565b60405180910390fd5b5050505050565b60008083118290610ebc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb39190611318565b60405180910390fd5b5060008385610ecb919061145c565b9050809150509392505050565b600081359050610ee781611774565b92915050565b600081519050610efc8161178b565b92915050565b600081519050610f11816117a2565b92915050565b600081359050610f26816117b9565b92915050565b600081519050610f3b816117b9565b92915050565b600081519050610f50816117d0565b92915050565b600060208284031215610f6c57610f6b611616565b5b6000610f7a84828501610ed8565b91505092915050565b600060208284031215610f9957610f98611616565b5b6000610fa784828501610eed565b91505092915050565b600060208284031215610fc657610fc5611616565b5b6000610fd484828501610f17565b91505092915050565b600060208284031215610ff357610ff2611616565b5b600061100184828501610f2c565b91505092915050565b6000806040838503121561102157611020611616565b5b600061102f85828601610f17565b925050602061104085828601610f17565b9150509250929050565b600080600080600060a0868803121561106657611065611616565b5b600061107488828901610f41565b955050602061108588828901610f02565b945050604061109688828901610f2c565b93505060606110a788828901610f2c565b92505060806110b888828901610f41565b9150509295509295909350565b6110ce816114e7565b82525050565b6110dd8161154f565b82525050565b6110ec81611505565b82525050565b60006110fd82611435565b611107818561144b565b9350611117818560208601611585565b6111208161161b565b840191505092915050565b600061113860268361144b565b91506111438261162c565b604082019050919050565b600061115b60148361144b565b91506111668261167b565b602082019050919050565b600061117e60158361144b565b9150611189826116a4565b602082019050919050565b60006111a1601a8361144b565b91506111ac826116cd565b602082019050919050565b60006111c460138361144b565b91506111cf826116f6565b602082019050919050565b60006111e760108361144b565b91506111f28261171f565b602082019050919050565b600061120a60208361144b565b915061121582611748565b602082019050919050565b600061122d600083611440565b915061123882611771565b600082019050919050565b61124c8161152f565b82525050565b600061125d82611220565b9150819050919050565b600060208201905061127c60008301846110c5565b92915050565b600060608201905061129760008301866110c5565b6112a460208301856110c5565b6112b16040830184611243565b949350505050565b60006040820190506112ce60008301856110c5565b6112db6020830184611243565b9392505050565b60006020820190506112f760008301846110d4565b92915050565b600060208201905061131260008301846110e3565b92915050565b6000602082019050818103600083015261133281846110f2565b905092915050565b600060208201905081810360008301526113538161112b565b9050919050565b600060208201905081810360008301526113738161114e565b9050919050565b6000602082019050818103600083015261139381611171565b9050919050565b600060208201905081810360008301526113b381611194565b9050919050565b600060208201905081810360008301526113d3816111b7565b9050919050565b600060208201905081810360008301526113f3816111da565b9050919050565b60006020820190508181036000830152611413816111fd565b9050919050565b600060208201905061142f6000830184611243565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006114678261152f565b91506114728361152f565b925082611482576114816115e7565b5b828204905092915050565b60006114988261152f565b91506114a38361152f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114dc576114db6115b8565b5b828202905092915050565b60006114f28261150f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061155a82611561565b9050919050565b600061156c82611573565b9050919050565b600061157e8261150f565b9050919050565b60005b838110156115a3578082015181840152602081019050611588565b838111156115b2576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f4d696e696d756d20747261646520616d6f756e74203120626e62000000000000600082015250565b7f4d757374206265203120626e6220776f72746800000000000000000000000000600082015250565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b61177d816114e7565b811461178857600080fd5b50565b611794816114f9565b811461179f57600080fd5b50565b6117ab81611505565b81146117b657600080fd5b50565b6117c28161152f565b81146117cd57600080fd5b50565b6117d981611539565b81146117e457600080fd5b5056fea26469706673582212204c70d60a6d1fd62f991e5f9fb95ce0a5100f84d961465e6c14bd6d85b094329b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x13B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x143 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x186A0 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH20 0xE5BA47FD94CB645BA4119222E34FB33F59C7CD90 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x8AC76A51CC950D9822D68B83FE1AD97B32CD580D PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x567F2323251F0AAB15C8DFB1967E4E8A7D42AEE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x207 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x181D DUP1 PUSH2 0x216 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A71C2F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8A71C2F4 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xADE87ECC EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xEBC4197C EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25C JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x3B3A7E31 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3CB40E16 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x80C31426 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A4 DUP5 DUP7 PUSH2 0xC85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x329 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x364 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x3B3 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x514 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0xCCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x658 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B8 PUSH1 0x0 PUSH2 0xCD7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x139A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72E PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x751 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x793 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x862 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x886 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x894 PUSH2 0xCCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B2 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 EQ PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA80 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB7 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 PUSH5 0x2540BE400 PUSH2 0xAC7 PUSH2 0x987 JUMP JUMPDEST PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB30 SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB95 PUSH2 0xCCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB3 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC70 SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC82 DUP2 PUSH2 0xCD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE65 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEE7 DUP2 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFC DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF11 DUP2 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF26 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3B DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF50 DUP2 PUSH2 0x17D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6B PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7A DUP5 DUP3 DUP6 ADD PUSH2 0xED8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF99 JUMPI PUSH2 0xF98 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA7 DUP5 DUP3 DUP6 ADD PUSH2 0xEED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC5 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD4 DUP5 DUP3 DUP6 ADD PUSH2 0xF17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP5 DUP3 DUP6 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1021 JUMPI PUSH2 0x1020 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP6 DUP3 DUP7 ADD PUSH2 0xF17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1040 DUP6 DUP3 DUP7 ADD PUSH2 0xF17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1074 DUP9 DUP3 DUP10 ADD PUSH2 0xF41 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1085 DUP9 DUP3 DUP10 ADD PUSH2 0xF02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1096 DUP9 DUP3 DUP10 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x10A7 DUP9 DUP3 DUP10 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x10B8 DUP9 DUP3 DUP10 ADD PUSH2 0xF41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10DD DUP2 PUSH2 0x154F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10EC DUP2 PUSH2 0x1505 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD DUP3 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x1107 DUP2 DUP6 PUSH2 0x144B JUMP JUMPDEST SWAP4 POP PUSH2 0x1117 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x161B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 PUSH1 0x26 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1143 DUP3 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x14 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117E PUSH1 0x15 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 DUP3 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A1 PUSH1 0x1A DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x11AC DUP3 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C4 PUSH1 0x13 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x11CF DUP3 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E7 PUSH1 0x10 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x11F2 DUP3 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120A PUSH1 0x20 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122D PUSH1 0x0 DUP4 PUSH2 0x1440 JUMP JUMPDEST SWAP2 POP PUSH2 0x1238 DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124C DUP2 PUSH2 0x152F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125D DUP3 PUSH2 0x1220 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1297 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12CE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1312 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1332 DUP2 DUP5 PUSH2 0x10F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1353 DUP2 PUSH2 0x112B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1373 DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1393 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B3 DUP2 PUSH2 0x1194 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13D3 DUP2 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F3 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1413 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1467 DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP2 POP PUSH2 0x1472 DUP4 PUSH2 0x152F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x15E7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1498 DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP2 POP PUSH2 0x14A3 DUP4 PUSH2 0x152F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14DC JUMPI PUSH2 0x14DB PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F2 DUP3 PUSH2 0x150F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155A DUP3 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156C DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157E DUP3 PUSH2 0x150F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1588 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20747261646520616D6F756E74203120626E62000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D757374206265203120626E6220776F72746800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x177D DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x14F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17AB DUP2 PUSH2 0x1505 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17C2 DUP2 PUSH2 0x152F JUMP JUMPDEST DUP2 EQ PUSH2 0x17CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17D9 DUP2 PUSH2 0x1539 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH17 0xD60A6D1FD62F991E5F9FB95CE0A5100F84 0xD9 PUSH2 0x465E PUSH13 0x14BD6D85B094329B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "2576:2953:4:-:0;;;2885:329;;;;;;;;;;914:32:3;933:12;:10;;;:12;;:::i;:::-;914:18;;;:32;;:::i;:::-;2918:6:4;2905:10;:19;;;;2944:42;2929:5;;:58;;;;;;;;;;;;;;;;;;3006:42;2992:4;;:57;;;;;;;;;;;;;;;;;;3165:42;3131:9;;:77;;;;;;;;;;;;;;;;;;2576:2953;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2263:187:3:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;2576:2953:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BnbToSafuu_621": {
									"entryPoint": 2951,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Safuu_624": {
									"entryPoint": 2360,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_627": {
									"entryPoint": 2322,
									"id": 627,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_57": {
									"entryPoint": 3279,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransferFrom_891": {
									"entryPoint": 3483,
									"id": 891,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_249": {
									"entryPoint": 3287,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buySafuu_731": {
									"entryPoint": 1722,
									"id": 731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_563": {
									"entryPoint": 3205,
									"id": 563,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_590": {
									"entryPoint": 3701,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getLatestPrice_753": {
									"entryPoint": 2439,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_178": {
									"entryPoint": 2398,
									"id": 178,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_206": {
									"entryPoint": 1586,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellSafuu_801": {
									"entryPoint": 2629,
									"id": 801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFactor_813": {
									"entryPoint": 2188,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@testDiv_680": {
									"entryPoint": 645,
									"id": 680,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferOwnership_229": {
									"entryPoint": 2957,
									"id": 229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToOwner_864": {
									"entryPoint": 698,
									"id": 864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4793,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 5433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$145_to_t_address": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18180:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "357:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "367:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "382:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "376:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "367:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "424:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "398:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "398:32:5"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "335:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "343:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "351:5:5",
														"type": ""
													}
												],
												"src": "295:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "494:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "504:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "526:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "513:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "504:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "569:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "542:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "542:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "472:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "480:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:5",
														"type": ""
													}
												],
												"src": "442:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "650:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "660:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "675:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "669:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "660:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "718:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "691:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "691:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "628:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "636:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "644:5:5",
														"type": ""
													}
												],
												"src": "587:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "798:79:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "808:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "817:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "808:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "865:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nodeType": "YulIdentifier",
																	"src": "839:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "839:32:5"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "776:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "784:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "792:5:5",
														"type": ""
													}
												],
												"src": "736:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "995:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "997:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "997:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "997:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "979:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "966:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "962:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:32:5"
															},
															"nodeType": "YulIf",
															"src": "959:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1088:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1103:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1117:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1107:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1132:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1167:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1178:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1163:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1163:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1187:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1142:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1132:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "919:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "930:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "942:6:5",
														"type": ""
													}
												],
												"src": "883:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1338:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1340:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1340:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1340:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1313:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1305:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:32:5"
															},
															"nodeType": "YulIf",
															"src": "1302:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1431:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1446:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1450:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1475:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1518:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1529:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1514:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1514:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1538:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1485:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1475:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1262:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1273:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1285:6:5",
														"type": ""
													}
												],
												"src": "1218:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1681:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1683:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1683:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1683:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1656:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1665:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1652:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1648:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1648:32:5"
															},
															"nodeType": "YulIf",
															"src": "1645:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1774:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1789:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1803:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1793:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1818:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1853:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1864:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1849:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1849:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1873:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1828:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1828:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1818:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1605:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1616:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1628:6:5",
														"type": ""
													}
												],
												"src": "1569:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1981:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2027:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2029:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2029:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2029:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2002:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:32:5"
															},
															"nodeType": "YulIf",
															"src": "1991:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2120:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2135:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2149:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2139:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2164:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2210:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2221:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2206:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2206:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2230:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2174:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2164:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1951:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1962:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:5",
														"type": ""
													}
												],
												"src": "1904:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2344:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2390:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2392:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2392:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2392:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2365:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2374:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2361:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2361:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2357:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:32:5"
															},
															"nodeType": "YulIf",
															"src": "2354:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2483:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2498:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2512:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2502:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2527:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2562:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2573:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2558:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2558:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2582:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2537:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2537:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2527:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2610:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2625:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2629:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2655:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2690:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2701:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2686:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2686:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2710:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2665:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2665:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2655:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2306:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2317:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2329:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2337:6:5",
														"type": ""
													}
												],
												"src": "2261:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:829:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2930:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2932:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2904:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:33:5"
															},
															"nodeType": "YulIf",
															"src": "2893:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3023:127:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3038:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3052:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3042:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3067:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3112:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3123:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3108:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3108:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3132:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3077:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3077:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3067:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3160:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3175:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3179:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3205:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3250:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3261:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3246:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3246:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3270:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3215:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3215:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3205:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3298:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3313:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3317:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3343:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3389:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3400:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3385:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3385:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3409:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3353:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3353:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3343:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3437:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3452:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3456:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3482:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3528:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3539:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3524:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3524:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3548:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3492:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3482:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3576:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3591:17:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:3:5",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3595:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3622:73:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3667:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3678:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3663:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3663:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3687:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3632:30:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3632:63:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3622:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2821:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2832:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2844:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2852:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2860:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2868:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2876:6:5",
														"type": ""
													}
												],
												"src": "2741:971:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3783:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3800:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3823:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3805:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3805:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3793:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3771:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3778:3:5",
														"type": ""
													}
												],
												"src": "3718:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3921:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3938:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3988:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$145_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3943:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3943:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3931:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3931:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3931:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3909:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3916:3:5",
														"type": ""
													}
												],
												"src": "3842:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4070:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4087:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4109:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "4092:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4092:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4080:36:5"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4058:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4065:3:5",
														"type": ""
													}
												],
												"src": "4007:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4220:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4230:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4277:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4244:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4234:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4292:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4358:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4363:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4299:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4299:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4292:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4405:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4412:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4419:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4424:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4379:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4379:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4379:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4440:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4451:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4478:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4456:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4440:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4201:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4208:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4216:3:5",
														"type": ""
													}
												],
												"src": "4128:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4644:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4654:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4720:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4725:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4661:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4826:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4737:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4737:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4737:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4839:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4850:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4855:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4632:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4640:3:5",
														"type": ""
													}
												],
												"src": "4498:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5016:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5026:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5092:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5033:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5198:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																	"nodeType": "YulIdentifier",
																	"src": "5109:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5211:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5222:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5227:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5218:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5211:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5004:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5012:3:5",
														"type": ""
													}
												],
												"src": "4870:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5388:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5398:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5464:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5469:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5405:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5405:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5398:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5570:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nodeType": "YulIdentifier",
																	"src": "5481:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5481:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5481:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5583:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5594:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5590:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5376:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5384:3:5",
														"type": ""
													}
												],
												"src": "5242:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5760:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5770:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5836:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5841:2:5",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5777:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5770:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5942:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																	"nodeType": "YulIdentifier",
																	"src": "5853:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5853:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5955:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5966:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5971:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5962:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5962:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5748:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5756:3:5",
														"type": ""
													}
												],
												"src": "5614:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6132:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6142:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6208:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6213:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6149:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6149:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6142:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6314:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff",
																	"nodeType": "YulIdentifier",
																	"src": "6225:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6225:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6327:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6338:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6343:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6334:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6334:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6327:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6120:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6128:3:5",
														"type": ""
													}
												],
												"src": "5986:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6504:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6514:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6580:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6521:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6514:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																	"nodeType": "YulIdentifier",
																	"src": "6597:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6699:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6710:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6706:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6706:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6699:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6492:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6500:3:5",
														"type": ""
													}
												],
												"src": "6358:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6876:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6886:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6952:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6893:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6893:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6886:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7058:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "6969:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6969:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7082:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7087:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7078:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7071:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6864:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6872:3:5",
														"type": ""
													}
												],
												"src": "6730:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7265:235:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7275:90:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7358:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7282:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7282:83:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7275:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7463:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "7374:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7374:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7374:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7476:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7487:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7483:11:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7476:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7253:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7261:3:5",
														"type": ""
													}
												],
												"src": "7102:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7571:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7588:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7611:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7593:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7593:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7559:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7566:3:5",
														"type": ""
													}
												],
												"src": "7506:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7818:191:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7829:154:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7979:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7836:141:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:147:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7829:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7993:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8000:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7993:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7805:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7814:3:5",
														"type": ""
													}
												],
												"src": "7630:379:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8113:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8123:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8135:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8146:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8203:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8216:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8227:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8212:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8212:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8159:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8159:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8159:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8085:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8097:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8108:4:5",
														"type": ""
													}
												],
												"src": "8015:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8397:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8407:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8419:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8430:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8415:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8415:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8407:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8511:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8496:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8443:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8443:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8568:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8581:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8592:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8577:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8524:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8524:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8524:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8650:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8663:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8674:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8659:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8606:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8606:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8606:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8353:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8365:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8373:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8381:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8392:4:5",
														"type": ""
													}
												],
												"src": "8243:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8817:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8827:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8839:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8850:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8835:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8835:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8827:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8907:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8920:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8931:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8916:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8916:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8863:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8863:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8863:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8988:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9001:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9012:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8997:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8997:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8944:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8944:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8944:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8781:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8793:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8801:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8812:4:5",
														"type": ""
													}
												],
												"src": "8691:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9141:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9151:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9163:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9174:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9159:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9159:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9151:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9245:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9258:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9269:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9254:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9254:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9187:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9187:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9113:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9125:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9136:4:5",
														"type": ""
													}
												],
												"src": "9029:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9381:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9391:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9403:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9414:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9399:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9399:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9391:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9469:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9482:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9493:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9478:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9478:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9427:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9353:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9365:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9376:4:5",
														"type": ""
													}
												],
												"src": "9285:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9627:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9637:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9649:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9660:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9645:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9645:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9637:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9684:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9695:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9680:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9680:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9703:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9709:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9699:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9699:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9673:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9673:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9729:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9801:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9810:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9737:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9737:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9729:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9599:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9611:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9622:4:5",
														"type": ""
													}
												],
												"src": "9509:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9999:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10009:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10021:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10032:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10017:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10017:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10009:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10056:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10067:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10052:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10052:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10075:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10081:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10071:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10071:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10045:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10045:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10045:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10101:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10235:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10109:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10109:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10101:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9979:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9994:4:5",
														"type": ""
													}
												],
												"src": "9828:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10424:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10434:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10446:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10434:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10481:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10492:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10477:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10477:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10500:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10506:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10496:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10496:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10470:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10470:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10526:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10660:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10534:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10534:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10526:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10404:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10419:4:5",
														"type": ""
													}
												],
												"src": "10253:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10849:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10859:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10871:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10882:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10867:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10867:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10859:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10906:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10917:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10902:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10902:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10925:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10931:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10921:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10921:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10895:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10895:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10895:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10951:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11085:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10959:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10959:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10951:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10829:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10844:4:5",
														"type": ""
													}
												],
												"src": "10678:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11274:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11284:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11296:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11307:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11292:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11284:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11331:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11342:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11327:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11327:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11350:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11356:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11346:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11346:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11320:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11320:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11320:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11376:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11510:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11384:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11384:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11376:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11254:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11269:4:5",
														"type": ""
													}
												],
												"src": "11103:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11699:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11709:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11721:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11732:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11717:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11717:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11709:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11756:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11767:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11752:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11752:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11775:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11781:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11771:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11771:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11745:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11745:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11745:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11801:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11935:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11809:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11809:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11801:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11679:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11694:4:5",
														"type": ""
													}
												],
												"src": "11528:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12124:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12134:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12146:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12157:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12142:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12142:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12134:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12181:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12192:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12177:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12177:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12200:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12206:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12196:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12170:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12170:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12170:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12226:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12360:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12234:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12234:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12226:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12104:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12119:4:5",
														"type": ""
													}
												],
												"src": "11953:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12549:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12559:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12571:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12582:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12567:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12559:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12606:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12617:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12602:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12602:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12625:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12631:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12621:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12621:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12595:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12651:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12785:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12659:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12651:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12529:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12544:4:5",
														"type": ""
													}
												],
												"src": "12378:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12901:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12911:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12923:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12934:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12919:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12919:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12911:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12991:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13004:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13015:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13000:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13000:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12947:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12947:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12947:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12873:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12885:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12896:4:5",
														"type": ""
													}
												],
												"src": "12803:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13071:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13081:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13097:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13091:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13091:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "13081:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13064:6:5",
														"type": ""
													}
												],
												"src": "13031:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13171:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13182:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13198:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13192:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13192:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13154:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13164:6:5",
														"type": ""
													}
												],
												"src": "13112:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13330:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13340:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13355:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13340:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13302:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13307:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13318:11:5",
														"type": ""
													}
												],
												"src": "13217:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13466:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13483:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13488:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13476:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13476:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13476:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13504:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13523:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13528:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13519:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13519:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13504:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13438:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13443:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13454:11:5",
														"type": ""
													}
												],
												"src": "13370:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13587:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13597:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13620:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13602:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13602:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13597:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13631:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13654:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13636:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13636:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13631:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13678:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13680:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13680:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13680:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13675:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13668:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13668:9:5"
															},
															"nodeType": "YulIf",
															"src": "13665:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13710:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13719:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13722:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13715:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13715:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13710:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13576:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13579:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13585:1:5",
														"type": ""
													}
												],
												"src": "13545:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13784:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13794:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13817:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13799:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13799:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13794:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13828:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13851:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13833:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13833:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13828:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14026:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14028:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14028:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14028:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13938:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13931:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13931:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13924:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13924:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13946:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13953:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14021:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13949:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13949:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13943:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13943:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13920:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13920:105:5"
															},
															"nodeType": "YulIf",
															"src": "13917:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14058:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14073:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14076:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14069:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14069:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14058:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13767:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13770:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13776:7:5",
														"type": ""
													}
												],
												"src": "13736:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14135:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14145:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14174:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14156:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14156:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14145:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14117:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14127:7:5",
														"type": ""
													}
												],
												"src": "14090:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14234:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14244:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14269:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14262:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14262:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14255:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14255:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14244:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14216:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14226:7:5",
														"type": ""
													}
												],
												"src": "14192:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14332:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14342:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14353:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14342:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14314:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14324:7:5",
														"type": ""
													}
												],
												"src": "14288:76:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14415:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14425:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14440:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14447:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14436:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14436:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14425:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14397:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14407:7:5",
														"type": ""
													}
												],
												"src": "14370:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14547:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14557:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14568:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14557:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14529:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14539:7:5",
														"type": ""
													}
												],
												"src": "14502:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14629:61:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14639:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14654:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14661:22:5",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14650:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14650:34:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14639:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14611:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14621:7:5",
														"type": ""
													}
												],
												"src": "14585:105:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14770:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14780:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14824:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14793:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14793:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14780:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$145_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14750:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14760:9:5",
														"type": ""
													}
												],
												"src": "14696:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14902:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14912:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14956:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14925:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14925:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14912:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14882:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14892:9:5",
														"type": ""
													}
												],
												"src": "14842:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15034:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15044:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15075:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15057:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15057:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15044:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15014:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15024:9:5",
														"type": ""
													}
												],
												"src": "14974:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15142:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15152:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15161:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15156:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15221:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15246:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15251:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15242:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15242:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15265:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15270:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15261:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15261:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15255:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15255:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15235:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15235:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15235:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15182:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15185:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15179:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15179:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15193:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15195:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15204:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15207:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15200:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15200:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15195:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15175:3:5",
																"statements": []
															},
															"src": "15171:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15318:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15368:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15373:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15364:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15364:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15382:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15357:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15357:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15357:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15299:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15302:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15296:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15296:13:5"
															},
															"nodeType": "YulIf",
															"src": "15293:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15124:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15129:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15134:6:5",
														"type": ""
													}
												],
												"src": "15093:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15434:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15451:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15454:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15444:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15444:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15444:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15548:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15551:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15541:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15541:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15572:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15565:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15565:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15406:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15620:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15637:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15640:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15630:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15630:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15630:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15734:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15737:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15727:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15727:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15727:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15758:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15761:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15751:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15751:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15592:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15867:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15884:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15887:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15877:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15877:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15877:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15778:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15990:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16007:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16010:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16000:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16000:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15901:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16072:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16082:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16100:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16107:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16096:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16096:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16116:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16112:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16092:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16092:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "16082:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16055:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "16065:6:5",
														"type": ""
													}
												],
												"src": "16024:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16238:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16260:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16268:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16256:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16256:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16272:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16249:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16249:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16328:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16336:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16324:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16341:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16317:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16317:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16317:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16230:6:5",
														"type": ""
													}
												],
												"src": "16132:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16469:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16491:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16499:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16487:14:5"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16503:22:5",
																		"type": "",
																		"value": "Failed to send Ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16480:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16480:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16480:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16461:6:5",
														"type": ""
													}
												],
												"src": "16363:170:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16645:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16667:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16675:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16663:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16663:14:5"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16679:23:5",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16656:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16656:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16637:6:5",
														"type": ""
													}
												],
												"src": "16539:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16822:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16844:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16852:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16840:14:5"
																	},
																	{
																		"hexValue": "4d696e696d756d20747261646520616d6f756e74203120626e62",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16856:28:5",
																		"type": "",
																		"value": "Minimum trade amount 1 bnb"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16833:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16833:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16833:52:5"
														}
													]
												},
												"name": "store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16814:6:5",
														"type": ""
													}
												],
												"src": "16716:176:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17004:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17026:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17034:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17022:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17022:14:5"
																	},
																	{
																		"hexValue": "4d757374206265203120626e6220776f727468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17038:21:5",
																		"type": "",
																		"value": "Must be 1 bnb worth"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17015:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17015:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16996:6:5",
														"type": ""
													}
												],
												"src": "16898:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17179:60:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17201:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17209:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17197:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17197:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17213:18:5",
																		"type": "",
																		"value": "Transfer failed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17190:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17190:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17190:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17171:6:5",
														"type": ""
													}
												],
												"src": "17073:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17351:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17373:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17369:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17369:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17385:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17362:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17362:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17343:6:5",
														"type": ""
													}
												],
												"src": "17245:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17539:8:5",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17531:6:5",
														"type": ""
													}
												],
												"src": "17433:114:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17596:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17653:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17662:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17665:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17655:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17655:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17655:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17619:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17644:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17626:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17626:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17616:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17616:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17609:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17609:43:5"
															},
															"nodeType": "YulIf",
															"src": "17606:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17589:5:5",
														"type": ""
													}
												],
												"src": "17553:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17721:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17775:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17784:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17787:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17777:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17777:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17777:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17744:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17766:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17751:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17751:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17741:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17741:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17734:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17734:40:5"
															},
															"nodeType": "YulIf",
															"src": "17731:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17714:5:5",
														"type": ""
													}
												],
												"src": "17681:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17845:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17901:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17910:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17913:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17903:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17903:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17903:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17868:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17892:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "17875:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17875:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17865:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17865:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17858:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17858:42:5"
															},
															"nodeType": "YulIf",
															"src": "17855:62:5"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17838:5:5",
														"type": ""
													}
												],
												"src": "17803:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17972:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18029:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18038:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18041:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18031:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18031:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18031:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17995:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18020:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18002:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18002:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17992:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17992:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17985:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17985:43:5"
															},
															"nodeType": "YulIf",
															"src": "17982:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17965:5:5",
														"type": ""
													}
												],
												"src": "17929:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18099:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18155:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18164:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18167:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18157:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18157:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18157:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18122:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18146:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nodeType": "YulIdentifier",
																					"src": "18129:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18129:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18119:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18119:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18112:42:5"
															},
															"nodeType": "YulIf",
															"src": "18109:62:5"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18092:5:5",
														"type": ""
													}
												],
												"src": "18057:120:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$145_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$145__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$145_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$145_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send Ether\")\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function store_literal_in_memory_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum trade amount 1 bnb\")\n\n    }\n\n    function store_literal_in_memory_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be 1 bnb worth\")\n\n    }\n\n    function store_literal_in_memory_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed!\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a75760003560e01c80638a71c2f4116100645780638a71c2f4146101875780638da5cb5b146101b25780638e15f473146101dd578063ade87ecc14610208578063ebc4197c14610231578063f2fde38b1461025c576100a7565b80633b3a7e31146100ac5780633cb40e16146100e9578063715018a61461010057806380c3142614610117578063817e9d311461013357806389a302711461015c575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce919061100a565b610285565b6040516100e0919061141a565b60405180910390f35b3480156100f557600080fd5b506100fe6102ba565b005b34801561010c57600080fd5b50610115610632565b005b610131600480360381019061012c9190610fb0565b6106ba565b005b34801561013f57600080fd5b5061015a60048036038101906101559190610fb0565b61088c565b005b34801561016857600080fd5b50610171610912565b60405161017e91906112e2565b60405180910390f35b34801561019357600080fd5b5061019c610938565b6040516101a991906112e2565b60405180910390f35b3480156101be57600080fd5b506101c761095e565b6040516101d49190611267565b60405180910390f35b3480156101e957600080fd5b506101f2610987565b6040516101ff91906112fd565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190610fb0565b610a45565b005b34801561023d57600080fd5b50610246610b87565b604051610253919061141a565b60405180910390f35b34801561026857600080fd5b50610283600480360381019061027e9190610f56565b610b8d565b005b600080670de0b6b3a76400006102a48486610c8590919063ffffffff16565b6102ae919061148d565b90508091505092915050565b60006102c461095e565b73ffffffffffffffffffffffffffffffffffffffff16476040516102e790611252565b60006040518083038185875af1925050503d8060008114610324576040519150601f19603f3d011682016040523d82523d6000602084013e610329565b606091505b505090508061036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103649061135a565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6103b361095e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040e9190611267565b60206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610fdd565b6040518363ffffffff1660e01b815260040161047b9291906112b9565b602060405180830381600087803b15801561049557600080fd5b505af11580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610f83565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61051461095e565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161056f9190611267565b60206040518083038186803b15801561058757600080fd5b505afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf9190610fdd565b6040518363ffffffff1660e01b81526004016105dc9291906112b9565b602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610f83565b5050565b61063a610ccf565b73ffffffffffffffffffffffffffffffffffffffff1661065861095e565b73ffffffffffffffffffffffffffffffffffffffff16146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a5906113fa565b60405180910390fd5b6106b86000610cd7565b565b6002548110156106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f69061139a565b60405180910390fd5b6000670de0b6b3a764000060025483610718919061145c565b610722919061148d565b9050600061072e61095e565b73ffffffffffffffffffffffffffffffffffffffff168260405161075190611252565b60006040518083038185875af1925050503d806000811461078e576040519150601f19603f3d011682016040523d82523d6000602084013e610793565b606091505b50509050806107d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ce906113da565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016108349291906112b9565b602060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108869190610f83565b50505050565b610894610ccf565b73ffffffffffffffffffffffffffffffffffffffff166108b261095e565b73ffffffffffffffffffffffffffffffffffffffff1614610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff906113fa565b60405180910390fd5b8060028190555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a30919061104a565b94509450945094509450839550505050505090565b6002548114610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906113ba565b60405180910390fd5b610ab7600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333084610d9b565b60006402540be400610ac7610987565b610ad1919061148d565b9050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b309291906112b9565b602060405180830381600087803b158015610b4a57600080fd5b505af1158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190610f83565b505050565b60025481565b610b95610ccf565b73ffffffffffffffffffffffffffffffffffffffff16610bb361095e565b73ffffffffffffffffffffffffffffffffffffffff1614610c09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c00906113fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c709061133a565b60405180910390fd5b610c8281610cd7565b50565b6000610cc783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610e75565b905092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401610dda93929190611282565b602060405180830381600087803b158015610df457600080fd5b505af1158015610e08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2c9190610f83565b905080610e6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e659061137a565b60405180910390fd5b5050505050565b60008083118290610ebc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb39190611318565b60405180910390fd5b5060008385610ecb919061145c565b9050809150509392505050565b600081359050610ee781611774565b92915050565b600081519050610efc8161178b565b92915050565b600081519050610f11816117a2565b92915050565b600081359050610f26816117b9565b92915050565b600081519050610f3b816117b9565b92915050565b600081519050610f50816117d0565b92915050565b600060208284031215610f6c57610f6b611616565b5b6000610f7a84828501610ed8565b91505092915050565b600060208284031215610f9957610f98611616565b5b6000610fa784828501610eed565b91505092915050565b600060208284031215610fc657610fc5611616565b5b6000610fd484828501610f17565b91505092915050565b600060208284031215610ff357610ff2611616565b5b600061100184828501610f2c565b91505092915050565b6000806040838503121561102157611020611616565b5b600061102f85828601610f17565b925050602061104085828601610f17565b9150509250929050565b600080600080600060a0868803121561106657611065611616565b5b600061107488828901610f41565b955050602061108588828901610f02565b945050604061109688828901610f2c565b93505060606110a788828901610f2c565b92505060806110b888828901610f41565b9150509295509295909350565b6110ce816114e7565b82525050565b6110dd8161154f565b82525050565b6110ec81611505565b82525050565b60006110fd82611435565b611107818561144b565b9350611117818560208601611585565b6111208161161b565b840191505092915050565b600061113860268361144b565b91506111438261162c565b604082019050919050565b600061115b60148361144b565b91506111668261167b565b602082019050919050565b600061117e60158361144b565b9150611189826116a4565b602082019050919050565b60006111a1601a8361144b565b91506111ac826116cd565b602082019050919050565b60006111c460138361144b565b91506111cf826116f6565b602082019050919050565b60006111e760108361144b565b91506111f28261171f565b602082019050919050565b600061120a60208361144b565b915061121582611748565b602082019050919050565b600061122d600083611440565b915061123882611771565b600082019050919050565b61124c8161152f565b82525050565b600061125d82611220565b9150819050919050565b600060208201905061127c60008301846110c5565b92915050565b600060608201905061129760008301866110c5565b6112a460208301856110c5565b6112b16040830184611243565b949350505050565b60006040820190506112ce60008301856110c5565b6112db6020830184611243565b9392505050565b60006020820190506112f760008301846110d4565b92915050565b600060208201905061131260008301846110e3565b92915050565b6000602082019050818103600083015261133281846110f2565b905092915050565b600060208201905081810360008301526113538161112b565b9050919050565b600060208201905081810360008301526113738161114e565b9050919050565b6000602082019050818103600083015261139381611171565b9050919050565b600060208201905081810360008301526113b381611194565b9050919050565b600060208201905081810360008301526113d3816111b7565b9050919050565b600060208201905081810360008301526113f3816111da565b9050919050565b60006020820190508181036000830152611413816111fd565b9050919050565b600060208201905061142f6000830184611243565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006114678261152f565b91506114728361152f565b925082611482576114816115e7565b5b828204905092915050565b60006114988261152f565b91506114a38361152f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114dc576114db6115b8565b5b828202905092915050565b60006114f28261150f565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061155a82611561565b9050919050565b600061156c82611573565b9050919050565b600061157e8261150f565b9050919050565b60005b838110156115a3578082015181840152602081019050611588565b838111156115b2576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f4d696e696d756d20747261646520616d6f756e74203120626e62000000000000600082015250565b7f4d757374206265203120626e6220776f72746800000000000000000000000000600082015250565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b61177d816114e7565b811461178857600080fd5b50565b611794816114f9565b811461179f57600080fd5b50565b6117ab81611505565b81146117b657600080fd5b50565b6117c28161152f565b81146117cd57600080fd5b50565b6117d981611539565b81146117e457600080fd5b5056fea26469706673582212204c70d60a6d1fd62f991e5f9fb95ce0a5100f84d961465e6c14bd6d85b094329b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A71C2F4 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8A71C2F4 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xADE87ECC EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xEBC4197C EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25C JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x3B3A7E31 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3CB40E16 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x80C31426 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x817E9D31 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x15C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH2 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x2BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x171 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0xF56 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2A4 DUP5 DUP7 PUSH2 0xC85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x329 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x364 SWAP1 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x3B3 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x43A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45E SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x514 PUSH2 0x95E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5BF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0xCCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x658 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B8 PUSH1 0x0 PUSH2 0xCD7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F6 SWAP1 PUSH2 0x139A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SLOAD DUP4 PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72E PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x751 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x793 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CE SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x862 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x886 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x894 PUSH2 0xCCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B2 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP6 POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 EQ PUSH2 0xA89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA80 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB7 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP5 PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x0 PUSH5 0x2540BE400 PUSH2 0xAC7 PUSH2 0x987 JUMP JUMPDEST PUSH2 0xAD1 SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB30 SWAP3 SWAP2 SWAP1 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB95 PUSH2 0xCCF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB3 PUSH2 0x95E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP1 PUSH2 0x13FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC70 SWAP1 PUSH2 0x133A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC82 DUP2 PUSH2 0xCD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0xE75 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0xF83 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE65 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB3 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0xECB SWAP2 SWAP1 PUSH2 0x145C JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEE7 DUP2 PUSH2 0x1774 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEFC DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF11 DUP2 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF26 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3B DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF50 DUP2 PUSH2 0x17D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6C JUMPI PUSH2 0xF6B PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7A DUP5 DUP3 DUP6 ADD PUSH2 0xED8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF99 JUMPI PUSH2 0xF98 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA7 DUP5 DUP3 DUP6 ADD PUSH2 0xEED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC5 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD4 DUP5 DUP3 DUP6 ADD PUSH2 0xF17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF3 JUMPI PUSH2 0xFF2 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP5 DUP3 DUP6 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1021 JUMPI PUSH2 0x1020 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP6 DUP3 DUP7 ADD PUSH2 0xF17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1040 DUP6 DUP3 DUP7 ADD PUSH2 0xF17 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1616 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1074 DUP9 DUP3 DUP10 ADD PUSH2 0xF41 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1085 DUP9 DUP3 DUP10 ADD PUSH2 0xF02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1096 DUP9 DUP3 DUP10 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x10A7 DUP9 DUP3 DUP10 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x10B8 DUP9 DUP3 DUP10 ADD PUSH2 0xF41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10DD DUP2 PUSH2 0x154F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10EC DUP2 PUSH2 0x1505 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FD DUP3 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x1107 DUP2 DUP6 PUSH2 0x144B JUMP JUMPDEST SWAP4 POP PUSH2 0x1117 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x1120 DUP2 PUSH2 0x161B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1138 PUSH1 0x26 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1143 DUP3 PUSH2 0x162C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x14 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117E PUSH1 0x15 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 DUP3 PUSH2 0x16A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A1 PUSH1 0x1A DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x11AC DUP3 PUSH2 0x16CD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C4 PUSH1 0x13 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x11CF DUP3 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E7 PUSH1 0x10 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x11F2 DUP3 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120A PUSH1 0x20 DUP4 PUSH2 0x144B JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122D PUSH1 0x0 DUP4 PUSH2 0x1440 JUMP JUMPDEST SWAP2 POP PUSH2 0x1238 DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124C DUP2 PUSH2 0x152F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125D DUP3 PUSH2 0x1220 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1297 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12A4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12B1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12CE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x12DB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1312 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1332 DUP2 DUP5 PUSH2 0x10F2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1353 DUP2 PUSH2 0x112B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1373 DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1393 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13B3 DUP2 PUSH2 0x1194 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13D3 DUP2 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F3 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1413 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1467 DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP2 POP PUSH2 0x1472 DUP4 PUSH2 0x152F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x15E7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1498 DUP3 PUSH2 0x152F JUMP JUMPDEST SWAP2 POP PUSH2 0x14A3 DUP4 PUSH2 0x152F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x14DC JUMPI PUSH2 0x14DB PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F2 DUP3 PUSH2 0x150F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155A DUP3 PUSH2 0x1561 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156C DUP3 PUSH2 0x1573 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157E DUP3 PUSH2 0x150F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1588 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64204574686572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D696E696D756D20747261646520616D6F756E74203120626E62000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4D757374206265203120626E6220776F72746800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65642100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x177D DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x14F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17AB DUP2 PUSH2 0x1505 JUMP JUMPDEST DUP2 EQ PUSH2 0x17B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17C2 DUP2 PUSH2 0x152F JUMP JUMPDEST DUP2 EQ PUSH2 0x17CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17D9 DUP2 PUSH2 0x1539 JUMP JUMPDEST DUP2 EQ PUSH2 0x17E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH17 0xD60A6D1FD62F991E5F9FB95CE0A5100F84 0xD9 PUSH2 0x465E PUSH13 0x14BD6D85B094329B64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "2576:2953:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:233;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4831:421;;;;;;;;;;;;;:::i;:::-;;1661:101:3;;;;;;;;;;;;;:::i;:::-;;3459:441:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4717:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2798:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2772:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:85:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3906:284:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4196:511;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2738:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1911:198:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3220:233:4;3288:7;3323:18;3402:6;3378:21;3391:7;3378:8;:12;;:21;;;;:::i;:::-;:31;;;;:::i;:::-;3365:44;;3426:10;3419:17;;;3220:233;;;;:::o;4831:421::-;4999:12;5017:7;:5;:7::i;:::-;:12;;5037:21;5017:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4998:65;;;5082:7;5074:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5125:5;;;;;;;;;;;:14;;;5140:7;:5;:7::i;:::-;5149:5;;;;;;;;;;;:15;;;5173:4;5149:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5125:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5191:4;;;;;;;;;;;:13;;;5205:7;:5;:7::i;:::-;5214:4;;;;;;;;;;;:14;;;5237:4;5214:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5191:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4876:376;4831:421::o;1661:101:3:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1725:30:::1;1752:1;1725:18;:30::i;:::-;1661:101::o:0;3459:441:4:-;3546:10;;3534:8;:22;;3526:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3598:18;3677:6;3663:10;;3654:8;:19;;;;:::i;:::-;3653:31;;;;:::i;:::-;3640:44;;3696:12;3714:7;:5;:7::i;:::-;:12;;3734:10;3714:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:54;;;3768:7;3760:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;3847:5;;;;;;;;;;;:14;;;3862:10;3874:8;3847:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3515:385;;3459:441;:::o;4717:108::-;1252:12:3;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4807:10:4::1;4794;:23;;;;4717:108:::0;:::o;2798:18::-;;;;;;;;;;;;;:::o;2772:19::-;;;;;;;;;;;;;:::o;1029:85:3:-;1075:7;1101:6;;;;;;;;;;;1094:13;;1029:85;:::o;3906:284:4:-;3953:3;3984:14;4014:9;4038:14;4067;4096:22;4132:9;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3969:190;;;;;;;;;;4177:5;4170:12;;;;;;;3906:284;:::o;4196:511::-;4279:10;;4266:9;:23;4258:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4320:62;4338:5;;;;;;;;;;;4345:10;4365:4;4372:9;4320:17;:62::i;:::-;4417:12;4654:6;4634:16;:14;:16::i;:::-;4626:35;;;;:::i;:::-;4619:42;;4668:4;;;;;;;;;;;:13;;;4682:10;4694:4;4668:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4247:460;4196:511;:::o;2738:26::-;;;;:::o;1911:198:3:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:1:::1;1999:22;;:8;:22;;;;1991:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2074:28;2093:8;2074:18;:28::i;:::-;1911:198:::0;:::o;2051:132:4:-;2109:7;2136:39;2140:1;2143;2136:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2129:46;;2051:132;;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;2263:187:3:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;5258:268:4:-;5412:9;5424:5;:18;;;5443:6;5451:9;5462:6;5424:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5412:57;;5488:4;5480:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;5401:125;5258:268;;;;:::o;2191:225::-;2311:7;2343:1;2339;:5;2346:12;2331:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2370:9;2386:1;2382;:5;;;;:::i;:::-;2370:17;;2407:1;2400:8;;;2191:225;;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:141::-;351:5;382:6;376:13;367:22;;398:32;424:5;398:32;:::i;:::-;295:141;;;;:::o;442:139::-;488:5;526:6;513:20;504:29;;542:33;569:5;542:33;:::i;:::-;442:139;;;;:::o;587:143::-;644:5;675:6;669:13;660:22;;691:33;718:5;691:33;:::i;:::-;587:143;;;;:::o;736:141::-;792:5;823:6;817:13;808:22;;839:32;865:5;839:32;:::i;:::-;736:141;;;;:::o;883:329::-;942:6;991:2;979:9;970:7;966:23;962:32;959:119;;;997:79;;:::i;:::-;959:119;1117:1;1142:53;1187:7;1178:6;1167:9;1163:22;1142:53;:::i;:::-;1132:63;;1088:117;883:329;;;;:::o;1218:345::-;1285:6;1334:2;1322:9;1313:7;1309:23;1305:32;1302:119;;;1340:79;;:::i;:::-;1302:119;1460:1;1485:61;1538:7;1529:6;1518:9;1514:22;1485:61;:::i;:::-;1475:71;;1431:125;1218:345;;;;:::o;1569:329::-;1628:6;1677:2;1665:9;1656:7;1652:23;1648:32;1645:119;;;1683:79;;:::i;:::-;1645:119;1803:1;1828:53;1873:7;1864:6;1853:9;1849:22;1828:53;:::i;:::-;1818:63;;1774:117;1569:329;;;;:::o;1904:351::-;1974:6;2023:2;2011:9;2002:7;1998:23;1994:32;1991:119;;;2029:79;;:::i;:::-;1991:119;2149:1;2174:64;2230:7;2221:6;2210:9;2206:22;2174:64;:::i;:::-;2164:74;;2120:128;1904:351;;;;:::o;2261:474::-;2329:6;2337;2386:2;2374:9;2365:7;2361:23;2357:32;2354:119;;;2392:79;;:::i;:::-;2354:119;2512:1;2537:53;2582:7;2573:6;2562:9;2558:22;2537:53;:::i;:::-;2527:63;;2483:117;2639:2;2665:53;2710:7;2701:6;2690:9;2686:22;2665:53;:::i;:::-;2655:63;;2610:118;2261:474;;;;;:::o;2741:971::-;2844:6;2852;2860;2868;2876;2925:3;2913:9;2904:7;2900:23;2896:33;2893:120;;;2932:79;;:::i;:::-;2893:120;3052:1;3077:63;3132:7;3123:6;3112:9;3108:22;3077:63;:::i;:::-;3067:73;;3023:127;3189:2;3215:63;3270:7;3261:6;3250:9;3246:22;3215:63;:::i;:::-;3205:73;;3160:128;3327:2;3353:64;3409:7;3400:6;3389:9;3385:22;3353:64;:::i;:::-;3343:74;;3298:129;3466:2;3492:64;3548:7;3539:6;3528:9;3524:22;3492:64;:::i;:::-;3482:74;;3437:129;3605:3;3632:63;3687:7;3678:6;3667:9;3663:22;3632:63;:::i;:::-;3622:73;;3576:129;2741:971;;;;;;;;:::o;3718:118::-;3805:24;3823:5;3805:24;:::i;:::-;3800:3;3793:37;3718:118;;:::o;3842:159::-;3943:51;3988:5;3943:51;:::i;:::-;3938:3;3931:64;3842:159;;:::o;4007:115::-;4092:23;4109:5;4092:23;:::i;:::-;4087:3;4080:36;4007:115;;:::o;4128:364::-;4216:3;4244:39;4277:5;4244:39;:::i;:::-;4299:71;4363:6;4358:3;4299:71;:::i;:::-;4292:78;;4379:52;4424:6;4419:3;4412:4;4405:5;4401:16;4379:52;:::i;:::-;4456:29;4478:6;4456:29;:::i;:::-;4451:3;4447:39;4440:46;;4220:272;4128:364;;;;:::o;4498:366::-;4640:3;4661:67;4725:2;4720:3;4661:67;:::i;:::-;4654:74;;4737:93;4826:3;4737:93;:::i;:::-;4855:2;4850:3;4846:12;4839:19;;4498:366;;;:::o;4870:::-;5012:3;5033:67;5097:2;5092:3;5033:67;:::i;:::-;5026:74;;5109:93;5198:3;5109:93;:::i;:::-;5227:2;5222:3;5218:12;5211:19;;4870:366;;;:::o;5242:::-;5384:3;5405:67;5469:2;5464:3;5405:67;:::i;:::-;5398:74;;5481:93;5570:3;5481:93;:::i;:::-;5599:2;5594:3;5590:12;5583:19;;5242:366;;;:::o;5614:::-;5756:3;5777:67;5841:2;5836:3;5777:67;:::i;:::-;5770:74;;5853:93;5942:3;5853:93;:::i;:::-;5971:2;5966:3;5962:12;5955:19;;5614:366;;;:::o;5986:::-;6128:3;6149:67;6213:2;6208:3;6149:67;:::i;:::-;6142:74;;6225:93;6314:3;6225:93;:::i;:::-;6343:2;6338:3;6334:12;6327:19;;5986:366;;;:::o;6358:::-;6500:3;6521:67;6585:2;6580:3;6521:67;:::i;:::-;6514:74;;6597:93;6686:3;6597:93;:::i;:::-;6715:2;6710:3;6706:12;6699:19;;6358:366;;;:::o;6730:::-;6872:3;6893:67;6957:2;6952:3;6893:67;:::i;:::-;6886:74;;6969:93;7058:3;6969:93;:::i;:::-;7087:2;7082:3;7078:12;7071:19;;6730:366;;;:::o;7102:398::-;7261:3;7282:83;7363:1;7358:3;7282:83;:::i;:::-;7275:90;;7374:93;7463:3;7374:93;:::i;:::-;7492:1;7487:3;7483:11;7476:18;;7102:398;;;:::o;7506:118::-;7593:24;7611:5;7593:24;:::i;:::-;7588:3;7581:37;7506:118;;:::o;7630:379::-;7814:3;7836:147;7979:3;7836:147;:::i;:::-;7829:154;;8000:3;7993:10;;7630:379;;;:::o;8015:222::-;8108:4;8146:2;8135:9;8131:18;8123:26;;8159:71;8227:1;8216:9;8212:17;8203:6;8159:71;:::i;:::-;8015:222;;;;:::o;8243:442::-;8392:4;8430:2;8419:9;8415:18;8407:26;;8443:71;8511:1;8500:9;8496:17;8487:6;8443:71;:::i;:::-;8524:72;8592:2;8581:9;8577:18;8568:6;8524:72;:::i;:::-;8606;8674:2;8663:9;8659:18;8650:6;8606:72;:::i;:::-;8243:442;;;;;;:::o;8691:332::-;8812:4;8850:2;8839:9;8835:18;8827:26;;8863:71;8931:1;8920:9;8916:17;8907:6;8863:71;:::i;:::-;8944:72;9012:2;9001:9;8997:18;8988:6;8944:72;:::i;:::-;8691:332;;;;;:::o;9029:250::-;9136:4;9174:2;9163:9;9159:18;9151:26;;9187:85;9269:1;9258:9;9254:17;9245:6;9187:85;:::i;:::-;9029:250;;;;:::o;9285:218::-;9376:4;9414:2;9403:9;9399:18;9391:26;;9427:69;9493:1;9482:9;9478:17;9469:6;9427:69;:::i;:::-;9285:218;;;;:::o;9509:313::-;9622:4;9660:2;9649:9;9645:18;9637:26;;9709:9;9703:4;9699:20;9695:1;9684:9;9680:17;9673:47;9737:78;9810:4;9801:6;9737:78;:::i;:::-;9729:86;;9509:313;;;;:::o;9828:419::-;9994:4;10032:2;10021:9;10017:18;10009:26;;10081:9;10075:4;10071:20;10067:1;10056:9;10052:17;10045:47;10109:131;10235:4;10109:131;:::i;:::-;10101:139;;9828:419;;;:::o;10253:::-;10419:4;10457:2;10446:9;10442:18;10434:26;;10506:9;10500:4;10496:20;10492:1;10481:9;10477:17;10470:47;10534:131;10660:4;10534:131;:::i;:::-;10526:139;;10253:419;;;:::o;10678:::-;10844:4;10882:2;10871:9;10867:18;10859:26;;10931:9;10925:4;10921:20;10917:1;10906:9;10902:17;10895:47;10959:131;11085:4;10959:131;:::i;:::-;10951:139;;10678:419;;;:::o;11103:::-;11269:4;11307:2;11296:9;11292:18;11284:26;;11356:9;11350:4;11346:20;11342:1;11331:9;11327:17;11320:47;11384:131;11510:4;11384:131;:::i;:::-;11376:139;;11103:419;;;:::o;11528:::-;11694:4;11732:2;11721:9;11717:18;11709:26;;11781:9;11775:4;11771:20;11767:1;11756:9;11752:17;11745:47;11809:131;11935:4;11809:131;:::i;:::-;11801:139;;11528:419;;;:::o;11953:::-;12119:4;12157:2;12146:9;12142:18;12134:26;;12206:9;12200:4;12196:20;12192:1;12181:9;12177:17;12170:47;12234:131;12360:4;12234:131;:::i;:::-;12226:139;;11953:419;;;:::o;12378:::-;12544:4;12582:2;12571:9;12567:18;12559:26;;12631:9;12625:4;12621:20;12617:1;12606:9;12602:17;12595:47;12659:131;12785:4;12659:131;:::i;:::-;12651:139;;12378:419;;;:::o;12803:222::-;12896:4;12934:2;12923:9;12919:18;12911:26;;12947:71;13015:1;13004:9;13000:17;12991:6;12947:71;:::i;:::-;12803:222;;;;:::o;13112:99::-;13164:6;13198:5;13192:12;13182:22;;13112:99;;;:::o;13217:147::-;13318:11;13355:3;13340:18;;13217:147;;;;:::o;13370:169::-;13454:11;13488:6;13483:3;13476:19;13528:4;13523:3;13519:14;13504:29;;13370:169;;;;:::o;13545:185::-;13585:1;13602:20;13620:1;13602:20;:::i;:::-;13597:25;;13636:20;13654:1;13636:20;:::i;:::-;13631:25;;13675:1;13665:35;;13680:18;;:::i;:::-;13665:35;13722:1;13719;13715:9;13710:14;;13545:185;;;;:::o;13736:348::-;13776:7;13799:20;13817:1;13799:20;:::i;:::-;13794:25;;13833:20;13851:1;13833:20;:::i;:::-;13828:25;;14021:1;13953:66;13949:74;13946:1;13943:81;13938:1;13931:9;13924:17;13920:105;13917:131;;;14028:18;;:::i;:::-;13917:131;14076:1;14073;14069:9;14058:20;;13736:348;;;;:::o;14090:96::-;14127:7;14156:24;14174:5;14156:24;:::i;:::-;14145:35;;14090:96;;;:::o;14192:90::-;14226:7;14269:5;14262:13;14255:21;14244:32;;14192:90;;;:::o;14288:76::-;14324:7;14353:5;14342:16;;14288:76;;;:::o;14370:126::-;14407:7;14447:42;14440:5;14436:54;14425:65;;14370:126;;;:::o;14502:77::-;14539:7;14568:5;14557:16;;14502:77;;;:::o;14585:105::-;14621:7;14661:22;14654:5;14650:34;14639:45;;14585:105;;;:::o;14696:140::-;14760:9;14793:37;14824:5;14793:37;:::i;:::-;14780:50;;14696:140;;;:::o;14842:126::-;14892:9;14925:37;14956:5;14925:37;:::i;:::-;14912:50;;14842:126;;;:::o;14974:113::-;15024:9;15057:24;15075:5;15057:24;:::i;:::-;15044:37;;14974:113;;;:::o;15093:307::-;15161:1;15171:113;15185:6;15182:1;15179:13;15171:113;;;15270:1;15265:3;15261:11;15255:18;15251:1;15246:3;15242:11;15235:39;15207:2;15204:1;15200:10;15195:15;;15171:113;;;15302:6;15299:1;15296:13;15293:101;;;15382:1;15373:6;15368:3;15364:16;15357:27;15293:101;15142:258;15093:307;;;:::o;15406:180::-;15454:77;15451:1;15444:88;15551:4;15548:1;15541:15;15575:4;15572:1;15565:15;15592:180;15640:77;15637:1;15630:88;15737:4;15734:1;15727:15;15761:4;15758:1;15751:15;15901:117;16010:1;16007;16000:12;16024:102;16065:6;16116:2;16112:7;16107:2;16100:5;16096:14;16092:28;16082:38;;16024:102;;;:::o;16132:225::-;16272:34;16268:1;16260:6;16256:14;16249:58;16341:8;16336:2;16328:6;16324:15;16317:33;16132:225;:::o;16363:170::-;16503:22;16499:1;16491:6;16487:14;16480:46;16363:170;:::o;16539:171::-;16679:23;16675:1;16667:6;16663:14;16656:47;16539:171;:::o;16716:176::-;16856:28;16852:1;16844:6;16840:14;16833:52;16716:176;:::o;16898:169::-;17038:21;17034:1;17026:6;17022:14;17015:45;16898:169;:::o;17073:166::-;17213:18;17209:1;17201:6;17197:14;17190:42;17073:166;:::o;17245:182::-;17385:34;17381:1;17373:6;17369:14;17362:58;17245:182;:::o;17433:114::-;;:::o;17553:122::-;17626:24;17644:5;17626:24;:::i;:::-;17619:5;17616:35;17606:63;;17665:1;17662;17655:12;17606:63;17553:122;:::o;17681:116::-;17751:21;17766:5;17751:21;:::i;:::-;17744:5;17741:32;17731:60;;17787:1;17784;17777:12;17731:60;17681:116;:::o;17803:120::-;17875:23;17892:5;17875:23;:::i;:::-;17868:5;17865:34;17855:62;;17913:1;17910;17903:12;17855:62;17803:120;:::o;17929:122::-;18002:24;18020:5;18002:24;:::i;:::-;17995:5;17992:35;17982:63;;18041:1;18038;18031:12;17982:63;17929:122;:::o;18057:120::-;18129:23;18146:5;18129:23;:::i;:::-;18122:5;18119:34;18109:62;;18167:1;18164;18157:12;18109:62;18057:120;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1234600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BnbToSafuu()": "2517",
								"Safuu()": "2600",
								"USDC()": "2711",
								"buySafuu(uint256)": "infinite",
								"getLatestPrice()": "infinite",
								"owner()": "2544",
								"renounceOwnership()": "30419",
								"sellSafuu(uint256)": "infinite",
								"setFactor(uint256)": "24849",
								"testDiv(uint256,uint256)": "infinite",
								"transferOwnership(address)": "30833",
								"withdrawToOwner()": "infinite"
							},
							"internal": {
								"_safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2885,
									"end": 3214,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2918,
									"end": 2924,
									"name": "PUSH",
									"source": 4,
									"value": "186A0"
								},
								{
									"begin": 2905,
									"end": 2915,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2905,
									"end": 2924,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2905,
									"end": 2924,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2905,
									"end": 2924,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2905,
									"end": 2924,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2944,
									"end": 2986,
									"name": "PUSH",
									"source": 4,
									"value": "E5BA47FD94CB645BA4119222E34FB33F59C7CD90"
								},
								{
									"begin": 2929,
									"end": 2934,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2929,
									"end": 2934,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2929,
									"end": 2987,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3006,
									"end": 3048,
									"name": "PUSH",
									"source": 4,
									"value": "8AC76A51CC950D9822D68B83FE1AD97B32CD580D"
								},
								{
									"begin": 2992,
									"end": 2996,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2992,
									"end": 2996,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2992,
									"end": 3049,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3165,
									"end": 3207,
									"name": "PUSH",
									"source": 4,
									"value": "567F2323251F0AAB15C8DFB1967E4E8A7D42AEE"
								},
								{
									"begin": 3131,
									"end": 3140,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3131,
									"end": 3140,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3208,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2336,
									"end": 2352,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2380,
									"end": 2388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2434,
									"end": 2442,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2424,
									"end": 2432,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2326,
									"end": 2450,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2576,
									"end": 5529,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c70d60a6d1fd62f991e5f9fb95ce0a5100f84d961465e6c14bd6d85b094329b64736f6c63430008070033",
									".code": [
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "8A71C2F4"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "8A71C2F4"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "8E15F473"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "ADE87ECC"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "EBC4197C"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "3B3A7E31"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "3CB40E16"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "80C31426"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "817E9D31"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "89A30271"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 5529,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3288,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3391,
											"end": 3398,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3386,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3378,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3378,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3409,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3453,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5017,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5029,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5017,
											"end": 5029,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5058,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4998,
											"end": 5063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5082,
											"end": 5089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5074,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5125,
											"end": 5130,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5139,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5125,
											"end": 5139,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5139,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5140,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5140,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5149,
											"end": 5164,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5164,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5173,
											"end": 5177,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 5149,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5205,
											"end": 5210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5218,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5237,
											"end": 5241,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5214,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 5252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4831,
											"end": 5252,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3546,
											"end": 3556,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3546,
											"end": 3556,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3556,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3556,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3526,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3663,
											"end": 3673,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3663,
											"end": 3673,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3662,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3654,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3653,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3714,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3760,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3861,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3847,
											"end": 3861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3861,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3862,
											"end": 3872,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3874,
											"end": 3882,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3847,
											"end": 3883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3900,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4804,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4794,
											"end": 4817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4817,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4717,
											"end": 4825,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2816,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1082,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3953,
											"end": 3956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 3998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4052,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4067,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4118,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4141,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4157,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "FEAF968C"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4132,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 4159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 4190,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4266,
											"end": 4275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4266,
											"end": 4289,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4258,
											"end": 4313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4338,
											"end": 4343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4355,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4660,
											"name": "PUSH",
											"source": 4,
											"value": "2540BE400"
										},
										{
											"begin": 4634,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4634,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4634,
											"end": 4650,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4634,
											"end": 4650,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4634,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 4626,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4681,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4668,
											"end": 4681,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4681,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4682,
											"end": 4692,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4668,
											"end": 4699,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4196,
											"end": 4707,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2738,
											"end": 2764,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2140,
											"end": 2141,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2136,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2136,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2183,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2442,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2424,
											"end": 2432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2326,
											"end": 2450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5429,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5451,
											"end": 5460,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5424,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5469,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5412,
											"end": 5469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5488,
											"end": 5492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5480,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5401,
											"end": 5526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5526,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2331,
											"end": 2359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2382,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2416,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 295,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 351,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 367,
											"end": 389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 367,
											"end": 389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 398,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 398,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 398,
											"end": 430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 398,
											"end": 430,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 398,
											"end": 430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 436,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 581,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 442,
											"end": 581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 513,
											"end": 533,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 504,
											"end": 533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 504,
											"end": 533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 542,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 569,
											"end": 574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 542,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 542,
											"end": 575,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 575,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 542,
											"end": 575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 581,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 442,
											"end": 581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 581,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 730,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 587,
											"end": 730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 644,
											"end": 649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 669,
											"end": 682,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 660,
											"end": 682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 660,
											"end": 682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 691,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 718,
											"end": 723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 691,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 691,
											"end": 724,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 691,
											"end": 724,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 691,
											"end": 724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 730,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 587,
											"end": 730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 730,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 736,
											"end": 877,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 736,
											"end": 877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 792,
											"end": 797,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 817,
											"end": 830,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 808,
											"end": 830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 808,
											"end": 830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 839,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 865,
											"end": 870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 839,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 839,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 736,
											"end": 877,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 736,
											"end": 877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 736,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 736,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 736,
											"end": 877,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 942,
											"end": 948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 979,
											"end": 988,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 970,
											"end": 977,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 966,
											"end": 989,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 962,
											"end": 994,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1078,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 959,
											"end": 1078,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 997,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1078,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 959,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1187,
											"end": 1194,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1167,
											"end": 1176,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1142,
											"end": 1195,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1142,
											"end": 1195,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1142,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1195,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 1212,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1336,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1332,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1337,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1421,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1302,
											"end": 1421,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1340,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1340,
											"end": 1419,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1340,
											"end": 1419,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1340,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1302,
											"end": 1421,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1302,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1527,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1514,
											"end": 1536,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1485,
											"end": 1546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1546,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 1485,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1475,
											"end": 1546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1563,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1679,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1663,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1648,
											"end": 1680,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1764,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1645,
											"end": 1764,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1683,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1764,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1645,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1873,
											"end": 1880,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1828,
											"end": 1881,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1828,
											"end": 1881,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1828,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1898,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2009,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2021,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2026,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2110,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1991,
											"end": 2110,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2029,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2029,
											"end": 2108,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2029,
											"end": 2108,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2029,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 2110,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1991,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2230,
											"end": 2237,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2174,
											"end": 2238,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2238,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2174,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2238,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2164,
											"end": 2238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 2255,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2383,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2372,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2361,
											"end": 2384,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2357,
											"end": 2389,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2473,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2354,
											"end": 2473,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2392,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2392,
											"end": 2471,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2471,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2392,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2473,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2354,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2512,
											"end": 2513,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2582,
											"end": 2589,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2573,
											"end": 2579,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2562,
											"end": 2571,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2537,
											"end": 2590,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2537,
											"end": 2590,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2537,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2527,
											"end": 2590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2641,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2686,
											"end": 2708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2665,
											"end": 2718,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2665,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2665,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2735,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2928,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2923,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 3013,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2893,
											"end": 3013,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2932,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2932,
											"end": 3011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2932,
											"end": 3011,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2932,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 3013,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2893,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3132,
											"end": 3139,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3108,
											"end": 3130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3077,
											"end": 3140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3077,
											"end": 3140,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3077,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3140,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3023,
											"end": 3150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3215,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3215,
											"end": 3278,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3215,
											"end": 3278,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 3215,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3278,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3409,
											"end": 3416,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3407,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3353,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3353,
											"end": 3417,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3417,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 3353,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3343,
											"end": 3417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3492,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3548,
											"end": 3555,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3492,
											"end": 3556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3492,
											"end": 3556,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3492,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3608,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3632,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3687,
											"end": 3694,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3678,
											"end": 3684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3632,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3632,
											"end": 3695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3632,
											"end": 3695,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3632,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 3712,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 3836,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3718,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3823,
											"end": 3828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3836,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3842,
											"end": 4001,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3842,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3943,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 3988,
											"end": 3993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3943,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3943,
											"end": 3994,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 3994,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 3943,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 3995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3842,
											"end": 4001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3842,
											"end": 4001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3842,
											"end": 4001,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4007,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4007,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4092,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4092,
											"end": 4115,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4092,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4092,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4080,
											"end": 4116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4007,
											"end": 4122,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4277,
											"end": 4282,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 4244,
											"end": 4283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4283,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 4244,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4363,
											"end": 4369,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4361,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4299,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4299,
											"end": 4370,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4299,
											"end": 4370,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 4299,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4370,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4424,
											"end": 4430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4422,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4410,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4379,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 4379,
											"end": 4431,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4379,
											"end": 4431,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 4379,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 4456,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4486,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4220,
											"end": 4492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4128,
											"end": 4492,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4498,
											"end": 4864,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 4498,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 4643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4725,
											"end": 4727,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4720,
											"end": 4723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4661,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 4661,
											"end": 4728,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4728,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4661,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4826,
											"end": 4829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4737,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 4737,
											"end": 4830,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4737,
											"end": 4830,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 4737,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4855,
											"end": 4857,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4864,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4864,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4870,
											"end": 5236,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4870,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5092,
											"end": 5095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5033,
											"end": 5100,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5033,
											"end": 5100,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 5033,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5109,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5198,
											"end": 5201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5109,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5109,
											"end": 5202,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5109,
											"end": 5202,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 5109,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 5236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 5236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 5236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 5236,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5242,
											"end": 5608,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 5242,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5469,
											"end": 5471,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 5464,
											"end": 5467,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5405,
											"end": 5472,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5405,
											"end": 5472,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 5405,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5481,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 5481,
											"end": 5574,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5481,
											"end": 5574,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 5481,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5599,
											"end": 5601,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5594,
											"end": 5597,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5614,
											"end": 5980,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 5614,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 5841,
											"end": 5843,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 5836,
											"end": 5839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5777,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5777,
											"end": 5844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5777,
											"end": 5844,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 5777,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5770,
											"end": 5844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5770,
											"end": 5844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 5942,
											"end": 5945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5853,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 5853,
											"end": 5946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5853,
											"end": 5946,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 5853,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5971,
											"end": 5973,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5966,
											"end": 5969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 5974,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5980,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5986,
											"end": 6352,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 5986,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6128,
											"end": 6131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 6208,
											"end": 6211,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6149,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6149,
											"end": 6216,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6149,
											"end": 6216,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 6149,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6314,
											"end": 6317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 6225,
											"end": 6318,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6225,
											"end": 6318,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 6225,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6343,
											"end": 6345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6334,
											"end": 6346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6346,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5986,
											"end": 6352,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6358,
											"end": 6724,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 6358,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6500,
											"end": 6503,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6521,
											"end": 6588,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6521,
											"end": 6588,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 6521,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 6686,
											"end": 6689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 6597,
											"end": 6690,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6597,
											"end": 6690,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 6597,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6715,
											"end": 6717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6724,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6724,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6730,
											"end": 7096,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 6730,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6872,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6952,
											"end": 6955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6893,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 6893,
											"end": 6960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6893,
											"end": 6960,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 6893,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 6969,
											"end": 7062,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6969,
											"end": 7062,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 6969,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7071,
											"end": 7090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7071,
											"end": 7090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 7096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 7096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 7096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 7096,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7102,
											"end": 7500,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7102,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7261,
											"end": 7264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7363,
											"end": 7364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7358,
											"end": 7361,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7282,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7282,
											"end": 7365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7282,
											"end": 7365,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7282,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7275,
											"end": 7365,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7275,
											"end": 7365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7463,
											"end": 7466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7374,
											"end": 7467,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7374,
											"end": 7467,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7374,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7483,
											"end": 7494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7476,
											"end": 7494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7102,
											"end": 7500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7102,
											"end": 7500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7102,
											"end": 7500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7102,
											"end": 7500,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7506,
											"end": 7624,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 7506,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7588,
											"end": 7591,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7581,
											"end": 7618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7624,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7630,
											"end": 8009,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7630,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7979,
											"end": 7982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7836,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7836,
											"end": 7983,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7836,
											"end": 7983,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 7836,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7829,
											"end": 7983,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7829,
											"end": 7983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7993,
											"end": 8003,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7993,
											"end": 8003,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 8009,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 8009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 8009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7630,
											"end": 8009,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8146,
											"end": 8148,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8144,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8149,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8227,
											"end": 8228,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8216,
											"end": 8225,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8159,
											"end": 8230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8015,
											"end": 8237,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8432,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 8511,
											"end": 8512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8496,
											"end": 8513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 8443,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8524,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 8592,
											"end": 8594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8581,
											"end": 8590,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8568,
											"end": 8574,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8524,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8524,
											"end": 8596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8524,
											"end": 8596,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 8524,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 8674,
											"end": 8676,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8663,
											"end": 8672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8659,
											"end": 8677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8606,
											"end": 8678,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8606,
											"end": 8678,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 8606,
											"end": 8678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8243,
											"end": 8685,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8812,
											"end": 8816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8839,
											"end": 8848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8827,
											"end": 8853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8863,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8929,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 8913,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8863,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8863,
											"end": 8934,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8863,
											"end": 8934,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 8863,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 9012,
											"end": 9014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9001,
											"end": 9010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 8994,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 8944,
											"end": 9016,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8944,
											"end": 9016,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 8944,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 9023,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9136,
											"end": 9140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9176,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9163,
											"end": 9172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9151,
											"end": 9177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9151,
											"end": 9177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9187,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 9269,
											"end": 9270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9267,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9254,
											"end": 9271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9187,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 9187,
											"end": 9272,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9187,
											"end": 9272,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 9187,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9279,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9376,
											"end": 9380,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9416,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9403,
											"end": 9412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9399,
											"end": 9417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9391,
											"end": 9417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9391,
											"end": 9417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9469,
											"end": 9475,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9427,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9427,
											"end": 9496,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9427,
											"end": 9496,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 9427,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9503,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9649,
											"end": 9658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9645,
											"end": 9663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9709,
											"end": 9718,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9719,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9695,
											"end": 9696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9684,
											"end": 9693,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9680,
											"end": 9697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9673,
											"end": 9720,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9737,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 9810,
											"end": 9814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9801,
											"end": 9807,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9737,
											"end": 9815,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9737,
											"end": 9815,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9737,
											"end": 9815,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 9737,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9815,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9822,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9828,
											"end": 10247,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9828,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9994,
											"end": 9998,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10021,
											"end": 10030,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10017,
											"end": 10035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10009,
											"end": 10035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10009,
											"end": 10035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10075,
											"end": 10079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10071,
											"end": 10091,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10065,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10052,
											"end": 10069,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10045,
											"end": 10092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10109,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 10235,
											"end": 10239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10109,
											"end": 10240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10109,
											"end": 10240,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10109,
											"end": 10240,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 10109,
											"end": 10240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9828,
											"end": 10247,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9828,
											"end": 10247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9828,
											"end": 10247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9828,
											"end": 10247,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10253,
											"end": 10672,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 10253,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10419,
											"end": 10423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10442,
											"end": 10460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10500,
											"end": 10504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10516,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10481,
											"end": 10490,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10477,
											"end": 10494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10470,
											"end": 10517,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10534,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 10660,
											"end": 10664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10534,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 10534,
											"end": 10665,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10534,
											"end": 10665,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 10534,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10526,
											"end": 10665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10672,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10678,
											"end": 11097,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10678,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10844,
											"end": 10848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10871,
											"end": 10880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10867,
											"end": 10885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10931,
											"end": 10940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10921,
											"end": 10941,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10917,
											"end": 10918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10915,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10902,
											"end": 10919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10895,
											"end": 10942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10959,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 11085,
											"end": 11089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10959,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10959,
											"end": 11090,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10959,
											"end": 11090,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 10959,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 11090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10951,
											"end": 11090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 11097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 11097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 11097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 11097,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11103,
											"end": 11522,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 11103,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11269,
											"end": 11273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11307,
											"end": 11309,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11296,
											"end": 11305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11284,
											"end": 11310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11284,
											"end": 11310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11350,
											"end": 11354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11346,
											"end": 11366,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11342,
											"end": 11343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11327,
											"end": 11344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11320,
											"end": 11367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11384,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 11510,
											"end": 11514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11384,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 11384,
											"end": 11515,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11384,
											"end": 11515,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 11384,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11376,
											"end": 11515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11376,
											"end": 11515,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11103,
											"end": 11522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11103,
											"end": 11522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11103,
											"end": 11522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11103,
											"end": 11522,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11528,
											"end": 11947,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 11528,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11694,
											"end": 11698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11732,
											"end": 11734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11721,
											"end": 11730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11717,
											"end": 11735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11781,
											"end": 11790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11775,
											"end": 11779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11771,
											"end": 11791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11767,
											"end": 11768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11756,
											"end": 11765,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11752,
											"end": 11769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11745,
											"end": 11792,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11809,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 11935,
											"end": 11939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11809,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11809,
											"end": 11940,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11809,
											"end": 11940,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 11809,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11801,
											"end": 11940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11801,
											"end": 11940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11528,
											"end": 11947,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12146,
											"end": 12155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12142,
											"end": 12160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12134,
											"end": 12160,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12206,
											"end": 12215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12200,
											"end": 12204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12196,
											"end": 12216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12192,
											"end": 12193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12181,
											"end": 12190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12177,
											"end": 12194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12170,
											"end": 12217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 12360,
											"end": 12364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 12234,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12226,
											"end": 12365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12226,
											"end": 12365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11953,
											"end": 12372,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12378,
											"end": 12797,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 12378,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12544,
											"end": 12548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12571,
											"end": 12580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12567,
											"end": 12585,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12559,
											"end": 12585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12559,
											"end": 12585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12631,
											"end": 12640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12625,
											"end": 12629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12621,
											"end": 12641,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12617,
											"end": 12618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12606,
											"end": 12615,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12602,
											"end": 12619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12595,
											"end": 12642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12659,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12785,
											"end": 12789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12659,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 12659,
											"end": 12790,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12659,
											"end": 12790,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 12659,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12651,
											"end": 12790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12651,
											"end": 12790,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12378,
											"end": 12797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12378,
											"end": 12797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12378,
											"end": 12797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12378,
											"end": 12797,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12896,
											"end": 12900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12936,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12923,
											"end": 12932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12919,
											"end": 12937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12911,
											"end": 12937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12911,
											"end": 12937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12947,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 13015,
											"end": 13016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13004,
											"end": 13013,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13000,
											"end": 13017,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12991,
											"end": 12997,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12947,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 12947,
											"end": 13018,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12947,
											"end": 13018,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 12947,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12803,
											"end": 13025,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13112,
											"end": 13211,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 13112,
											"end": 13211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13164,
											"end": 13170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13198,
											"end": 13203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13192,
											"end": 13204,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13182,
											"end": 13204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13182,
											"end": 13204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13211,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13318,
											"end": 13329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13340,
											"end": 13358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13217,
											"end": 13364,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13454,
											"end": 13465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13483,
											"end": 13486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13476,
											"end": 13495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13528,
											"end": 13532,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13523,
											"end": 13526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13519,
											"end": 13533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13504,
											"end": 13533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13504,
											"end": 13533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13370,
											"end": 13539,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13585,
											"end": 13586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13602,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 13620,
											"end": 13621,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13602,
											"end": 13622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 13602,
											"end": 13622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13602,
											"end": 13622,
											"name": "tag",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 13602,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13597,
											"end": 13622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13597,
											"end": 13622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13636,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 13654,
											"end": 13655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13636,
											"end": 13656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 13636,
											"end": 13656,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13636,
											"end": 13656,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 13636,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13631,
											"end": 13656,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13631,
											"end": 13656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13665,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 13665,
											"end": 13700,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 13680,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13665,
											"end": 13700,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 13665,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13722,
											"end": 13723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13715,
											"end": 13724,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 13710,
											"end": 13724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13710,
											"end": 13724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13545,
											"end": 13730,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13776,
											"end": 13783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 13799,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13794,
											"end": 13819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13794,
											"end": 13819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 13851,
											"end": 13852,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 13833,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13828,
											"end": 13853,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13828,
											"end": 13853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14021,
											"end": 14022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13953,
											"end": 14019,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13949,
											"end": 14023,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 13946,
											"end": 13947,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13943,
											"end": 14024,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13938,
											"end": 13939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13931,
											"end": 13940,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13924,
											"end": 13941,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13920,
											"end": 14025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13917,
											"end": 14048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13917,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 13917,
											"end": 14048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 14028,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13917,
											"end": 14048,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 13917,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14076,
											"end": 14077,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14069,
											"end": 14078,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14058,
											"end": 14078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14058,
											"end": 14078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 14084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14090,
											"end": 14186,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 14090,
											"end": 14186,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14127,
											"end": 14134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 14174,
											"end": 14179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 14156,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14145,
											"end": 14180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14145,
											"end": 14180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14186,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14186,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14186,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14090,
											"end": 14186,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14192,
											"end": 14282,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 14192,
											"end": 14282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14226,
											"end": 14233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14262,
											"end": 14275,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14255,
											"end": 14276,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14244,
											"end": 14276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14244,
											"end": 14276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14282,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14288,
											"end": 14364,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 14288,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14324,
											"end": 14331,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14353,
											"end": 14358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14342,
											"end": 14358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14342,
											"end": 14358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14288,
											"end": 14364,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14288,
											"end": 14364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14288,
											"end": 14364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14288,
											"end": 14364,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14370,
											"end": 14496,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 14370,
											"end": 14496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14407,
											"end": 14414,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14447,
											"end": 14489,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14440,
											"end": 14445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14436,
											"end": 14490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14425,
											"end": 14490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14425,
											"end": 14490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14370,
											"end": 14496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14370,
											"end": 14496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14370,
											"end": 14496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14370,
											"end": 14496,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14502,
											"end": 14579,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 14502,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14539,
											"end": 14546,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14568,
											"end": 14573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14557,
											"end": 14573,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14557,
											"end": 14573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14502,
											"end": 14579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14502,
											"end": 14579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14502,
											"end": 14579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14502,
											"end": 14579,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14585,
											"end": 14690,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 14585,
											"end": 14690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14628,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14661,
											"end": 14683,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14654,
											"end": 14659,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14650,
											"end": 14684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14639,
											"end": 14684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14639,
											"end": 14684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14585,
											"end": 14690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14585,
											"end": 14690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14585,
											"end": 14690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14585,
											"end": 14690,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14696,
											"end": 14836,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 14696,
											"end": 14836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14760,
											"end": 14769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14793,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 14824,
											"end": 14829,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14793,
											"end": 14830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 14793,
											"end": 14830,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14793,
											"end": 14830,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 14793,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14780,
											"end": 14830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14780,
											"end": 14830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14696,
											"end": 14836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14696,
											"end": 14836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14696,
											"end": 14836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14696,
											"end": 14836,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14842,
											"end": 14968,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 14842,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14892,
											"end": 14901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 14956,
											"end": 14961,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 14925,
											"end": 14962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14912,
											"end": 14962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14912,
											"end": 14962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14842,
											"end": 14968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14842,
											"end": 14968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14842,
											"end": 14968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14842,
											"end": 14968,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14974,
											"end": 15087,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 14974,
											"end": 15087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15024,
											"end": 15033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15057,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 15075,
											"end": 15080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15057,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 15057,
											"end": 15081,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15057,
											"end": 15081,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 15057,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15044,
											"end": 15081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15044,
											"end": 15081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14974,
											"end": 15087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14974,
											"end": 15087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14974,
											"end": 15087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14974,
											"end": 15087,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15093,
											"end": 15400,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 15093,
											"end": 15400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15161,
											"end": 15162,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15185,
											"end": 15191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15182,
											"end": 15183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15179,
											"end": 15192,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15270,
											"end": 15271,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15265,
											"end": 15268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15261,
											"end": 15272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15255,
											"end": 15273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15251,
											"end": 15252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15246,
											"end": 15249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15242,
											"end": 15253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15204,
											"end": 15205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15200,
											"end": 15210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15195,
											"end": 15210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15195,
											"end": 15210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 15171,
											"end": 15284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15308,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15299,
											"end": 15300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15309,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 15293,
											"end": 15394,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15293,
											"end": 15394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 15293,
											"end": 15394,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15382,
											"end": 15383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15373,
											"end": 15379,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15368,
											"end": 15371,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15364,
											"end": 15380,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15357,
											"end": 15384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15293,
											"end": 15394,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 15293,
											"end": 15394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15142,
											"end": 15400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15093,
											"end": 15400,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15406,
											"end": 15586,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 15406,
											"end": 15586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15454,
											"end": 15531,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15451,
											"end": 15452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15444,
											"end": 15532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15551,
											"end": 15555,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 15548,
											"end": 15549,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15541,
											"end": 15556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15575,
											"end": 15579,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 15572,
											"end": 15573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15565,
											"end": 15580,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15592,
											"end": 15772,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 15592,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15640,
											"end": 15717,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15637,
											"end": 15638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15630,
											"end": 15718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15737,
											"end": 15741,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 15734,
											"end": 15735,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15727,
											"end": 15742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15761,
											"end": 15765,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 15758,
											"end": 15759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15751,
											"end": 15766,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15901,
											"end": 16018,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 15901,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16007,
											"end": 16008,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16000,
											"end": 16012,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16126,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 16024,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16065,
											"end": 16071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16116,
											"end": 16118,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 16112,
											"end": 16119,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 16107,
											"end": 16109,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 16100,
											"end": 16105,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16096,
											"end": 16110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16092,
											"end": 16120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16082,
											"end": 16120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16082,
											"end": 16120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16024,
											"end": 16126,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16132,
											"end": 16357,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 16132,
											"end": 16357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16272,
											"end": 16306,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16268,
											"end": 16269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16260,
											"end": 16266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16256,
											"end": 16270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16249,
											"end": 16307,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16341,
											"end": 16349,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16336,
											"end": 16338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16328,
											"end": 16334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16324,
											"end": 16339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16317,
											"end": 16350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16132,
											"end": 16357,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16132,
											"end": 16357,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16363,
											"end": 16533,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 16363,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16503,
											"end": 16525,
											"name": "PUSH",
											"source": 5,
											"value": "4661696C656420746F2073656E64204574686572000000000000000000000000"
										},
										{
											"begin": 16499,
											"end": 16500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16491,
											"end": 16497,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16487,
											"end": 16501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16480,
											"end": 16526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16363,
											"end": 16533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16363,
											"end": 16533,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16539,
											"end": 16710,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 16539,
											"end": 16710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16679,
											"end": 16702,
											"name": "PUSH",
											"source": 5,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 16675,
											"end": 16676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16667,
											"end": 16673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16663,
											"end": 16677,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16656,
											"end": 16703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16539,
											"end": 16710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16539,
											"end": 16710,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16716,
											"end": 16892,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 16716,
											"end": 16892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16856,
											"end": 16884,
											"name": "PUSH",
											"source": 5,
											"value": "4D696E696D756D20747261646520616D6F756E74203120626E62000000000000"
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16844,
											"end": 16850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16840,
											"end": 16854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16833,
											"end": 16885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16892,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16898,
											"end": 17067,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 16898,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17038,
											"end": 17059,
											"name": "PUSH",
											"source": 5,
											"value": "4D757374206265203120626E6220776F72746800000000000000000000000000"
										},
										{
											"begin": 17034,
											"end": 17035,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17026,
											"end": 17032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17022,
											"end": 17036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17015,
											"end": 17060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16898,
											"end": 17067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16898,
											"end": 17067,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17073,
											"end": 17239,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 17073,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17213,
											"end": 17231,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C65642100000000000000000000000000000000"
										},
										{
											"begin": 17209,
											"end": 17210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17201,
											"end": 17207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17197,
											"end": 17211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17190,
											"end": 17232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17073,
											"end": 17239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17073,
											"end": 17239,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17245,
											"end": 17427,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 17245,
											"end": 17427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17385,
											"end": 17419,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 17381,
											"end": 17382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17369,
											"end": 17383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17362,
											"end": 17420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17245,
											"end": 17427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17245,
											"end": 17427,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17433,
											"end": 17547,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 17433,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17547,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17553,
											"end": 17675,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 17553,
											"end": 17675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 17644,
											"end": 17649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 17626,
											"end": 17650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17619,
											"end": 17624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17616,
											"end": 17651,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17606,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 17606,
											"end": 17669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17665,
											"end": 17666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17662,
											"end": 17663,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17655,
											"end": 17667,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17606,
											"end": 17669,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 17606,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17553,
											"end": 17675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17553,
											"end": 17675,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17681,
											"end": 17797,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 17681,
											"end": 17797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 17766,
											"end": 17771,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17744,
											"end": 17749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17741,
											"end": 17773,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17731,
											"end": 17791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 17731,
											"end": 17791,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17787,
											"end": 17788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17784,
											"end": 17785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17777,
											"end": 17789,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17731,
											"end": 17791,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 17731,
											"end": 17791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17681,
											"end": 17797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17681,
											"end": 17797,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17803,
											"end": 17923,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 17803,
											"end": 17923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17875,
											"end": 17898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 17892,
											"end": 17897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17875,
											"end": 17898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 17875,
											"end": 17898,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17875,
											"end": 17898,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 17875,
											"end": 17898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17868,
											"end": 17873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17865,
											"end": 17899,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17855,
											"end": 17917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 17855,
											"end": 17917,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17913,
											"end": 17914,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17910,
											"end": 17911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17903,
											"end": 17915,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17855,
											"end": 17917,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 17855,
											"end": 17917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17803,
											"end": 17923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17803,
											"end": 17923,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 18020,
											"end": 18025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 18002,
											"end": 18026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17995,
											"end": 18000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17992,
											"end": 18027,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18041,
											"end": 18042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18038,
											"end": 18039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18031,
											"end": 18043,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 17982,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18057,
											"end": 18177,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 18057,
											"end": 18177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18129,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 18146,
											"end": 18151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18129,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 18129,
											"end": 18152,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18129,
											"end": 18152,
											"name": "tag",
											"source": 5,
											"value": "415"
										},
										{
											"begin": 18129,
											"end": 18152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18122,
											"end": 18127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18119,
											"end": 18153,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18109,
											"end": 18171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 18109,
											"end": 18171,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18167,
											"end": 18168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18164,
											"end": 18165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18157,
											"end": 18169,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18109,
											"end": 18171,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 18109,
											"end": 18171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18057,
											"end": 18177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18057,
											"end": 18177,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BnbToSafuu()": "ebc4197c",
							"Safuu()": "8a71c2f4",
							"USDC()": "89a30271",
							"buySafuu(uint256)": "80c31426",
							"getLatestPrice()": "8e15f473",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sellSafuu(uint256)": "ade87ecc",
							"setFactor(uint256)": "817e9d31",
							"testDiv(uint256,uint256)": "3b3a7e31",
							"transferOwnership(address)": "f2fde38b",
							"withdrawToOwner()": "3cb40e16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BnbToSafuu\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Safuu\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amttobuy\",\"type\":\"uint256\"}],\"name\":\"buySafuu\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amttosell\",\"type\":\"uint256\"}],\"name\":\"sellSafuu\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newfactor\",\"type\":\"uint256\"}],\"name\":\"setFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amttobuy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_factor\",\"type\":\"uint256\"}],\"name\":\"testDiv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/sis.sol\":\"personalSafuuTrader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8db60f81b61f79fab0366fa7ef9d47ac67462276d0cbe7b36a2fdf74654e9c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c102d1f8b81f966eb8acd919cbe14b3785a2389427154ac99bb54d3e94fddce\",\"dweb:/ipfs/QmX9afvMGRxCX6AZbHRhmkEHYJAGDeyeT5ycx7u43zSsNK\"]},\"test/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"test/Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"test/sis.sol\":{\"keccak256\":\"0x32529b4c74b98de35ec338ddd3f6b601e2d77b24a69491a8bb02f45c6c36d965\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://882a43fd988a11dcda7effdad62e699b0975d79b16b177d842a8af562781a4d1\",\"dweb:/ipfs/QmZaBEWAPR6mUzC1Xvnm3zhmnd49bUFEhbFv7eavYaTG1W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> test/sis.sol:139:13:\n    |\n139 |             uint80 roundID, \n    |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3998,
					"file": "test/sis.sol",
					"start": 3984
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> test/sis.sol:141:13:\n    |\n141 |             uint startedAt,\n    |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4052,
					"file": "test/sis.sol",
					"start": 4038
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> test/sis.sol:142:13:\n    |\n142 |             uint timeStamp,\n    |             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4081,
					"file": "test/sis.sol",
					"start": 4067
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> test/sis.sol:143:13:\n    |\n143 |             uint80 answeredInRound\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4118,
					"file": "test/sis.sol",
					"start": 4096
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> test/sis.sol:117:3:\n    |\n117 |   function testDiv(uint256 amttobuy, uint256 _factor) public returns (uint256)\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3453,
					"file": "test/sis.sol",
					"start": 3220
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "test/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "70:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "106:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "140:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:7:0"
									},
									"scope": 45,
									"src": "97:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "162:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "199:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:15:0"
									},
									"scope": 45,
									"src": "153:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "229:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 45,
									"src": "220:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "500:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "520:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "513:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:17:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "576:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "629:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "621:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "655:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "647:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "680:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "673:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:135:0"
									},
									"scope": 45,
									"src": "491:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "718:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "782:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "812:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "805:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "805:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "835:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "827:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "861:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "853:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "886:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "879:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:135:0"
									},
									"scope": 45,
									"src": "709:200:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "60:852:0",
							"usedErrors": []
						}
					],
					"src": "33:879:0"
				},
				"id": 0
			},
			"test/Context.sol": {
				"ast": {
					"absolutePath": "test/Context.sol",
					"exportedSymbols": {
						"Context": [
							67
						]
					},
					"id": 68,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 53,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 55,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 67,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 62,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 61,
												"id": 64,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 59,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 67,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 68,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"test/IERC20.sol": {
				"ast": {
					"absolutePath": "test/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							145
						]
					},
					"id": 146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 69,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 70,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 145,
							"linearizedBaseContracts": [
								145
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 145,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 145,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 91,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 145,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 145,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 145,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 145,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 135,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 144,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 146,
							"src": "187:2596:2",
							"usedErrors": []
						}
					],
					"src": "91:2693:2"
				},
				"id": 2
			},
			"test/Ownable.sol": {
				"ast": {
					"absolutePath": "test/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							67
						],
						"Ownable": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:3"
						},
						{
							"absolutePath": "test/Context.sol",
							"file": "./Context.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 68,
							"src": "112:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 150,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "661:7:3"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250,
								67
							],
							"name": "Ownable",
							"nameLocation": "650:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 153,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 250,
									"src": "675:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 152,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 159,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "731:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "762:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:3"
									},
									"src": "704:84:3"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "904:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 164,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "933:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 163,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "914:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "914:32:3"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 169,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:3"
									},
									"scope": 250,
									"src": "890:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1084:30:3",
										"statements": [
											{
												"expression": {
													"id": 175,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "1101:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 174,
												"id": 176,
												"nodeType": "Return",
												"src": "1094:13:3"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:3"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:3"
									},
									"scope": 250,
									"src": "1029:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1223:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "1241:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 184,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "1252:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:3"
											},
											{
												"id": 190,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:3"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 192,
									"name": "onlyOwner",
									"nameLocation": "1211:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:3"
									},
									"src": "1202:117:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1715:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1752:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1744:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 199,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1744:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 198,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "1725:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1725:30:3"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1325:331:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 195,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "1705:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1670:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:3"
									},
									"scope": 250,
									"src": "1661:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "1981:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1999:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2019:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "1991:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 225,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2093:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 224,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "2074:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2074:28:3"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1768:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 211,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "1971:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1971:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1920:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1946:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "1938:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:3"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:3"
									},
									"scope": 250,
									"src": "1911:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "2326:124:3",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2344:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "2336:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 235,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"id": 237,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2355:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:25:3"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2371:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 240,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2380:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2371:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2371:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 244,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2424:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2434:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2403:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "EmitStatement",
												"src": "2398:45:3"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "2115:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2272:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2299:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "2291:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:18:3"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:3"
									},
									"scope": 250,
									"src": "2263:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 251,
							"src": "632:1820:3",
							"usedErrors": []
						}
					],
					"src": "87:2366:3"
				},
				"id": 3
			},
			"test/sis.sol": {
				"ast": {
					"absolutePath": "test/sis.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							67
						],
						"IERC20": [
							145
						],
						"Ownable": [
							250
						],
						"SafeMath": [
							611
						],
						"SafeMathInt": [
							445
						],
						"personalSafuuTrader": [
							892
						]
					},
					"id": 893,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "test/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 893,
							"sourceUnit": 146,
							"src": "58:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "test/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 893,
							"sourceUnit": 251,
							"src": "82:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "test/AggregatorV3Interface.sol",
							"file": "./AggregatorV3Interface.sol",
							"id": 255,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 893,
							"sourceUnit": 46,
							"src": "107:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "SafeMathInt",
							"nameLocation": "156:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 263,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nameLocation": "199:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "175:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 256,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "175:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"id": 262,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"arguments": [
												{
													"hexValue": "31",
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "219:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													}
												],
												"id": 258,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "212:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_int256_$",
													"typeString": "type(int256)"
												},
												"typeName": {
													"id": 257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "212:6:4",
													"typeDescriptions": {}
												}
											},
											"id": 260,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "typeConversion",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "212:9:4",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323535",
											"id": 261,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "225:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "212:16:4",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 273,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nameLocation": "259:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "235:56:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 264,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "235:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"id": 272,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "~",
										"prefix": true,
										"src": "272:19:4",
										"subExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "281:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "274:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 265,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "274:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "274:9:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323535",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "287:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "274:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												}
											],
											"id": 271,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "273:18:4",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "364:175:4",
										"statements": [
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "382:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "375:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 282,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "375:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 284,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "386:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 285,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "390:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "386:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "375:16:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 289,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "412:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 290,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "417:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "412:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 292,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 275,
																				"src": "432:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 293,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "436:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "432:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 295,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "431:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 296,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "452:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"id": 297,
																				"name": "MIN_INT256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "456:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "452:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "451:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "431:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "412:55:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "404:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "404:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "404:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 305,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 277,
																			"src": "488:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "493:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "488:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 308,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "487:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 309,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 283,
																				"src": "500:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 310,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "504:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "500:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 312,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "509:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "500:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "499:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "487:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "479:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "479:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "479:33:4"
											},
											{
												"expression": {
													"id": 318,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 283,
													"src": "530:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 281,
												"id": 319,
												"nodeType": "Return",
												"src": "523:8:4"
											}
										]
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "309:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "320:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "313:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 274,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "330:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "323:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 276,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:20:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "356:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 279,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "356:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:8:4"
									},
									"scope": 445,
									"src": "300:239:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "611:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 331,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "630:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "635:2:4",
																	"subExpression": {
																		"hexValue": "31",
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "636:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_minus_1_by_1",
																		"typeString": "int_const -1"
																	}
																},
																"src": "630:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 335,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 323,
																	"src": "641:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 336,
																	"name": "MIN_INT256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "646:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "641:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "630:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "622:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "622:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "622:35:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 341,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "677:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 342,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "681:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "677:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 329,
												"id": 344,
												"nodeType": "Return",
												"src": "670:12:4"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "556:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "567:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "560:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 322,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "560:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "577:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "570:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 324,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "570:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:20:4"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "603:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "603:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "602:8:4"
									},
									"scope": 445,
									"src": "547:143:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "762:112:4",
										"statements": [
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "780:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "773:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 355,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "773:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "784:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "788:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "784:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "773:16:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 362,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 350,
																				"src": "809:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "814:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "809:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 365,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 356,
																				"src": "819:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 366,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "824:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "819:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "809:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "808:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 370,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 350,
																				"src": "831:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "835:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "831:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 373,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 356,
																				"src": "840:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 374,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 348,
																				"src": "844:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "840:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "831:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "830:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "808:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "800:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "800:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "800:47:4"
											},
											{
												"expression": {
													"id": 381,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "865:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 354,
												"id": 382,
												"nodeType": "Return",
												"src": "858:8:4"
											}
										]
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "707:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "718:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "711:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 347,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "711:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "728:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "721:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "721:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:20:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "754:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 352,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "754:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:8:4"
									},
									"scope": 445,
									"src": "698:176:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "946:112:4",
										"statements": [
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "964:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "957:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 393,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 398,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 395,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "968:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 396,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "972:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "968:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "957:16:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 400,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "993:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "998:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "993:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 403,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "1003:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 404,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "1008:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1003:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "993:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "992:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 408,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "1015:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1019:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1015:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 411,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "1024:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 412,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "1028:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1024:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1015:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 415,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1014:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "992:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "984:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "984:47:4"
											},
											{
												"expression": {
													"id": 419,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 394,
													"src": "1049:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 392,
												"id": 420,
												"nodeType": "Return",
												"src": "1042:8:4"
											}
										]
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "891:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "902:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "895:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 385,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "895:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "912:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "905:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 387,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "905:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:20:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "938:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 390,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "938:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:8:4"
									},
									"scope": 445,
									"src": "882:176:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1120:75:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "1139:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 431,
																"name": "MIN_INT256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "1144:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1139:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1131:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1131:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1131:24:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 435,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "1173:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1177:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1173:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "1186:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1173:14:4",
													"trueExpression": {
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1181:2:4",
														"subExpression": {
															"id": 438,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "1182:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 428,
												"id": 442,
												"nodeType": "Return",
												"src": "1166:21:4"
											}
										]
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1075:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1086:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1079:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 423,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:10:4"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1112:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 426,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:8:4"
									},
									"scope": 445,
									"src": "1066:129:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 893,
							"src": "148:1050:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "SafeMath",
							"nameLocation": "1210:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "1293:114:4",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1312:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "1304:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1304:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 456,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "1316:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 457,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1320:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1316:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1304:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 461,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "1340:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 462,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "1345:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1348:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1332:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1332:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "1332:46:4"
											},
											{
												"expression": {
													"id": 467,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 455,
													"src": "1398:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 468,
												"nodeType": "Return",
												"src": "1391:8:4"
											}
										]
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1235:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1247:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1239:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1258:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1250:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1238:22:4"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1284:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:9:4"
									},
									"scope": 611,
									"src": "1226:181:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "1482:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 480,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "1504:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 481,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "1507:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 479,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															486,
															513
														],
														"referencedDeclaration": 513,
														"src": "1500:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1500:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 478,
												"id": 484,
												"nodeType": "Return",
												"src": "1493:50:4"
											}
										]
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1424:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1436:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1428:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1447:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1439:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:22:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "1473:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:9:4"
									},
									"scope": 611,
									"src": "1415:136:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "1688:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "1707:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 499,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "1712:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1707:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 501,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1715:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1699:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1699:29:4"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1747:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "1739:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1739:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 506,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "1751:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 507,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1755:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1751:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1739:17:4"
											},
											{
												"expression": {
													"id": 510,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "1776:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 511,
												"nodeType": "Return",
												"src": "1769:8:4"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1568:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1590:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1582:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1610:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1602:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1636:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1622:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1622:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1571:84:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "1679:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:9:4"
									},
									"scope": 611,
									"src": "1559:226:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "1860:183:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1875:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1880:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1875:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "1871:47:4",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "1883:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1905:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 521,
															"id": 526,
															"nodeType": "Return",
															"src": "1898:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1938:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "1930:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1930:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 531,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "1942:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 532,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1946:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1942:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1930:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 536,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "1966:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 537,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "1970:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1966:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 539,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "1975:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1966:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1978:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1958:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1958:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "1958:56:4"
											},
											{
												"expression": {
													"id": 544,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 530,
													"src": "2034:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 521,
												"id": 545,
												"nodeType": "Return",
												"src": "2027:8:4"
											}
										]
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1802:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1814:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1806:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1825:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1817:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:22:4"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1851:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:9:4"
									},
									"scope": 611,
									"src": "1793:250:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "2118:65:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 557,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2140:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 558,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "2143:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2146:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 556,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															563,
															590
														],
														"referencedDeclaration": 590,
														"src": "2136:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 555,
												"id": 561,
												"nodeType": "Return",
												"src": "2129:46:4"
											}
										]
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2060:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2072:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2064:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2083:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2075:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:22:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "2109:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2108:9:4"
									},
									"scope": 611,
									"src": "2051:132:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "2320:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 575,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2339:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2343:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2339:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 578,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "2346:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2331:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2331:28:4"
											},
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2378:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "2370:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 583,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "2382:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 584,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "2386:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2382:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2370:17:4"
											},
											{
												"expression": {
													"id": 587,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 582,
													"src": "2407:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 573,
												"id": 588,
												"nodeType": "Return",
												"src": "2400:8:4"
											}
										]
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2200:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2222:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2214:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2242:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2234:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2268:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2254:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 568,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2254:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:84:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2311:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:9:4"
									},
									"scope": 611,
									"src": "2191:225:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "2491:57:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "2510:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2515:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2510:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2502:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2502:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "2502:15:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 605,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2535:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 606,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "2539:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2535:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 608,
												"nodeType": "Return",
												"src": "2528:12:4"
											}
										]
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "2433:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2445:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2437:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2456:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2448:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:22:4"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2482:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:9:4"
									},
									"scope": 611,
									"src": "2424:124:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 893,
							"src": "1202:1349:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 612,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "2608:7:4"
									},
									"id": 613,
									"nodeType": "InheritanceSpecifier",
									"src": "2608:7:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 892,
							"linearizedBaseContracts": [
								892,
								250,
								67
							],
							"name": "personalSafuuTrader",
							"nameLocation": "2585:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 616,
									"libraryName": {
										"id": 614,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 611,
										"src": "2634:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "2628:27:4",
									"typeName": {
										"id": 615,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2647:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 619,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "2692:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 892,
									"src": "2661:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 618,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 617,
											"name": "AggregatorV3Interface",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "2661:21:4"
										},
										"referencedDeclaration": 45,
										"src": "2661:21:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "ebc4197c",
									"id": 621,
									"mutability": "mutable",
									"name": "BnbToSafuu",
									"nameLocation": "2754:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 892,
									"src": "2738:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 620,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2738:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a71c2f4",
									"id": 624,
									"mutability": "mutable",
									"name": "Safuu",
									"nameLocation": "2786:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 892,
									"src": "2772:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 623,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 622,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 145,
											"src": "2772:6:4"
										},
										"referencedDeclaration": 145,
										"src": "2772:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 627,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "2812:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 892,
									"src": "2798:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$145",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 626,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 625,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 145,
											"src": "2798:6:4"
										},
										"referencedDeclaration": 145,
										"src": "2798:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$145",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "2900:314:4",
										"statements": [
											{
												"expression": {
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 630,
														"name": "BnbToSafuu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2905:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030303030",
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2918:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000_by_1",
															"typeString": "int_const 100000"
														},
														"value": "100000"
													},
													"src": "2905:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "2905:19:4"
											},
											{
												"expression": {
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 634,
														"name": "Safuu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2929:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307845356241343766443934434236343562613431313932323265333466423333463539433743443930",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2944:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xE5bA47fD94CB645ba4119222e34fB33F59C7CD90"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 635,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2937:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2937:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "2929:58:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "2929:58:4"
											},
											{
												"expression": {
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 640,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "2992:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307838414337366135316363393530643938323244363862383366453141643937423332436435383064",
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3006:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 641,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2999:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$145_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2999:50:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$145",
															"typeString": "contract IERC20"
														}
													},
													"src": "2992:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "2992:57:4"
											},
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 646,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3131:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830353637463233323332353166304161623135633864466231393637453465384137443432616545",
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3165:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 647,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3143:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3143:65:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "3131:77:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "3131:77:4"
											}
										]
									},
									"id": 653,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:2:4"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2900:0:4"
									},
									"scope": 892,
									"src": "2885:329:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "3302:151:4",
										"statements": [
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"mutability": "mutable",
														"name": "payableAmt",
														"nameLocation": "3331:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 679,
														"src": "3323:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3323:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"nodeType": "VariableDeclarationStatement",
												"src": "3323:18:4"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 665,
														"name": "payableAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "3365:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 668,
																	"name": "_factor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "3391:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 666,
																	"name": "amttobuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "3378:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 563,
																"src": "3378:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3378:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3402:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3406:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3402:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 673,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3401:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3378:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3365:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "3365:44:4"
											},
											{
												"expression": {
													"id": 677,
													"name": "payableAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 663,
													"src": "3426:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 661,
												"id": 678,
												"nodeType": "Return",
												"src": "3419:17:4"
											}
										]
									},
									"functionSelector": "3b3a7e31",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testDiv",
									"nameLocation": "3229:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "amttobuy",
												"nameLocation": "3245:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3237:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "_factor",
												"nameLocation": "3263:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3255:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3255:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:35:4"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3288:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3287:9:4"
									},
									"scope": 892,
									"src": "3220:233:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3515:385:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 686,
																"name": "amttobuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "3534:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 687,
																"name": "BnbToSafuu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "3546:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3534:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d20747261646520616d6f756e74203120626e62",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3558:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																"typeString": "literal_string \"Minimum trade amount 1 bnb\""
															},
															"value": "Minimum trade amount 1 bnb"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d07004da2e72f0b6d9c147f58f60a6ce1de4e4a9d2bb04c2a9c6946f49859fb",
																"typeString": "literal_string \"Minimum trade amount 1 bnb\""
															}
														],
														"id": 685,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3526:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3526:61:4"
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "payableAmt",
														"nameLocation": "3606:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3598:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3598:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"nodeType": "VariableDeclarationStatement",
												"src": "3598:18:4"
											},
											{
												"expression": {
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 695,
														"name": "payableAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "3640:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 696,
																		"name": "amttobuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "3654:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 697,
																		"name": "BnbToSafuu",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "3663:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3654:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 699,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3653:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3677:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3681:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "3677:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 703,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3676:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "3653:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3640:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "3640:44:4"
											},
											{
												"assignments": [
													708,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3701:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3696:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3696:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 716,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3746:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 709,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "3714:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3714:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3714:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 712,
																"name": "payableAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "3734:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3714:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3768:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c656421",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3777:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																"typeString": "literal_string \"Transfer failed!\""
															},
															"value": "Transfer failed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
																"typeString": "literal_string \"Transfer failed!\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3760:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "3760:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 725,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3862:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3862:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "amttobuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3874:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 722,
															"name": "Safuu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "3847:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "3847:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3847:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "3847:36:4"
											}
										]
									},
									"functionSelector": "80c31426",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buySafuu",
									"nameLocation": "3468:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amttobuy",
												"nameLocation": "3485:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3477:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3476:18:4"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3515:0:4"
									},
									"scope": 892,
									"src": "3459:441:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "3958:232:4",
										"statements": [
											{
												"assignments": [
													737,
													739,
													741,
													743,
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"mutability": "mutable",
														"name": "roundID",
														"nameLocation": "3991:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "3984:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 736,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "3984:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4018:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4014:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 738,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "4014:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 741,
														"mutability": "mutable",
														"name": "startedAt",
														"nameLocation": "4043:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4038:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 740,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4038:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "timeStamp",
														"nameLocation": "4072:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4067:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nameLocation": "4103:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "4096:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 744,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "4096:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 746,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4132:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "4132:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4132:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3969:190:4"
											},
											{
												"expression": {
													"id": 750,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "4177:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 735,
												"id": 751,
												"nodeType": "Return",
												"src": "4170:12:4"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "3915:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3929:2:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3953:3:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 733,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "3953:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:5:4"
									},
									"scope": 892,
									"src": "3906:284:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "4247:460:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "amttosell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "4266:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 760,
																"name": "BnbToSafuu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "4279:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4266:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206265203120626e6220776f727468",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4291:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff",
																"typeString": "literal_string \"Must be 1 bnb worth\""
															},
															"value": "Must be 1 bnb worth"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_805943879b0bd129c562c68f3797ec807938277c533521b2f23d88d9d4c3a8ff",
																"typeString": "literal_string \"Must be 1 bnb worth\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4258:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "4258:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "Safuu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4338:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4345:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4345:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 771,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4365:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																		"typeString": "contract personalSafuuTrader"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																		"typeString": "contract personalSafuuTrader"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4357:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4357:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4357:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "amttosell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4372:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "4320:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$145_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4320:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "4320:62:4"
											},
											{
												"assignments": [
													777
												],
												"declarations": [
													{
														"constant": false,
														"id": 777,
														"mutability": "mutable",
														"name": "usdc",
														"nameLocation": "4425:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 800,
														"src": "4417:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4417:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"nodeType": "VariableDeclarationStatement",
												"src": "4417:12:4"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 779,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "4619:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 782,
																		"name": "getLatestPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "4634:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
																			"typeString": "function () view returns (int256)"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4634:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 780,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4626:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4626:25:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_10000000000_by_1",
																		"typeString": "int_const 10000000000"
																	},
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4654:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3130",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4658:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"src": "4654:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000_by_1",
																		"typeString": "int_const 10000000000"
																	}
																}
															],
															"id": 788,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4653:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000000000_by_1",
																"typeString": "int_const 10000000000"
															}
														},
														"src": "4626:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4619:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "4619:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 795,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4682:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4682:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4694:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 792,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4668:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "4668:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4668:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "4668:31:4"
											}
										]
									},
									"functionSelector": "ade87ecc",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellSafuu",
									"nameLocation": "4205:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amttosell",
												"nameLocation": "4223:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "4215:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:19:4"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:0:4"
									},
									"scope": 892,
									"src": "4196:511:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "4773:52:4",
										"statements": [
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 808,
														"name": "BnbToSafuu",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "4794:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 809,
														"name": "_newfactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "4807:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4794:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "4794:23:4"
											}
										]
									},
									"functionSelector": "817e9d31",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 806,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 805,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "4763:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4763:9:4"
										}
									],
									"name": "setFactor",
									"nameLocation": "4726:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "_newfactor",
												"nameLocation": "4744:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "4736:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4736:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4735:20:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4773:0:4"
									},
									"scope": 892,
									"src": "4717:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "4876:376:4",
										"statements": [
											{
												"assignments": [
													817,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5004:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 863,
														"src": "4999:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 816,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4999:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 829,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5060:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 818,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "5017:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5017:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5017:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 823,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5045:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																				"typeString": "contract personalSafuuTrader"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																				"typeString": "contract personalSafuuTrader"
																			}
																		],
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5037:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 821,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5037:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5037:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5037:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5017:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5017:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4998:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "5082:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204574686572",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5091:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															},
															"value": "Failed to send Ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
																"typeString": "literal_string \"Failed to send Ether\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5074:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5074:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "5074:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 838,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5140:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5140:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 844,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5173:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																				"typeString": "contract personalSafuuTrader"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																				"typeString": "contract personalSafuuTrader"
																			}
																		],
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5165:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 842,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5165:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5165:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 840,
																	"name": "Safuu",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "5149:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 84,
																"src": "5149:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5149:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 835,
															"name": "Safuu",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5125:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "5125:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "5125:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 852,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "5205:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5205:7:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 858,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5237:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																				"typeString": "contract personalSafuuTrader"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_personalSafuuTrader_$892",
																				"typeString": "contract personalSafuuTrader"
																			}
																		],
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5229:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 856,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5229:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5229:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 854,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "5214:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$145",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 84,
																"src": "5214:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5214:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 849,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "5191:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "5191:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5191:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "5191:53:4"
											}
										]
									},
									"functionSelector": "3cb40e16",
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToOwner",
									"nameLocation": "4840:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4855:2:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4876:0:4"
									},
									"scope": 892,
									"src": "4831:421:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 890,
										"nodeType": "Block",
										"src": "5401:125:4",
										"statements": [
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "5417:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 890,
														"src": "5412:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 876,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5412:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"arguments": [
														{
															"id": 880,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "5443:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5451:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 882,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5462:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 878,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "5424:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$145",
																"typeString": "contract IERC20"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "5424:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5424:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5412:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "5488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5494:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 885,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "5480:38:4"
											}
										]
									},
									"id": 891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "5267:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5302:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "5295:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$145",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 866,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 865,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 145,
														"src": "5295:6:4"
													},
													"referencedDeclaration": 145,
													"src": "5295:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$145",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5326:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "5318:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5351:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "5343:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5343:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5379:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "5371:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5371:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5284:108:4"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5401:0:4"
									},
									"scope": 892,
									"src": "5258:268:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 893,
							"src": "2576:2953:4",
							"usedErrors": []
						}
					],
					"src": "33:5498:4"
				},
				"id": 4
			}
		}
	}
}