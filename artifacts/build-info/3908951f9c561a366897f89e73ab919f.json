{
	"id": "3908951f9c561a366897f89e73ab919f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"WandAirdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT LICENSE\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\ncontract testAirDrop is Ownable{ \r\n\r\n    //TODO: Update airdropped balance of tUSDC \r\n    //mapping(address => uint256) public airdroppedBal;\r\n    struct btonsLocked {  \r\n        uint256 timeInit;  \r\n        uint256 amounts;  \r\n        }\r\n    struct airdropForTheWeek {  \r\n        address investerWallet;  \r\n        uint256 entitledAmt;  \r\n        }\r\n        \r\n    mapping(address => btonsLocked) public btonHoldings;\r\n    mapping(address => uint256) public airdroppedHistory;\r\n    mapping(uint256 => airdropForTheWeek) public toDistribute;\r\n\r\n    IERC20 public USDC;\r\n    IERC20 public Bton;\r\n\r\n    constructor() {\r\n        USDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B);\r\n        //Bton = IERC20(_btonAddr);\r\n        }\r\n\r\n   \r\n    function updateBtonHoldings(uint256 _amt) external {\r\n        btonHoldings[msg.sender].timeInit = block.timestamp;\r\n        btonHoldings[msg.sender].amounts = _amt;\r\n    }\r\n\r\n    function calcAirdropRate(uint256 totalBtons) public { //TODO: Make this internal and this has to be called in withdraw to update.\r\n       /* uint256 deltaTimeFromInit;\r\n        uint256 epochs;\r\n        uint256 airdropAmt;\r\n    deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit;\r\n    epochs = deltaTimeFromInit / 180; //test\r\n    airdropAmt = epochs *1;\r\n    airdroppedBal[msg.sender].amounts = airdropAmt;\r\n    */  \r\n    uint256 totalUSDC = 1000;\r\n    uint256 i;\r\n   \r\n    for (i = 0; i < 10; i++) {  //store into distribute ledger\r\n          toDistribute[i].entitledAmt = 50;\r\n            } \r\n    //return (totalUSDC/totalBtons);\r\n    \r\n    }\r\n    function withdrawAirDrop() public onlyOwner{ //withdraw everything\r\n        require (btonHoldings[msg.sender].amounts >0, \"You dont have anything\");\r\n        uint256 i;\r\n        for (i = 0; i < 10; i++) { //TODO: Update forloop \r\n        \r\n        //TODO: Transfer USDC from this to the account and update history\r\n        //usdc.transfer(toDistribute[i].investerWallet, toDistribute[i].entitledAmt);\r\n       \r\n        //airdroppedHistory[toDistribute[i].investerWallet] += toDistribute[i].entitledAmt;\r\n        //toDistribute[i].entitledAmt =0;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"WandAirdrop.sol": {
				"testAirDrop": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Bton",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "airdroppedHistory",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "btonHoldings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timeInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amounts",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "totalBtons",
									"type": "uint256"
								}
							],
							"name": "calcAirdropRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "toDistribute",
							"outputs": [
								{
									"internalType": "address",
									"name": "investerWallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "entitledAmt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amt",
									"type": "uint256"
								}
							],
							"name": "updateBtonHoldings",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAirDrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"WandAirdrop.sol\":119:2288  contract testAirDrop is Ownable{ \r... */\n  mstore(0x40, 0x80)\n    /* \"WandAirdrop.sol\":719:850  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"Ownable.sol\":933:945  _msgSender() */\n  tag_6\n    /* \"Ownable.sol\":933:943  _msgSender */\n  shl(0x20, tag_7)\n    /* \"Ownable.sol\":933:945  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"Ownable.sol\":914:932  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"WandAirdrop.sol\":758:800  0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B */\n  0xd7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b\n    /* \"WandAirdrop.sol\":744:748  USDC */\n  0x04\n  0x00\n    /* \"WandAirdrop.sol\":744:801  USDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandAirdrop.sol\":119:2288  contract testAirDrop is Ownable{ \r... */\n  jump(tag_10)\n    /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"Context.sol\":693:700  address */\n  0x00\n    /* \"Context.sol\":719:729  msg.sender */\n  caller\n    /* \"Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"Ownable.sol\":2336:2352  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2355:2361  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":2336:2361  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":2380:2388  newOwner */\n  dup2\n    /* \"Ownable.sol\":2371:2377  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":2371:2388  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":2434:2442  newOwner */\n  dup2\n    /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":2424:2432  oldOwner */\n  dup2\n    /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":2326:2450  {... */\n  pop\n    /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"WandAirdrop.sol\":119:2288  contract testAirDrop is Ownable{ \r... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"WandAirdrop.sol\":119:2288  contract testAirDrop is Ownable{ \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x77af3226\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x77af3226\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbeb400b1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd80044f5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x0eb96791\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2cbfe8d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4ca431ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x754fe93e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"WandAirdrop.sol\":601:658  mapping(uint256 => airdropForTheWeek) public toDistribute */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandAirdrop.sol\":1042:1708  function calcAirdropRate(uint256 totalBtons) public { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"WandAirdrop.sol\":542:594  mapping(address => uint256) public airdroppedHistory */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"WandAirdrop.sol\":692:710  IERC20 public Bton */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandAirdrop.sol\":1714:2279  function withdrawAirDrop() public onlyOwner{ //withdraw everything\r... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"WandAirdrop.sol\":667:685  IERC20 public USDC */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandAirdrop.sol\":484:535  mapping(address => btonsLocked) public btonHoldings */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandAirdrop.sol\":863:1034  function updateBtonHoldings(uint256 _amt) external {\r... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"WandAirdrop.sol\":601:658  mapping(uint256 => airdropForTheWeek) public toDistribute */\n    tag_18:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"WandAirdrop.sol\":1042:1708  function calcAirdropRate(uint256 totalBtons) public { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n    tag_23:\n        /* \"WandAirdrop.sol\":1486:1503  uint256 totalUSDC */\n      0x00\n        /* \"WandAirdrop.sol\":1506:1510  1000 */\n      0x03e8\n        /* \"WandAirdrop.sol\":1486:1510  uint256 totalUSDC = 1000 */\n      swap1\n      pop\n        /* \"WandAirdrop.sol\":1517:1526  uint256 i */\n      0x00\n        /* \"WandAirdrop.sol\":1538:1656  for (i = 0; i < 10; i++) {  //store into distribute ledger\r... */\n    tag_57:\n        /* \"WandAirdrop.sol\":1554:1556  10 */\n      0x0a\n        /* \"WandAirdrop.sol\":1550:1551  i */\n      dup2\n        /* \"WandAirdrop.sol\":1550:1556  i < 10 */\n      lt\n        /* \"WandAirdrop.sol\":1538:1656  for (i = 0; i < 10; i++) {  //store into distribute ledger\r... */\n      iszero\n      tag_58\n      jumpi\n        /* \"WandAirdrop.sol\":1638:1640  50 */\n      0x32\n        /* \"WandAirdrop.sol\":1608:1620  toDistribute */\n      0x03\n        /* \"WandAirdrop.sol\":1608:1623  toDistribute[i] */\n      0x00\n        /* \"WandAirdrop.sol\":1621:1622  i */\n      dup4\n        /* \"WandAirdrop.sol\":1608:1623  toDistribute[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":1608:1635  toDistribute[i].entitledAmt */\n      0x01\n      add\n        /* \"WandAirdrop.sol\":1608:1640  toDistribute[i].entitledAmt = 50 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":1558:1561  i++ */\n      dup1\n      dup1\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      swap2\n      pop\n      pop\n        /* \"WandAirdrop.sol\":1538:1656  for (i = 0; i < 10; i++) {  //store into distribute ledger\r... */\n      jump(tag_57)\n    tag_58:\n        /* \"WandAirdrop.sol\":1094:1708  { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n      pop\n      pop\n        /* \"WandAirdrop.sol\":1042:1708  function calcAirdropRate(uint256 totalBtons) public { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n      pop\n      jump\t// out\n        /* \"WandAirdrop.sol\":542:594  mapping(address => uint256) public airdroppedHistory */\n    tag_27:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_63\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_64\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_65\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_42\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_65:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      tag_70\n        /* \"Ownable.sol\":1752:1753  0 */\n      0x00\n        /* \"Ownable.sol\":1725:1743  _transferOwnership */\n      tag_71\n        /* \"Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_70:\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"WandAirdrop.sol\":692:710  IERC20 public Bton */\n    tag_33:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandAirdrop.sol\":1714:2279  function withdrawAirDrop() public onlyOwner{ //withdraw everything\r... */\n    tag_37:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_73\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_64\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_74\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_42\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_74:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_68\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"WandAirdrop.sol\":1833:1834  0 */\n      0x00\n        /* \"WandAirdrop.sol\":1799:1811  btonHoldings */\n      0x01\n        /* \"WandAirdrop.sol\":1799:1823  btonHoldings[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1812:1822  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":1799:1823  btonHoldings[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":1799:1831  btonHoldings[msg.sender].amounts */\n      0x01\n      add\n      sload\n        /* \"WandAirdrop.sol\":1799:1834  btonHoldings[msg.sender].amounts >0 */\n      gt\n        /* \"WandAirdrop.sol\":1790:1861  require (btonHoldings[msg.sender].amounts >0, \"You dont have anything\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"WandAirdrop.sol\":1872:1881  uint256 i */\n      0x00\n        /* \"WandAirdrop.sol\":1892:2270  for (i = 0; i < 10; i++) { //TODO: Update forloop \r... */\n    tag_81:\n        /* \"WandAirdrop.sol\":1908:1910  10 */\n      0x0a\n        /* \"WandAirdrop.sol\":1904:1905  i */\n      dup2\n        /* \"WandAirdrop.sol\":1904:1910  i < 10 */\n      lt\n        /* \"WandAirdrop.sol\":1892:2270  for (i = 0; i < 10; i++) { //TODO: Update forloop \r... */\n      iszero\n      tag_82\n      jumpi\n        /* \"WandAirdrop.sol\":1912:1915  i++ */\n      dup1\n      dup1\n      tag_84\n      swap1\n      tag_61\n      jump\t// in\n    tag_84:\n      swap2\n      pop\n      pop\n        /* \"WandAirdrop.sol\":1892:2270  for (i = 0; i < 10; i++) { //TODO: Update forloop \r... */\n      jump(tag_81)\n    tag_82:\n        /* \"WandAirdrop.sol\":1757:2279  { //withdraw everything\r... */\n      pop\n        /* \"WandAirdrop.sol\":1714:2279  function withdrawAirDrop() public onlyOwner{ //withdraw everything\r... */\n      jump\t// out\n        /* \"WandAirdrop.sol\":667:685  IERC20 public USDC */\n    tag_39:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"Ownable.sol\":1075:1082  address */\n      0x00\n        /* \"Ownable.sol\":1101:1107  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1094:1107  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"WandAirdrop.sol\":484:535  mapping(address => btonsLocked) public btonHoldings */\n    tag_47:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"WandAirdrop.sol\":863:1034  function updateBtonHoldings(uint256 _amt) external {\r... */\n    tag_52:\n        /* \"WandAirdrop.sol\":961:976  block.timestamp */\n      timestamp\n        /* \"WandAirdrop.sol\":925:937  btonHoldings */\n      0x01\n        /* \"WandAirdrop.sol\":925:949  btonHoldings[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":938:948  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":925:949  btonHoldings[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":925:958  btonHoldings[msg.sender].timeInit */\n      0x00\n      add\n        /* \"WandAirdrop.sol\":925:976  btonHoldings[msg.sender].timeInit = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":1022:1026  _amt */\n      dup1\n        /* \"WandAirdrop.sol\":987:999  btonHoldings */\n      0x01\n        /* \"WandAirdrop.sol\":987:1011  btonHoldings[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1000:1010  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":987:1011  btonHoldings[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":987:1019  btonHoldings[msg.sender].amounts */\n      0x01\n      add\n        /* \"WandAirdrop.sol\":987:1026  btonHoldings[msg.sender].amounts = _amt */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":863:1034  function updateBtonHoldings(uint256 _amt) external {\r... */\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_55:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_88\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_64\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_89\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_42\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_89:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_68\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"Ownable.sol\":2019:2020  0 */\n      0x00\n        /* \"Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1999:2007  newOwner */\n      dup2\n        /* \"Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      tag_96\n        /* \"Ownable.sol\":2093:2101  newOwner */\n      dup2\n        /* \"Ownable.sol\":2074:2092  _transferOwnership */\n      tag_71\n        /* \"Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_96:\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_71:\n        /* \"Ownable.sol\":2336:2352  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2355:2361  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2336:2361  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":2380:2388  newOwner */\n      dup2\n        /* \"Ownable.sol\":2371:2377  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":2371:2388  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":2434:2442  newOwner */\n      dup2\n        /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2424:2432  oldOwner */\n      dup2\n        /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":2326:2450  {... */\n      pop\n        /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_100:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_102\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_104:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_106\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_26:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":373:492   */\n    tag_109:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_112\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_100\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:961   */\n    tag_17:\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":740:742   */\n      0x20\n        /* \"#utility.yul\":728:737   */\n      dup3\n        /* \"#utility.yul\":719:726   */\n      dup5\n        /* \"#utility.yul\":715:738   */\n      sub\n        /* \"#utility.yul\":711:743   */\n      slt\n        /* \"#utility.yul\":708:827   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":746:825   */\n      tag_115\n      tag_111\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":708:827   */\n    tag_114:\n        /* \"#utility.yul\":866:867   */\n      0x00\n        /* \"#utility.yul\":891:944   */\n      tag_116\n        /* \"#utility.yul\":936:943   */\n      dup5\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup6\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_104\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":837:954   */\n      pop\n        /* \"#utility.yul\":632:961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1085   */\n    tag_117:\n        /* \"#utility.yul\":1054:1078   */\n      tag_119\n        /* \"#utility.yul\":1072:1077   */\n      dup2\n        /* \"#utility.yul\":1054:1078   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1049:1052   */\n      dup3\n        /* \"#utility.yul\":1042:1079   */\n      mstore\n        /* \"#utility.yul\":967:1085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1248   */\n    tag_121:\n        /* \"#utility.yul\":1191:1241   */\n      tag_123\n        /* \"#utility.yul\":1235:1240   */\n      dup2\n        /* \"#utility.yul\":1191:1241   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1186:1189   */\n      dup3\n        /* \"#utility.yul\":1179:1242   */\n      mstore\n        /* \"#utility.yul\":1091:1248   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1254:1620   */\n    tag_125:\n        /* \"#utility.yul\":1396:1399   */\n      0x00\n        /* \"#utility.yul\":1417:1484   */\n      tag_127\n        /* \"#utility.yul\":1481:1483   */\n      0x26\n        /* \"#utility.yul\":1476:1479   */\n      dup4\n        /* \"#utility.yul\":1417:1484   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1410:1484   */\n      swap2\n      pop\n        /* \"#utility.yul\":1493:1586   */\n      tag_129\n        /* \"#utility.yul\":1582:1585   */\n      dup3\n        /* \"#utility.yul\":1493:1586   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1611:1613   */\n      0x40\n        /* \"#utility.yul\":1606:1609   */\n      dup3\n        /* \"#utility.yul\":1602:1614   */\n      add\n        /* \"#utility.yul\":1595:1614   */\n      swap1\n      pop\n        /* \"#utility.yul\":1254:1620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1626:1992   */\n    tag_131:\n        /* \"#utility.yul\":1768:1771   */\n      0x00\n        /* \"#utility.yul\":1789:1856   */\n      tag_133\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1848:1851   */\n      dup4\n        /* \"#utility.yul\":1789:1856   */\n      tag_128\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":1782:1856   */\n      swap2\n      pop\n        /* \"#utility.yul\":1865:1958   */\n      tag_134\n        /* \"#utility.yul\":1954:1957   */\n      dup3\n        /* \"#utility.yul\":1865:1958   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1983:1985   */\n      0x20\n        /* \"#utility.yul\":1978:1981   */\n      dup3\n        /* \"#utility.yul\":1974:1986   */\n      add\n        /* \"#utility.yul\":1967:1986   */\n      swap1\n      pop\n        /* \"#utility.yul\":1626:1992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1998:2364   */\n    tag_136:\n        /* \"#utility.yul\":2140:2143   */\n      0x00\n        /* \"#utility.yul\":2161:2228   */\n      tag_138\n        /* \"#utility.yul\":2225:2227   */\n      0x16\n        /* \"#utility.yul\":2220:2223   */\n      dup4\n        /* \"#utility.yul\":2161:2228   */\n      tag_128\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2154:2228   */\n      swap2\n      pop\n        /* \"#utility.yul\":2237:2330   */\n      tag_139\n        /* \"#utility.yul\":2326:2329   */\n      dup3\n        /* \"#utility.yul\":2237:2330   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2355:2357   */\n      0x20\n        /* \"#utility.yul\":2350:2353   */\n      dup3\n        /* \"#utility.yul\":2346:2358   */\n      add\n        /* \"#utility.yul\":2339:2358   */\n      swap1\n      pop\n        /* \"#utility.yul\":1998:2364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2370:2488   */\n    tag_141:\n        /* \"#utility.yul\":2457:2481   */\n      tag_143\n        /* \"#utility.yul\":2475:2480   */\n      dup2\n        /* \"#utility.yul\":2457:2481   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2452:2455   */\n      dup3\n        /* \"#utility.yul\":2445:2482   */\n      mstore\n        /* \"#utility.yul\":2370:2488   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2494:2716   */\n    tag_44:\n        /* \"#utility.yul\":2587:2591   */\n      0x00\n        /* \"#utility.yul\":2625:2627   */\n      0x20\n        /* \"#utility.yul\":2614:2623   */\n      dup3\n        /* \"#utility.yul\":2610:2628   */\n      add\n        /* \"#utility.yul\":2602:2628   */\n      swap1\n      pop\n        /* \"#utility.yul\":2638:2709   */\n      tag_146\n        /* \"#utility.yul\":2706:2707   */\n      0x00\n        /* \"#utility.yul\":2695:2704   */\n      dup4\n        /* \"#utility.yul\":2691:2708   */\n      add\n        /* \"#utility.yul\":2682:2688   */\n      dup5\n        /* \"#utility.yul\":2638:2709   */\n      tag_117\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2494:2716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2722:3054   */\n    tag_20:\n        /* \"#utility.yul\":2843:2847   */\n      0x00\n        /* \"#utility.yul\":2881:2883   */\n      0x40\n        /* \"#utility.yul\":2870:2879   */\n      dup3\n        /* \"#utility.yul\":2866:2884   */\n      add\n        /* \"#utility.yul\":2858:2884   */\n      swap1\n      pop\n        /* \"#utility.yul\":2894:2965   */\n      tag_148\n        /* \"#utility.yul\":2962:2963   */\n      0x00\n        /* \"#utility.yul\":2951:2960   */\n      dup4\n        /* \"#utility.yul\":2947:2964   */\n      add\n        /* \"#utility.yul\":2938:2944   */\n      dup6\n        /* \"#utility.yul\":2894:2965   */\n      tag_117\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2975:3047   */\n      tag_149\n        /* \"#utility.yul\":3043:3045   */\n      0x20\n        /* \"#utility.yul\":3032:3041   */\n      dup4\n        /* \"#utility.yul\":3028:3046   */\n      add\n        /* \"#utility.yul\":3019:3025   */\n      dup5\n        /* \"#utility.yul\":2975:3047   */\n      tag_141\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2722:3054   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3060:3308   */\n    tag_35:\n        /* \"#utility.yul\":3166:3170   */\n      0x00\n        /* \"#utility.yul\":3204:3206   */\n      0x20\n        /* \"#utility.yul\":3193:3202   */\n      dup3\n        /* \"#utility.yul\":3189:3207   */\n      add\n        /* \"#utility.yul\":3181:3207   */\n      swap1\n      pop\n        /* \"#utility.yul\":3217:3301   */\n      tag_151\n        /* \"#utility.yul\":3298:3299   */\n      0x00\n        /* \"#utility.yul\":3287:3296   */\n      dup4\n        /* \"#utility.yul\":3283:3300   */\n      add\n        /* \"#utility.yul\":3274:3280   */\n      dup5\n        /* \"#utility.yul\":3217:3301   */\n      tag_121\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3060:3308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3314:3733   */\n    tag_95:\n        /* \"#utility.yul\":3480:3484   */\n      0x00\n        /* \"#utility.yul\":3518:3520   */\n      0x20\n        /* \"#utility.yul\":3507:3516   */\n      dup3\n        /* \"#utility.yul\":3503:3521   */\n      add\n        /* \"#utility.yul\":3495:3521   */\n      swap1\n      pop\n        /* \"#utility.yul\":3567:3576   */\n      dup2\n        /* \"#utility.yul\":3561:3565   */\n      dup2\n        /* \"#utility.yul\":3557:3577   */\n      sub\n        /* \"#utility.yul\":3553:3554   */\n      0x00\n        /* \"#utility.yul\":3542:3551   */\n      dup4\n        /* \"#utility.yul\":3538:3555   */\n      add\n        /* \"#utility.yul\":3531:3578   */\n      mstore\n        /* \"#utility.yul\":3595:3726   */\n      tag_153\n        /* \"#utility.yul\":3721:3725   */\n      dup2\n        /* \"#utility.yul\":3595:3726   */\n      tag_125\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":3587:3726   */\n      swap1\n      pop\n        /* \"#utility.yul\":3314:3733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3739:4158   */\n    tag_68:\n        /* \"#utility.yul\":3905:3909   */\n      0x00\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"#utility.yul\":3932:3941   */\n      dup3\n        /* \"#utility.yul\":3928:3946   */\n      add\n        /* \"#utility.yul\":3920:3946   */\n      swap1\n      pop\n        /* \"#utility.yul\":3992:4001   */\n      dup2\n        /* \"#utility.yul\":3986:3990   */\n      dup2\n        /* \"#utility.yul\":3982:4002   */\n      sub\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3967:3976   */\n      dup4\n        /* \"#utility.yul\":3963:3980   */\n      add\n        /* \"#utility.yul\":3956:4003   */\n      mstore\n        /* \"#utility.yul\":4020:4151   */\n      tag_155\n        /* \"#utility.yul\":4146:4150   */\n      dup2\n        /* \"#utility.yul\":4020:4151   */\n      tag_131\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4012:4151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3739:4158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4164:4583   */\n    tag_80:\n        /* \"#utility.yul\":4330:4334   */\n      0x00\n        /* \"#utility.yul\":4368:4370   */\n      0x20\n        /* \"#utility.yul\":4357:4366   */\n      dup3\n        /* \"#utility.yul\":4353:4371   */\n      add\n        /* \"#utility.yul\":4345:4371   */\n      swap1\n      pop\n        /* \"#utility.yul\":4417:4426   */\n      dup2\n        /* \"#utility.yul\":4411:4415   */\n      dup2\n        /* \"#utility.yul\":4407:4427   */\n      sub\n        /* \"#utility.yul\":4403:4404   */\n      0x00\n        /* \"#utility.yul\":4392:4401   */\n      dup4\n        /* \"#utility.yul\":4388:4405   */\n      add\n        /* \"#utility.yul\":4381:4428   */\n      mstore\n        /* \"#utility.yul\":4445:4576   */\n      tag_157\n        /* \"#utility.yul\":4571:4575   */\n      dup2\n        /* \"#utility.yul\":4445:4576   */\n      tag_136\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4437:4576   */\n      swap1\n      pop\n        /* \"#utility.yul\":4164:4583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4589:4811   */\n    tag_29:\n        /* \"#utility.yul\":4682:4686   */\n      0x00\n        /* \"#utility.yul\":4720:4722   */\n      0x20\n        /* \"#utility.yul\":4709:4718   */\n      dup3\n        /* \"#utility.yul\":4705:4723   */\n      add\n        /* \"#utility.yul\":4697:4723   */\n      swap1\n      pop\n        /* \"#utility.yul\":4733:4804   */\n      tag_159\n        /* \"#utility.yul\":4801:4802   */\n      0x00\n        /* \"#utility.yul\":4790:4799   */\n      dup4\n        /* \"#utility.yul\":4786:4803   */\n      add\n        /* \"#utility.yul\":4777:4783   */\n      dup5\n        /* \"#utility.yul\":4733:4804   */\n      tag_141\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4589:4811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4817:5149   */\n    tag_49:\n        /* \"#utility.yul\":4938:4942   */\n      0x00\n        /* \"#utility.yul\":4976:4978   */\n      0x40\n        /* \"#utility.yul\":4965:4974   */\n      dup3\n        /* \"#utility.yul\":4961:4979   */\n      add\n        /* \"#utility.yul\":4953:4979   */\n      swap1\n      pop\n        /* \"#utility.yul\":4989:5060   */\n      tag_161\n        /* \"#utility.yul\":5057:5058   */\n      0x00\n        /* \"#utility.yul\":5046:5055   */\n      dup4\n        /* \"#utility.yul\":5042:5059   */\n      add\n        /* \"#utility.yul\":5033:5039   */\n      dup6\n        /* \"#utility.yul\":4989:5060   */\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5070:5142   */\n      tag_162\n        /* \"#utility.yul\":5138:5140   */\n      0x20\n        /* \"#utility.yul\":5127:5136   */\n      dup4\n        /* \"#utility.yul\":5123:5141   */\n      add\n        /* \"#utility.yul\":5114:5120   */\n      dup5\n        /* \"#utility.yul\":5070:5142   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4817:5149   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5405   */\n    tag_128:\n        /* \"#utility.yul\":5320:5331   */\n      0x00\n        /* \"#utility.yul\":5354:5360   */\n      dup3\n        /* \"#utility.yul\":5349:5352   */\n      dup3\n        /* \"#utility.yul\":5342:5361   */\n      mstore\n        /* \"#utility.yul\":5394:5398   */\n      0x20\n        /* \"#utility.yul\":5389:5392   */\n      dup3\n        /* \"#utility.yul\":5385:5399   */\n      add\n        /* \"#utility.yul\":5370:5399   */\n      swap1\n      pop\n        /* \"#utility.yul\":5236:5405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5411:5507   */\n    tag_120:\n        /* \"#utility.yul\":5448:5455   */\n      0x00\n        /* \"#utility.yul\":5477:5501   */\n      tag_167\n        /* \"#utility.yul\":5495:5500   */\n      dup3\n        /* \"#utility.yul\":5477:5501   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5466:5501   */\n      swap1\n      pop\n        /* \"#utility.yul\":5411:5507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5513:5639   */\n    tag_168:\n        /* \"#utility.yul\":5550:5557   */\n      0x00\n        /* \"#utility.yul\":5590:5632   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5583:5588   */\n      dup3\n        /* \"#utility.yul\":5579:5633   */\n      and\n        /* \"#utility.yul\":5568:5633   */\n      swap1\n      pop\n        /* \"#utility.yul\":5513:5639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5645:5722   */\n    tag_144:\n        /* \"#utility.yul\":5682:5689   */\n      0x00\n        /* \"#utility.yul\":5711:5716   */\n      dup2\n        /* \"#utility.yul\":5700:5716   */\n      swap1\n      pop\n        /* \"#utility.yul\":5645:5722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5728:5867   */\n    tag_124:\n        /* \"#utility.yul\":5791:5800   */\n      0x00\n        /* \"#utility.yul\":5824:5861   */\n      tag_172\n        /* \"#utility.yul\":5855:5860   */\n      dup3\n        /* \"#utility.yul\":5824:5861   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5811:5861   */\n      swap1\n      pop\n        /* \"#utility.yul\":5728:5867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5873:5999   */\n    tag_173:\n        /* \"#utility.yul\":5923:5932   */\n      0x00\n        /* \"#utility.yul\":5956:5993   */\n      tag_175\n        /* \"#utility.yul\":5987:5992   */\n      dup3\n        /* \"#utility.yul\":5956:5993   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":5943:5993   */\n      swap1\n      pop\n        /* \"#utility.yul\":5873:5999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6005:6118   */\n    tag_176:\n        /* \"#utility.yul\":6055:6064   */\n      0x00\n        /* \"#utility.yul\":6088:6112   */\n      tag_178\n        /* \"#utility.yul\":6106:6111   */\n      dup3\n        /* \"#utility.yul\":6088:6112   */\n      tag_168\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6075:6112   */\n      swap1\n      pop\n        /* \"#utility.yul\":6005:6118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6357   */\n    tag_61:\n        /* \"#utility.yul\":6163:6166   */\n      0x00\n        /* \"#utility.yul\":6186:6210   */\n      tag_180\n        /* \"#utility.yul\":6204:6209   */\n      dup3\n        /* \"#utility.yul\":6186:6210   */\n      tag_144\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":6177:6210   */\n      swap2\n      pop\n        /* \"#utility.yul\":6232:6298   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6225:6230   */\n      dup3\n        /* \"#utility.yul\":6222:6299   */\n      eq\n        /* \"#utility.yul\":6219:6322   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":6302:6320   */\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6219:6322   */\n    tag_181:\n        /* \"#utility.yul\":6349:6350   */\n      0x01\n        /* \"#utility.yul\":6342:6347   */\n      dup3\n        /* \"#utility.yul\":6338:6351   */\n      add\n        /* \"#utility.yul\":6331:6351   */\n      swap1\n      pop\n        /* \"#utility.yul\":6124:6357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6363:6543   */\n    tag_183:\n        /* \"#utility.yul\":6411:6488   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6408:6409   */\n      0x00\n        /* \"#utility.yul\":6401:6489   */\n      mstore\n        /* \"#utility.yul\":6508:6512   */\n      0x11\n        /* \"#utility.yul\":6505:6506   */\n      0x04\n        /* \"#utility.yul\":6498:6513   */\n      mstore\n        /* \"#utility.yul\":6532:6536   */\n      0x24\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6522:6537   */\n      revert\n        /* \"#utility.yul\":6672:6789   */\n    tag_111:\n        /* \"#utility.yul\":6781:6782   */\n      0x00\n        /* \"#utility.yul\":6778:6779   */\n      dup1\n        /* \"#utility.yul\":6771:6783   */\n      revert\n        /* \"#utility.yul\":6795:7020   */\n    tag_130:\n        /* \"#utility.yul\":6935:6969   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6931:6932   */\n      0x00\n        /* \"#utility.yul\":6923:6929   */\n      dup3\n        /* \"#utility.yul\":6919:6933   */\n      add\n        /* \"#utility.yul\":6912:6970   */\n      mstore\n        /* \"#utility.yul\":7004:7012   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6999:7001   */\n      0x20\n        /* \"#utility.yul\":6991:6997   */\n      dup3\n        /* \"#utility.yul\":6987:7002   */\n      add\n        /* \"#utility.yul\":6980:7013   */\n      mstore\n        /* \"#utility.yul\":6795:7020   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7208   */\n    tag_135:\n        /* \"#utility.yul\":7166:7200   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7154:7160   */\n      dup3\n        /* \"#utility.yul\":7150:7164   */\n      add\n        /* \"#utility.yul\":7143:7201   */\n      mstore\n        /* \"#utility.yul\":7026:7208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7214:7386   */\n    tag_140:\n        /* \"#utility.yul\":7354:7378   */\n      0x596f7520646f6e74206861766520616e797468696e6700000000000000000000\n        /* \"#utility.yul\":7350:7351   */\n      0x00\n        /* \"#utility.yul\":7342:7348   */\n      dup3\n        /* \"#utility.yul\":7338:7352   */\n      add\n        /* \"#utility.yul\":7331:7379   */\n      mstore\n        /* \"#utility.yul\":7214:7386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7392:7514   */\n    tag_103:\n        /* \"#utility.yul\":7465:7489   */\n      tag_192\n        /* \"#utility.yul\":7483:7488   */\n      dup2\n        /* \"#utility.yul\":7465:7489   */\n      tag_120\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7458:7463   */\n      dup2\n        /* \"#utility.yul\":7455:7490   */\n      eq\n        /* \"#utility.yul\":7445:7508   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":7504:7505   */\n      0x00\n        /* \"#utility.yul\":7501:7502   */\n      dup1\n        /* \"#utility.yul\":7494:7506   */\n      revert\n        /* \"#utility.yul\":7445:7508   */\n    tag_193:\n        /* \"#utility.yul\":7392:7514   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7520:7642   */\n    tag_107:\n        /* \"#utility.yul\":7593:7617   */\n      tag_195\n        /* \"#utility.yul\":7611:7616   */\n      dup2\n        /* \"#utility.yul\":7593:7617   */\n      tag_144\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7586:7591   */\n      dup2\n        /* \"#utility.yul\":7583:7618   */\n      eq\n        /* \"#utility.yul\":7573:7636   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":7632:7633   */\n      0x00\n        /* \"#utility.yul\":7629:7630   */\n      dup1\n        /* \"#utility.yul\":7622:7634   */\n      revert\n        /* \"#utility.yul\":7573:7636   */\n    tag_196:\n        /* \"#utility.yul\":7520:7642   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220517042dd94e22deee02dcc7d6f81628c10c88d6e3e030253a7b27fdb6d770d2b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 135,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_203": {
									"entryPoint": 143,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261008760201b60201c565b61008f60201b60201c565b73d7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610153565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610b60806101626000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806377af32261161007157806377af32261461015357806389a302711461015d5780638da5cb5b1461017b578063beb400b114610199578063d80044f5146101ca578063f2fde38b146101e6576100a9565b80630eb96791146100ae5780632cbfe8d9146100df5780634ca431ab146100fb578063715018a61461012b578063754fe93e14610135575b600080fd5b6100c860048036038101906100c39190610795565b610202565b6040516100d6929190610873565b60405180910390f35b6100f960048036038101906100f49190610795565b610246565b005b61011560048036038101906101109190610768565b61028d565b6040516101229190610917565b60405180910390f35b6101336102a5565b005b61013d61032d565b60405161014a919061089c565b60405180910390f35b61015b610353565b005b610165610476565b604051610172919061089c565b60405180910390f35b61018361049c565b6040516101909190610858565b60405180910390f35b6101b360048036038101906101ae9190610768565b6104c5565b6040516101c1929190610932565b60405180910390f35b6101e460048036038101906101df9190610795565b6104e9565b005b61020060048036038101906101fb9190610768565b61057a565b005b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60006103e8905060005b600a81101561028857603260036000838152602001908152602001600020600101819055508080610280906109de565b915050610250565b505050565b60026020528060005260406000206000915090505481565b6102ad610672565b73ffffffffffffffffffffffffffffffffffffffff166102cb61049c565b73ffffffffffffffffffffffffffffffffffffffff1614610321576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610318906108d7565b60405180910390fd5b61032b600061067a565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61035b610672565b73ffffffffffffffffffffffffffffffffffffffff1661037961049c565b73ffffffffffffffffffffffffffffffffffffffff16146103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c6906108d7565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b906108f7565b60405180910390fd5b60005b600a81101561047357808061046b906109de565b915050610457565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010154905082565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b610582610672565b73ffffffffffffffffffffffffffffffffffffffff166105a061049c565b73ffffffffffffffffffffffffffffffffffffffff16146105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed906108d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d906108b7565b60405180910390fd5b61066f8161067a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061074d81610afc565b92915050565b60008135905061076281610b13565b92915050565b60006020828403121561077e5761077d610a56565b5b600061078c8482850161073e565b91505092915050565b6000602082840312156107ab576107aa610a56565b5b60006107b984828501610753565b91505092915050565b6107cb8161096c565b82525050565b6107da816109a8565b82525050565b60006107ed60268361095b565b91506107f882610a5b565b604082019050919050565b600061081060208361095b565b915061081b82610aaa565b602082019050919050565b600061083360168361095b565b915061083e82610ad3565b602082019050919050565b6108528161099e565b82525050565b600060208201905061086d60008301846107c2565b92915050565b600060408201905061088860008301856107c2565b6108956020830184610849565b9392505050565b60006020820190506108b160008301846107d1565b92915050565b600060208201905081810360008301526108d0816107e0565b9050919050565b600060208201905081810360008301526108f081610803565b9050919050565b6000602082019050818103600083015261091081610826565b9050919050565b600060208201905061092c6000830184610849565b92915050565b60006040820190506109476000830185610849565b6109546020830184610849565b9392505050565b600082825260208201905092915050565b60006109778261097e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109b3826109ba565b9050919050565b60006109c5826109cc565b9050919050565b60006109d78261097e565b9050919050565b60006109e98261099e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1c57610a1b610a27565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520646f6e74206861766520616e797468696e6700000000000000000000600082015250565b610b058161096c565b8114610b1057600080fd5b50565b610b1c8161099e565b8114610b2757600080fd5b5056fea2646970667358221220517042dd94e22deee02dcc7d6f81628c10c88d6e3e030253a7b27fdb6d770d2b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x87 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x8F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xD7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x153 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB60 DUP1 PUSH2 0x162 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77AF3226 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x77AF3226 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xBEB400B1 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xD80044F5 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xEB96791 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2CBFE8D9 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x4CA431AB EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x754FE93E EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP3 SWAP2 SWAP1 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x2A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP3 SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x32 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x280 SWAP1 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x250 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CB PUSH2 0x49C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x318 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32B PUSH1 0x0 PUSH2 0x67A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x379 PUSH2 0x49C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C6 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x473 JUMPI DUP1 DUP1 PUSH2 0x46B SWAP1 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x457 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x582 PUSH2 0x672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A0 PUSH2 0x49C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP1 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x67A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x762 DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH2 0x77D PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP5 DUP3 DUP6 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP5 DUP3 DUP6 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x96C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7DA DUP2 PUSH2 0x9A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED PUSH1 0x26 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP2 POP PUSH2 0x7F8 DUP3 PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 PUSH1 0x20 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP2 POP PUSH2 0x81B DUP3 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x833 PUSH1 0x16 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP2 POP PUSH2 0x83E DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x852 DUP2 PUSH2 0x99E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x888 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x895 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x849 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D0 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F0 DUP2 PUSH2 0x803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x910 DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x947 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x954 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x849 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x977 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP3 PUSH2 0x9BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP3 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D7 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E9 DUP3 PUSH2 0x99E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0xA27 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E74206861766520616E797468696E6700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP2 EQ PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0x99E JUMP JUMPDEST DUP2 EQ PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH17 0x42DD94E22DEEE02DCC7D6F81628C10C88D PUSH15 0x3E030253A7B27FDB6D770D2B64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "119:2169:3:-:0;;;719:131;;;;;;;;;;914:32:2;933:12;:10;;;:12;;:::i;:::-;914:18;;;:32;;:::i;:::-;758:42:3;744:4;;:57;;;;;;;;;;;;;;;;;;119:2169;;640:96:0;693:7;719:10;712:17;;640:96;:::o;2263:187:2:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;119:2169:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Bton_240": {
									"entryPoint": 813,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_237": {
									"entryPoint": 1142,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 1650,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_203": {
									"entryPoint": 1658,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdroppedHistory_229": {
									"entryPoint": 653,
									"id": 229,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@btonHoldings_225": {
									"entryPoint": 1221,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAirdropRate_305": {
									"entryPoint": 582,
									"id": 305,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_132": {
									"entryPoint": 1180,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_160": {
									"entryPoint": 677,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toDistribute_234": {
									"entryPoint": 514,
									"id": 234,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_183": {
									"entryPoint": 1402,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateBtonHoldings_273": {
									"entryPoint": 1257,
									"id": 273,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawAirDrop_337": {
									"entryPoint": 851,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack": {
									"entryPoint": 2001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$99__to_t_address__fromStack_reversed": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$99_to_t_address": {
									"entryPoint": 2472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7645:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "744:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "746:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "746:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "746:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "719:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "728:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:32:4"
															},
															"nodeType": "YulIf",
															"src": "708:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "837:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "852:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "856:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "668:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "679:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "691:6:4",
														"type": ""
													}
												],
												"src": "632:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1032:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1072:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1054:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1054:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1042:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1020:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1027:3:4",
														"type": ""
													}
												],
												"src": "967:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1169:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1186:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1235:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$99_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1191:43:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:50:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:63:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1179:63:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1157:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1164:3:4",
														"type": ""
													}
												],
												"src": "1091:157:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1400:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1410:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1476:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1481:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1417:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1582:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1493:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1493:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1595:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1606:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1595:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1388:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1396:3:4",
														"type": ""
													}
												],
												"src": "1254:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1772:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1782:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1848:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1853:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1789:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1782:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1865:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1865:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1967:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1978:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1974:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1974:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1967:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1760:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1768:3:4",
														"type": ""
													}
												],
												"src": "1626:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2144:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2154:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2220:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2161:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2154:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
																	"nodeType": "YulIdentifier",
																	"src": "2237:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2339:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2350:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2355:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2346:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2132:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2140:3:4",
														"type": ""
													}
												],
												"src": "1998:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2475:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2457:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2445:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2423:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2430:3:4",
														"type": ""
													}
												],
												"src": "2370:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2592:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2602:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2614:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2625:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2610:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2610:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2602:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2682:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2695:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2706:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2691:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2638:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2638:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2564:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2576:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2587:4:4",
														"type": ""
													}
												],
												"src": "2494:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2870:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2866:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2858:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2938:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2951:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2962:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2947:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2947:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2894:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2894:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3019:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3032:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3043:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3028:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3028:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2975:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2975:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2975:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2812:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2824:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2832:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2843:4:4",
														"type": ""
													}
												],
												"src": "2722:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:137:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3193:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3204:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3189:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3189:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3181:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3274:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3287:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3298:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3217:56:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:84:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:84:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$99__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3143:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3155:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3166:4:4",
														"type": ""
													}
												],
												"src": "3060:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3485:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3495:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3507:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3518:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3503:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3495:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3553:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3538:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3538:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3561:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3567:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3531:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3531:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3587:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3721:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3595:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3587:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3465:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3480:4:4",
														"type": ""
													}
												],
												"src": "3314:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3910:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3920:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3928:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3928:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3920:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3967:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3978:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3986:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3982:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3982:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3956:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3956:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4012:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4146:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4020:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4012:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3890:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3905:4:4",
														"type": ""
													}
												],
												"src": "3739:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4335:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4345:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4357:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4368:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4353:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4345:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4392:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4403:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4411:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4417:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4407:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4407:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4381:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4381:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4437:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4571:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4445:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4445:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4437:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4315:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4330:4:4",
														"type": ""
													}
												],
												"src": "4164:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4687:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4697:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4709:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4720:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4705:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4705:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4697:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4777:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4790:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4801:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4786:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4786:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4733:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4733:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4733:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4659:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4671:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4682:4:4",
														"type": ""
													}
												],
												"src": "4589:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4943:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4953:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4965:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4976:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4961:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4961:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4953:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5057:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5042:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4989:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5114:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5127:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5138:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5123:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5123:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5070:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5070:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4907:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4919:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4927:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4938:4:4",
														"type": ""
													}
												],
												"src": "4817:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5195:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5205:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5221:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5215:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5205:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5188:6:4",
														"type": ""
													}
												],
												"src": "5155:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5332:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5349:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5354:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5342:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5342:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5342:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5370:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5389:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5385:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5370:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5304:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5309:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5320:11:4",
														"type": ""
													}
												],
												"src": "5236:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5495:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5477:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5477:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5466:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5438:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5448:7:4",
														"type": ""
													}
												],
												"src": "5411:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5558:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5568:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5583:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5590:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5568:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5540:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5550:7:4",
														"type": ""
													}
												],
												"src": "5513:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5700:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5711:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5700:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5672:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5682:7:4",
														"type": ""
													}
												],
												"src": "5645:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5801:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5811:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5855:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5824:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5824:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5811:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$99_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5781:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5791:9:4",
														"type": ""
													}
												],
												"src": "5728:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5933:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5943:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5987:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5956:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5956:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5943:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5913:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5923:9:4",
														"type": ""
													}
												],
												"src": "5873:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6065:53:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6075:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6106:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6088:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6088:24:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6075:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6045:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6055:9:4",
														"type": ""
													}
												],
												"src": "6005:113:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6167:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6177:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6204:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6186:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6186:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6177:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6300:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6302:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6302:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6302:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6225:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6232:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6222:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:77:4"
															},
															"nodeType": "YulIf",
															"src": "6219:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6331:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6342:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6349:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6338:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6338:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6331:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6153:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6163:3:4",
														"type": ""
													}
												],
												"src": "6124:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6391:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6408:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6411:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6401:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6401:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6401:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6505:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6508:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6498:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6498:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6498:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6529:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6532:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6522:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6363:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6638:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6655:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6648:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6648:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6648:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6549:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6761:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6778:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6672:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6901:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6923:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6931:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6935:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6912:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6912:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6991:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6999:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6987:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6987:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7004:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6980:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6980:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6980:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6893:6:4",
														"type": ""
													}
												],
												"src": "6795:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7132:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7154:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7162:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7150:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7166:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7143:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7124:6:4",
														"type": ""
													}
												],
												"src": "7026:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7320:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7342:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7350:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7338:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7338:14:4"
																	},
																	{
																		"hexValue": "596f7520646f6e74206861766520616e797468696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7354:24:4",
																		"type": "",
																		"value": "You dont have anything"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7331:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7312:6:4",
														"type": ""
													}
												],
												"src": "7214:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7435:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7492:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7501:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7504:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7494:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7494:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7494:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7458:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7483:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7465:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7465:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7455:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7455:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7448:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:43:4"
															},
															"nodeType": "YulIf",
															"src": "7445:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7428:5:4",
														"type": ""
													}
												],
												"src": "7392:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7563:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7620:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7629:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7632:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7622:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7622:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7622:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7586:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7611:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7593:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7593:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7583:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7583:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7576:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:43:4"
															},
															"nodeType": "YulIf",
															"src": "7573:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7556:5:4",
														"type": ""
													}
												],
												"src": "7520:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$99_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$99__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$99_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"You dont have anything\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c806377af32261161007157806377af32261461015357806389a302711461015d5780638da5cb5b1461017b578063beb400b114610199578063d80044f5146101ca578063f2fde38b146101e6576100a9565b80630eb96791146100ae5780632cbfe8d9146100df5780634ca431ab146100fb578063715018a61461012b578063754fe93e14610135575b600080fd5b6100c860048036038101906100c39190610795565b610202565b6040516100d6929190610873565b60405180910390f35b6100f960048036038101906100f49190610795565b610246565b005b61011560048036038101906101109190610768565b61028d565b6040516101229190610917565b60405180910390f35b6101336102a5565b005b61013d61032d565b60405161014a919061089c565b60405180910390f35b61015b610353565b005b610165610476565b604051610172919061089c565b60405180910390f35b61018361049c565b6040516101909190610858565b60405180910390f35b6101b360048036038101906101ae9190610768565b6104c5565b6040516101c1929190610932565b60405180910390f35b6101e460048036038101906101df9190610795565b6104e9565b005b61020060048036038101906101fb9190610768565b61057a565b005b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60006103e8905060005b600a81101561028857603260036000838152602001908152602001600020600101819055508080610280906109de565b915050610250565b505050565b60026020528060005260406000206000915090505481565b6102ad610672565b73ffffffffffffffffffffffffffffffffffffffff166102cb61049c565b73ffffffffffffffffffffffffffffffffffffffff1614610321576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610318906108d7565b60405180910390fd5b61032b600061067a565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61035b610672565b73ffffffffffffffffffffffffffffffffffffffff1661037961049c565b73ffffffffffffffffffffffffffffffffffffffff16146103cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c6906108d7565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411610454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044b906108f7565b60405180910390fd5b60005b600a81101561047357808061046b906109de565b915050610457565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010154905082565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b610582610672565b73ffffffffffffffffffffffffffffffffffffffff166105a061049c565b73ffffffffffffffffffffffffffffffffffffffff16146105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed906108d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d906108b7565b60405180910390fd5b61066f8161067a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061074d81610afc565b92915050565b60008135905061076281610b13565b92915050565b60006020828403121561077e5761077d610a56565b5b600061078c8482850161073e565b91505092915050565b6000602082840312156107ab576107aa610a56565b5b60006107b984828501610753565b91505092915050565b6107cb8161096c565b82525050565b6107da816109a8565b82525050565b60006107ed60268361095b565b91506107f882610a5b565b604082019050919050565b600061081060208361095b565b915061081b82610aaa565b602082019050919050565b600061083360168361095b565b915061083e82610ad3565b602082019050919050565b6108528161099e565b82525050565b600060208201905061086d60008301846107c2565b92915050565b600060408201905061088860008301856107c2565b6108956020830184610849565b9392505050565b60006020820190506108b160008301846107d1565b92915050565b600060208201905081810360008301526108d0816107e0565b9050919050565b600060208201905081810360008301526108f081610803565b9050919050565b6000602082019050818103600083015261091081610826565b9050919050565b600060208201905061092c6000830184610849565b92915050565b60006040820190506109476000830185610849565b6109546020830184610849565b9392505050565b600082825260208201905092915050565b60006109778261097e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109b3826109ba565b9050919050565b60006109c5826109cc565b9050919050565b60006109d78261097e565b9050919050565b60006109e98261099e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1c57610a1b610a27565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520646f6e74206861766520616e797468696e6700000000000000000000600082015250565b610b058161096c565b8114610b1057600080fd5b50565b610b1c8161099e565b8114610b2757600080fd5b5056fea2646970667358221220517042dd94e22deee02dcc7d6f81628c10c88d6e3e030253a7b27fdb6d770d2b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77AF3226 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x77AF3226 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xBEB400B1 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xD80044F5 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E6 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0xEB96791 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2CBFE8D9 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x4CA431AB EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x754FE93E EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x202 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD6 SWAP3 SWAP2 SWAP1 PUSH2 0x873 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x115 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x133 PUSH2 0x2A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP3 SWAP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x768 JUMP JUMPDEST PUSH2 0x57A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x32 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x280 SWAP1 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x250 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CB PUSH2 0x49C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x318 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x32B PUSH1 0x0 PUSH2 0x67A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x379 PUSH2 0x49C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C6 SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x454 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44B SWAP1 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x473 JUMPI DUP1 DUP1 PUSH2 0x46B SWAP1 PUSH2 0x9DE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x457 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x582 PUSH2 0x672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5A0 PUSH2 0x49C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5ED SWAP1 PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP1 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x66F DUP2 PUSH2 0x67A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x74D DUP2 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x762 DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH2 0x77D PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x78C DUP5 DUP3 DUP6 ADD PUSH2 0x73E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0xA56 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B9 DUP5 DUP3 DUP6 ADD PUSH2 0x753 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x96C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x7DA DUP2 PUSH2 0x9A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ED PUSH1 0x26 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP2 POP PUSH2 0x7F8 DUP3 PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 PUSH1 0x20 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP2 POP PUSH2 0x81B DUP3 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x833 PUSH1 0x16 DUP4 PUSH2 0x95B JUMP JUMPDEST SWAP2 POP PUSH2 0x83E DUP3 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x852 DUP2 PUSH2 0x99E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x888 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x895 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x849 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8D0 DUP2 PUSH2 0x7E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8F0 DUP2 PUSH2 0x803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x910 DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x92C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x947 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x849 JUMP JUMPDEST PUSH2 0x954 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x849 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x977 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B3 DUP3 PUSH2 0x9BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP3 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D7 DUP3 PUSH2 0x97E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E9 DUP3 PUSH2 0x99E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0xA27 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E74206861766520616E797468696E6700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0x96C JUMP JUMPDEST DUP2 EQ PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0x99E JUMP JUMPDEST DUP2 EQ PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD PUSH17 0x42DD94E22DEEE02DCC7D6F81628C10C88D PUSH15 0x3E030253A7B27FDB6D770D2B64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "119:2169:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1042:666;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;542:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1661:101:2;;;:::i;:::-;;692:18:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1714:565;;;:::i;:::-;;667:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:51:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;863:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1911:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;601:57:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1042:666::-;1486:17;1506:4;1486:24;;1517:9;1538:118;1554:2;1550:1;:6;1538:118;;;1638:2;1608:12;:15;1621:1;1608:15;;;;;;;;;;;:27;;:32;;;;1558:3;;;;;:::i;:::-;;;;1538:118;;;1094:614;;1042:666;:::o;542:52::-;;;;;;;;;;;;;;;;;:::o;1661:101:2:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1725:30:::1;1752:1;1725:18;:30::i;:::-;1661:101::o:0;692:18:3:-;;;;;;;;;;;;;:::o;1714:565::-;1252:12:2;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1833:1:3::1;1799:12;:24;1812:10;1799:24;;;;;;;;;;;;;;;:32;;;:35;1790:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;1872:9;1892:378;1908:2;1904:1;:6;1892:378;;;1912:3;;;;;:::i;:::-;;;;1892:378;;;1757:522;1714:565::o:0;667:18::-;;;;;;;;;;;;;:::o;1029:85:2:-;1075:7;1101:6;;;;;;;;;;;1094:13;;1029:85;:::o;484:51:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;863:171::-;961:15;925:12;:24;938:10;925:24;;;;;;;;;;;;;;;:33;;:51;;;;1022:4;987:12;:24;1000:10;987:24;;;;;;;;;;;;;;;:32;;:39;;;;863:171;:::o;1911:198:2:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:1:::1;1999:22;;:8;:22;;;;1991:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2074:28;2093:8;2074:18;:28::i;:::-;1911:198:::0;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;2263:187:2:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:::-;691:6;740:2;728:9;719:7;715:23;711:32;708:119;;;746:79;;:::i;:::-;708:119;866:1;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;837:117;632:329;;;;:::o;967:118::-;1054:24;1072:5;1054:24;:::i;:::-;1049:3;1042:37;967:118;;:::o;1091:157::-;1191:50;1235:5;1191:50;:::i;:::-;1186:3;1179:63;1091:157;;:::o;1254:366::-;1396:3;1417:67;1481:2;1476:3;1417:67;:::i;:::-;1410:74;;1493:93;1582:3;1493:93;:::i;:::-;1611:2;1606:3;1602:12;1595:19;;1254:366;;;:::o;1626:::-;1768:3;1789:67;1853:2;1848:3;1789:67;:::i;:::-;1782:74;;1865:93;1954:3;1865:93;:::i;:::-;1983:2;1978:3;1974:12;1967:19;;1626:366;;;:::o;1998:::-;2140:3;2161:67;2225:2;2220:3;2161:67;:::i;:::-;2154:74;;2237:93;2326:3;2237:93;:::i;:::-;2355:2;2350:3;2346:12;2339:19;;1998:366;;;:::o;2370:118::-;2457:24;2475:5;2457:24;:::i;:::-;2452:3;2445:37;2370:118;;:::o;2494:222::-;2587:4;2625:2;2614:9;2610:18;2602:26;;2638:71;2706:1;2695:9;2691:17;2682:6;2638:71;:::i;:::-;2494:222;;;;:::o;2722:332::-;2843:4;2881:2;2870:9;2866:18;2858:26;;2894:71;2962:1;2951:9;2947:17;2938:6;2894:71;:::i;:::-;2975:72;3043:2;3032:9;3028:18;3019:6;2975:72;:::i;:::-;2722:332;;;;;:::o;3060:248::-;3166:4;3204:2;3193:9;3189:18;3181:26;;3217:84;3298:1;3287:9;3283:17;3274:6;3217:84;:::i;:::-;3060:248;;;;:::o;3314:419::-;3480:4;3518:2;3507:9;3503:18;3495:26;;3567:9;3561:4;3557:20;3553:1;3542:9;3538:17;3531:47;3595:131;3721:4;3595:131;:::i;:::-;3587:139;;3314:419;;;:::o;3739:::-;3905:4;3943:2;3932:9;3928:18;3920:26;;3992:9;3986:4;3982:20;3978:1;3967:9;3963:17;3956:47;4020:131;4146:4;4020:131;:::i;:::-;4012:139;;3739:419;;;:::o;4164:::-;4330:4;4368:2;4357:9;4353:18;4345:26;;4417:9;4411:4;4407:20;4403:1;4392:9;4388:17;4381:47;4445:131;4571:4;4445:131;:::i;:::-;4437:139;;4164:419;;;:::o;4589:222::-;4682:4;4720:2;4709:9;4705:18;4697:26;;4733:71;4801:1;4790:9;4786:17;4777:6;4733:71;:::i;:::-;4589:222;;;;:::o;4817:332::-;4938:4;4976:2;4965:9;4961:18;4953:26;;4989:71;5057:1;5046:9;5042:17;5033:6;4989:71;:::i;:::-;5070:72;5138:2;5127:9;5123:18;5114:6;5070:72;:::i;:::-;4817:332;;;;;:::o;5236:169::-;5320:11;5354:6;5349:3;5342:19;5394:4;5389:3;5385:14;5370:29;;5236:169;;;;:::o;5411:96::-;5448:7;5477:24;5495:5;5477:24;:::i;:::-;5466:35;;5411:96;;;:::o;5513:126::-;5550:7;5590:42;5583:5;5579:54;5568:65;;5513:126;;;:::o;5645:77::-;5682:7;5711:5;5700:16;;5645:77;;;:::o;5728:139::-;5791:9;5824:37;5855:5;5824:37;:::i;:::-;5811:50;;5728:139;;;:::o;5873:126::-;5923:9;5956:37;5987:5;5956:37;:::i;:::-;5943:50;;5873:126;;;:::o;6005:113::-;6055:9;6088:24;6106:5;6088:24;:::i;:::-;6075:37;;6005:113;;;:::o;6124:233::-;6163:3;6186:24;6204:5;6186:24;:::i;:::-;6177:33;;6232:66;6225:5;6222:77;6219:103;;;6302:18;;:::i;:::-;6219:103;6349:1;6342:5;6338:13;6331:20;;6124:233;;;:::o;6363:180::-;6411:77;6408:1;6401:88;6508:4;6505:1;6498:15;6532:4;6529:1;6522:15;6672:117;6781:1;6778;6771:12;6795:225;6935:34;6931:1;6923:6;6919:14;6912:58;7004:8;6999:2;6991:6;6987:15;6980:33;6795:225;:::o;7026:182::-;7166:34;7162:1;7154:6;7150:14;7143:58;7026:182;:::o;7214:172::-;7354:24;7350:1;7342:6;7338:14;7331:48;7214:172;:::o;7392:122::-;7465:24;7483:5;7465:24;:::i;:::-;7458:5;7455:35;7445:63;;7504:1;7501;7494:12;7445:63;7392:122;:::o;7520:::-;7593:24;7611:5;7593:24;:::i;:::-;7586:5;7583:35;7573:63;;7632:1;7629;7622:12;7573:63;7520:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "582400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Bton()": "2689",
								"USDC()": "2622",
								"airdroppedHistory(address)": "2859",
								"btonHoldings(address)": "infinite",
								"calcAirdropRate(uint256)": "infinite",
								"owner()": "2566",
								"renounceOwnership()": "30441",
								"toDistribute(uint256)": "infinite",
								"transferOwnership(address)": "30833",
								"updateBtonHoldings(uint256)": "44911",
								"withdrawAirDrop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 719,
									"end": 850,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 850,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 719,
									"end": 850,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 719,
									"end": 850,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 758,
									"end": 800,
									"name": "PUSH",
									"source": 3,
									"value": "D7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B"
								},
								{
									"begin": 744,
									"end": 748,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 744,
									"end": 748,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 744,
									"end": 801,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 744,
									"end": 801,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2380,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2434,
									"end": 2442,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2424,
									"end": 2432,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2326,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 2288,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220517042dd94e22deee02dcc7d6f81628c10c88d6e3e030253a7b27fdb6d770d2b64736f6c63430008070033",
									".code": [
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "77AF3226"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "77AF3226"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "89A30271"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "BEB400B1"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "D80044F5"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "EB96791"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "2CBFE8D9"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "4CA431AB"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "754FE93E"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 119,
											"end": 2288,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 692,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 484,
											"end": 535,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 601,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 601,
											"end": 658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 601,
											"end": 658,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1503,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1510,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 1486,
											"end": 1510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1550,
											"end": 1551,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1556,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1640,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1608,
											"end": 1620,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1608,
											"end": 1640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1538,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1708,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 542,
											"end": 594,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 692,
											"end": 710,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1823,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1834,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1790,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1892,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1714,
											"end": 2279,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 667,
											"end": 685,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 484,
											"end": 535,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 961,
											"end": 976,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 925,
											"end": 937,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 948,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 925,
											"end": 949,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 949,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 925,
											"end": 958,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 958,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 925,
											"end": 976,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 925,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 925,
											"end": 976,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 925,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 999,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1010,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 1011,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1019,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 987,
											"end": 1019,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1026,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 863,
											"end": 1034,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 719,
											"end": 726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 715,
											"end": 738,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 711,
											"end": 743,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1248,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1091,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1235,
											"end": 1240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1191,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1191,
											"end": 1241,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1241,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1191,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1189,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1248,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1254,
											"end": 1620,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1254,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1481,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1417,
											"end": 1484,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1484,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1417,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1484,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1582,
											"end": 1585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1493,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1493,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1493,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1620,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1620,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1620,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1626,
											"end": 1992,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1626,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1768,
											"end": 1771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1851,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1789,
											"end": 1856,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1856,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1789,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1865,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1865,
											"end": 1958,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1958,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1865,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1985,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 1981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1992,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2161,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2154,
											"end": 2228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2326,
											"end": 2329,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2237,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2364,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2488,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2370,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2475,
											"end": 2480,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2457,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2370,
											"end": 2488,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2627,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2706,
											"end": 2707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2704,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2638,
											"end": 2709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2638,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2638,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2716,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2843,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2883,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 2964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2894,
											"end": 2965,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 2965,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2894,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3043,
											"end": 3045,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3046,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2975,
											"end": 3047,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2975,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2975,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 3054,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3204,
											"end": 3206,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3181,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3298,
											"end": 3299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3283,
											"end": 3300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3280,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3217,
											"end": 3301,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3217,
											"end": 3301,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3217,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3060,
											"end": 3308,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3314,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3314,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3480,
											"end": 3484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3507,
											"end": 3516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3561,
											"end": 3565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3577,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3531,
											"end": 3578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3721,
											"end": 3725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3595,
											"end": 3726,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3726,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3595,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3587,
											"end": 3726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3739,
											"end": 4158,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3739,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 3946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3920,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4001,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 3990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4002,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 3980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3956,
											"end": 4003,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4020,
											"end": 4151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4151,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4020,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4012,
											"end": 4151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4012,
											"end": 4151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 4158,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4164,
											"end": 4583,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4164,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4334,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4366,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4428,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4571,
											"end": 4575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4445,
											"end": 4576,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4445,
											"end": 4576,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 4445,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4164,
											"end": 4583,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4705,
											"end": 4723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4697,
											"end": 4723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4697,
											"end": 4723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4801,
											"end": 4802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4799,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 4803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4733,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4733,
											"end": 4804,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4733,
											"end": 4804,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 4733,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4811,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4978,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 4974,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4961,
											"end": 4979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 4979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 4979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 5057,
											"end": 5058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5055,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5042,
											"end": 5059,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4989,
											"end": 5060,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4989,
											"end": 5060,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4989,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5127,
											"end": 5136,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5070,
											"end": 5142,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5070,
											"end": 5142,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5070,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4817,
											"end": 5149,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5360,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5349,
											"end": 5352,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5389,
											"end": 5392,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5385,
											"end": 5399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5370,
											"end": 5399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5370,
											"end": 5399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5236,
											"end": 5405,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5411,
											"end": 5507,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5411,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5495,
											"end": 5500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5477,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5477,
											"end": 5501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5477,
											"end": 5501,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5477,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5466,
											"end": 5501,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5507,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5513,
											"end": 5639,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5513,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5550,
											"end": 5557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5639,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5645,
											"end": 5722,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5645,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5700,
											"end": 5716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5700,
											"end": 5716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5722,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5791,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5824,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5855,
											"end": 5860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5824,
											"end": 5861,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5824,
											"end": 5861,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5824,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5867,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 5999,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5873,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5923,
											"end": 5932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5956,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5956,
											"end": 5993,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5956,
											"end": 5993,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5956,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5999,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6005,
											"end": 6118,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6005,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6106,
											"end": 6111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 6088,
											"end": 6112,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6088,
											"end": 6112,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6088,
											"end": 6112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6075,
											"end": 6112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6005,
											"end": 6118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6005,
											"end": 6118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6005,
											"end": 6118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6005,
											"end": 6118,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6124,
											"end": 6357,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6124,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6163,
											"end": 6166,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6177,
											"end": 6210,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6177,
											"end": 6210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6232,
											"end": 6298,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6225,
											"end": 6230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6299,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6322,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6219,
											"end": 6322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6322,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6219,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6350,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6342,
											"end": 6347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6351,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6331,
											"end": 6351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6331,
											"end": 6351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6124,
											"end": 6357,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6363,
											"end": 6543,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6363,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6488,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6489,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6512,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6505,
											"end": 6506,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6513,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6532,
											"end": 6536,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6537,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6789,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 6672,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 7020,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6795,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 6969,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6931,
											"end": 6932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6923,
											"end": 6929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6919,
											"end": 6933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 6970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7012,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6999,
											"end": 7001,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6980,
											"end": 7013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 7020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6795,
											"end": 7020,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7026,
											"end": 7208,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 7026,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7166,
											"end": 7200,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7154,
											"end": 7160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7026,
											"end": 7208,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7214,
											"end": 7386,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7214,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7354,
											"end": 7378,
											"name": "PUSH",
											"source": 4,
											"value": "596F7520646F6E74206861766520616E797468696E6700000000000000000000"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7338,
											"end": 7352,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7331,
											"end": 7379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7214,
											"end": 7386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7214,
											"end": 7386,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7392,
											"end": 7514,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 7392,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7465,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 7465,
											"end": 7489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7465,
											"end": 7489,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7465,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7463,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7490,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7506,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7445,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7392,
											"end": 7514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7392,
											"end": 7514,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7520,
											"end": 7642,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 7520,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7611,
											"end": 7616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7593,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7618,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7573,
											"end": 7636,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7634,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7636,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7573,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7642,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Bton()": "754fe93e",
							"USDC()": "89a30271",
							"airdroppedHistory(address)": "4ca431ab",
							"btonHoldings(address)": "beb400b1",
							"calcAirdropRate(uint256)": "2cbfe8d9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"toDistribute(uint256)": "0eb96791",
							"transferOwnership(address)": "f2fde38b",
							"updateBtonHoldings(uint256)": "d80044f5",
							"withdrawAirDrop()": "77af3226"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Bton\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"btonHoldings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBtons\",\"type\":\"uint256\"}],\"name\":\"calcAirdropRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"toDistribute\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"investerWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entitledAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"updateBtonHoldings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WandAirdrop.sol\":\"testAirDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"WandAirdrop.sol\":{\"keccak256\":\"0xd7652ac74ab7fcc6bff0bb403f41797f34ad13bb9757482233aa358c2283881b\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://d265d320cb92a2065eceab41b2775f536e84436a74288543d87ac1bf9438cdbf\",\"dweb:/ipfs/QmVYFrKE3k6emkbaPAVMM6zGu4KBwQS6ESZUNygr8yk7rh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> WandAirdrop.sol:38:30:\n   |\n38 |     function calcAirdropRate(uint256 totalBtons) public { //TODO: Make this internal and this has to be called in withdraw to update.\n   |                              ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1085,
					"file": "WandAirdrop.sol",
					"start": 1067
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> WandAirdrop.sol:47:5:\n   |\n47 |     uint256 totalUSDC = 1000;\n   |     ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1503,
					"file": "WandAirdrop.sol",
					"start": 1486
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> WandAirdrop.sol:56:5:\n   |\n56 |     function withdrawAirDrop() public onlyOwner{ //withdraw everything\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 2279,
					"file": "WandAirdrop.sol",
					"start": 1714
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20",
							"nameLocation": "197:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "327:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:1"
									},
									"scope": 99,
									"src": "281:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:1"
									},
									"scope": 99,
									"src": "419:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "725:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "744:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 99,
									"src": "707:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1078:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1093:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1133:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:1"
									},
									"scope": 99,
									"src": "1059:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1812:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1829:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:1"
									},
									"scope": 99,
									"src": "1795:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2207:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2231:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2258:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2297:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:1"
									},
									"scope": 99,
									"src": "2176:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 89,
									"name": "Transfer",
									"nameLocation": "2478:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2487:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2509:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2529:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:1"
									},
									"src": "2472:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 98,
									"name": "Approval",
									"nameLocation": "2709:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2718:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2741:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2766:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:1"
									},
									"src": "2703:78:1"
								}
							],
							"scope": 100,
							"src": "187:2596:1",
							"usedErrors": []
						}
					],
					"src": "91:2693:1"
				},
				"id": 1
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 22,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 104,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "661:7:2"
									},
									"id": 105,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 103,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204,
								21
							],
							"name": "Ownable",
							"nameLocation": "650:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 204,
									"src": "675:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 106,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 113,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "731:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "762:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:2"
									},
									"src": "704:84:2"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "904:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 118,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "933:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "914:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "914:32:2"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:2"
									},
									"scope": 204,
									"src": "890:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1084:30:2",
										"statements": [
											{
												"expression": {
													"id": 129,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "1101:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "1094:13:2"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:2"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 204,
									"src": "1029:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1223:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 136,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "1241:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 138,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1252:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:2"
											},
											{
												"id": 144,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 146,
									"name": "onlyOwner",
									"nameLocation": "1211:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:2"
									},
									"src": "1202:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1715:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1752:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1744:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1744:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1725:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1725:30:2"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1325:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1705:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1670:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:2"
									},
									"scope": 204,
									"src": "1661:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1981:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 169,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "1999:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2019:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 170,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1991:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2093:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 178,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2074:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2074:28:2"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1768:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 165,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1971:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1971:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1920:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1946:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1938:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:2"
									},
									"scope": 204,
									"src": "1911:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2326:124:2",
										"statements": [
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2344:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "2336:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"id": 191,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "2355:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:25:2"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2371:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 194,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2380:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2371:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2371:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 198,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2424:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2434:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2403:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2398:45:2"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2115:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2272:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2299:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2291:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:18:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:2"
									},
									"scope": 204,
									"src": "2263:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 205,
							"src": "632:1820:2",
							"usedErrors": []
						}
					],
					"src": "87:2366:2"
				},
				"id": 2
			},
			"WandAirdrop.sol": {
				"ast": {
					"absolutePath": "WandAirdrop.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"IERC20": [
							99
						],
						"Ownable": [
							204
						],
						"testAirDrop": [
							338
						]
					},
					"id": 339,
					"license": "MIT LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 100,
							"src": "68:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 208,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 205,
							"src": "92:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 209,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 204,
										"src": "143:7:3"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "143:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 338,
							"linearizedBaseContracts": [
								338,
								204,
								21
							],
							"name": "testAirDrop",
							"nameLocation": "128:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "testAirDrop.btonsLocked",
									"id": 215,
									"members": [
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "timeInit",
											"nameLocation": "306:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "298:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "298:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "335:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "327:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 213,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "327:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "btonsLocked",
									"nameLocation": "273:11:3",
									"nodeType": "StructDefinition",
									"scope": 338,
									"src": "266:90:3",
									"visibility": "public"
								},
								{
									"canonicalName": "testAirDrop.airdropForTheWeek",
									"id": 220,
									"members": [
										{
											"constant": false,
											"id": 217,
											"mutability": "mutable",
											"name": "investerWallet",
											"nameLocation": "408:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 220,
											"src": "400:22:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 216,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "400:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 219,
											"mutability": "mutable",
											"name": "entitledAmt",
											"nameLocation": "443:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 220,
											"src": "435:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 218,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "435:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "airdropForTheWeek",
									"nameLocation": "369:17:3",
									"nodeType": "StructDefinition",
									"scope": 338,
									"src": "362:106:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "beb400b1",
									"id": 225,
									"mutability": "mutable",
									"name": "btonHoldings",
									"nameLocation": "523:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "484:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
										"typeString": "mapping(address => struct testAirDrop.btonsLocked)"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 221,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "492:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "484:31:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
											"typeString": "mapping(address => struct testAirDrop.btonsLocked)"
										},
										"valueType": {
											"id": 223,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 222,
												"name": "btonsLocked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "503:11:3"
											},
											"referencedDeclaration": 215,
											"src": "503:11:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_btonsLocked_$215_storage_ptr",
												"typeString": "struct testAirDrop.btonsLocked"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ca431ab",
									"id": 229,
									"mutability": "mutable",
									"name": "airdroppedHistory",
									"nameLocation": "577:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "542:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 228,
										"keyType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "550:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "542:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 227,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0eb96791",
									"id": 234,
									"mutability": "mutable",
									"name": "toDistribute",
									"nameLocation": "646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "601:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_airdropForTheWeek_$220_storage_$",
										"typeString": "mapping(uint256 => struct testAirDrop.airdropForTheWeek)"
									},
									"typeName": {
										"id": 233,
										"keyType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "609:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "601:37:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_airdropForTheWeek_$220_storage_$",
											"typeString": "mapping(uint256 => struct testAirDrop.airdropForTheWeek)"
										},
										"valueType": {
											"id": 232,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 231,
												"name": "airdropForTheWeek",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 220,
												"src": "620:17:3"
											},
											"referencedDeclaration": 220,
											"src": "620:17:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_airdropForTheWeek_$220_storage_ptr",
												"typeString": "struct testAirDrop.airdropForTheWeek"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 237,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "681:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "667:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$99",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 236,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 235,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 99,
											"src": "667:6:3"
										},
										"referencedDeclaration": 99,
										"src": "667:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "754fe93e",
									"id": 240,
									"mutability": "mutable",
									"name": "Bton",
									"nameLocation": "706:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "692:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$99",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 239,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 238,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 99,
											"src": "692:6:3"
										},
										"referencedDeclaration": 99,
										"src": "692:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "733:117:3",
										"statements": [
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 243,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "744:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307844374143643261394644313539453639426231303241316361323143396133653341354637373142",
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "758:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 244,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "751:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "751:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														}
													},
													"src": "744:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "744:57:3"
											}
										]
									},
									"id": 250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:3"
									},
									"scope": 338,
									"src": "719:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "914:120:3",
										"statements": [
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 255,
																"name": "btonHoldings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "925:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																	"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																}
															},
															"id": 258,
															"indexExpression": {
																"expression": {
																	"id": 256,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "938:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "938:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "925:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																"typeString": "struct testAirDrop.btonsLocked storage ref"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeInit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "925:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 260,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "961:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "961:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "925:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "925:51:3"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 264,
																"name": "btonHoldings",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "987:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																	"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																}
															},
															"id": 267,
															"indexExpression": {
																"expression": {
																	"id": 265,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1000:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1000:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "987:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																"typeString": "struct testAirDrop.btonsLocked storage ref"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "987:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "_amt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "1022:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "987:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "987:39:3"
											}
										]
									},
									"functionSelector": "d80044f5",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateBtonHoldings",
									"nameLocation": "872:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_amt",
												"nameLocation": "899:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "891:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:14:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "914:0:3"
									},
									"scope": 338,
									"src": "863:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1094:614:3",
										"statements": [
											{
												"assignments": [
													279
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "totalUSDC",
														"nameLocation": "1494:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "1486:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 278,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1486:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 281,
												"initialValue": {
													"hexValue": "31303030",
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1506:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000_by_1",
														"typeString": "int_const 1000"
													},
													"value": "1000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1486:24:3"
											},
											{
												"assignments": [
													283
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "1525:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "1517:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 282,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 284,
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:9:3"
											},
											{
												"body": {
													"id": 302,
													"nodeType": "Block",
													"src": "1563:93:3",
													"statements": [
														{
															"expression": {
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 295,
																			"name": "toDistribute",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1608:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_airdropForTheWeek_$220_storage_$",
																				"typeString": "mapping(uint256 => struct testAirDrop.airdropForTheWeek storage ref)"
																			}
																		},
																		"id": 297,
																		"indexExpression": {
																			"id": 296,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1621:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1608:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_airdropForTheWeek_$220_storage",
																			"typeString": "struct testAirDrop.airdropForTheWeek storage ref"
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "entitledAmt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 219,
																	"src": "1608:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "3530",
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1638:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"src": "1608:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 301,
															"nodeType": "ExpressionStatement",
															"src": "1608:32:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 289,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "1550:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1554:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1550:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 303,
												"initializationExpression": {
													"expression": {
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 285,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1543:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1547:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1543:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 288,
													"nodeType": "ExpressionStatement",
													"src": "1543:5:3"
												},
												"loopExpression": {
													"expression": {
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1558:3:3",
														"subExpression": {
															"id": 292,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1558:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 294,
													"nodeType": "ExpressionStatement",
													"src": "1558:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1538:118:3"
											}
										]
									},
									"functionSelector": "2cbfe8d9",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAirdropRate",
									"nameLocation": "1051:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "totalBtons",
												"nameLocation": "1075:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1067:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:20:3"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1094:0:3"
									},
									"scope": 338,
									"src": "1042:666:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "1757:522:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 311,
																		"name": "btonHoldings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "1799:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																			"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																		}
																	},
																	"id": 314,
																	"indexExpression": {
																		"expression": {
																			"id": 312,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1812:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1812:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1799:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																		"typeString": "struct testAirDrop.btonsLocked storage ref"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amounts",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 214,
																"src": "1799:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1833:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1799:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e74206861766520616e797468696e67",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1836:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
																"typeString": "literal_string \"You dont have anything\""
															},
															"value": "You dont have anything"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
																"typeString": "literal_string \"You dont have anything\""
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1790:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1790:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "1790:71:3"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "i",
														"nameLocation": "1880:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "1872:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1872:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"nodeType": "VariableDeclarationStatement",
												"src": "1872:9:3"
											},
											{
												"body": {
													"id": 334,
													"nodeType": "Block",
													"src": "1917:353:3",
													"statements": []
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 328,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1904:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1908:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1904:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 335,
												"initializationExpression": {
													"expression": {
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 324,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "1897:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"hexValue": "30",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1901:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1897:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 327,
													"nodeType": "ExpressionStatement",
													"src": "1897:5:3"
												},
												"loopExpression": {
													"expression": {
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1912:3:3",
														"subExpression": {
															"id": 331,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "1912:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 333,
													"nodeType": "ExpressionStatement",
													"src": "1912:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1892:378:3"
											}
										]
									},
									"functionSelector": "77af3226",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 307,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1748:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1748:9:3"
										}
									],
									"name": "withdrawAirDrop",
									"nameLocation": "1723:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1738:2:3"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1757:0:3"
									},
									"scope": 338,
									"src": "1714:565:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 339,
							"src": "119:2169:3",
							"usedErrors": []
						}
					],
					"src": "41:2249:3"
				},
				"id": 3
			}
		}
	}
}