{
	"id": "b974618b3cbd018f0656722818515aa9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"RebaseAirdrop.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ncontract testRebase { \r\n\r\n    //TODO: Update airdropped balance of tUSDC \r\n    //mapping(address => uint256) public airdroppedBal;\r\n    //uint256 public timeLaunched;\r\n    //uint256 deltaTimeFromInit;\r\n    struct btonsLocked {  \r\n        uint256 timeInit;  \r\n        uint256 amounts;  \r\n        }\r\n    mapping(address => btonsLocked) public airdroppedBal;\r\n\r\n    constructor() {\r\n        \r\n        }\r\n\r\n   \r\n    function startAirDrop() public\r\n    {\r\n        airdroppedBal[msg.sender].timeInit = block.timestamp;\r\n     //TODO: Check amount of BTON Held\r\n\r\n    }\r\n    //TODO: Calculate airdrop per 3 min\r\n\r\n    function calcAirdrop() public {\r\n        uint256 deltaTimeFromInit;\r\n        uint256 epochs;\r\n        uint256 airdropAmt;\r\n    deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit;\r\n    epochs = deltaTimeFromInit / 180;\r\n    airdropAmt = epochs *1;\r\n    airdroppedBal[msg.sender].amounts = airdropAmt;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RebaseAirdrop.sol": {
				"testRebase": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "airdroppedBal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timeInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amounts",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calcAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirDrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RebaseAirdrop.sol\":55:1004  contract testRebase { \r... */\n  mstore(0x40, 0x80)\n    /* \"RebaseAirdrop.sol\":418:454  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RebaseAirdrop.sol\":55:1004  contract testRebase { \r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RebaseAirdrop.sol\":55:1004  contract testRebase { \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02699df8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x283a1e16\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa87c70fa\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RebaseAirdrop.sol\":665:995  function calcAirdrop() public {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"RebaseAirdrop.sol\":467:616  function startAirDrop() public\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"RebaseAirdrop.sol\":357:409  mapping(address => btonsLocked) public airdroppedBal */\n    tag_5:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":665:995  function calcAirdrop() public {\r... */\n    tag_7:\n        /* \"RebaseAirdrop.sol\":706:731  uint256 deltaTimeFromInit */\n      0x00\n        /* \"RebaseAirdrop.sol\":742:756  uint256 epochs */\n      dup1\n        /* \"RebaseAirdrop.sol\":767:785  uint256 airdropAmt */\n      0x00\n        /* \"RebaseAirdrop.sol\":830:843  airdroppedBal */\n      dup1\n        /* \"RebaseAirdrop.sol\":830:855  airdroppedBal[msg.sender] */\n      0x00\n        /* \"RebaseAirdrop.sol\":844:854  msg.sender */\n      caller\n        /* \"RebaseAirdrop.sol\":830:855  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RebaseAirdrop.sol\":830:864  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n      sload\n        /* \"RebaseAirdrop.sol\":812:827  block.timestamp */\n      timestamp\n        /* \"RebaseAirdrop.sol\":812:864  block.timestamp - airdroppedBal[msg.sender].timeInit */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"RebaseAirdrop.sol\":792:864  deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit */\n      swap3\n      pop\n        /* \"RebaseAirdrop.sol\":900:903  180 */\n      0xb4\n        /* \"RebaseAirdrop.sol\":880:897  deltaTimeFromInit */\n      dup4\n        /* \"RebaseAirdrop.sol\":880:903  deltaTimeFromInit / 180 */\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"RebaseAirdrop.sol\":871:903  epochs = deltaTimeFromInit / 180 */\n      swap2\n      pop\n        /* \"RebaseAirdrop.sol\":931:932  1 */\n      0x01\n        /* \"RebaseAirdrop.sol\":923:929  epochs */\n      dup3\n        /* \"RebaseAirdrop.sol\":923:932  epochs *1 */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"RebaseAirdrop.sol\":910:932  airdropAmt = epochs *1 */\n      swap1\n      pop\n        /* \"RebaseAirdrop.sol\":975:985  airdropAmt */\n      dup1\n        /* \"RebaseAirdrop.sol\":939:952  airdroppedBal */\n      0x00\n        /* \"RebaseAirdrop.sol\":939:964  airdroppedBal[msg.sender] */\n      dup1\n        /* \"RebaseAirdrop.sol\":953:963  msg.sender */\n      caller\n        /* \"RebaseAirdrop.sol\":939:964  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RebaseAirdrop.sol\":939:972  airdroppedBal[msg.sender].amounts */\n      0x01\n      add\n        /* \"RebaseAirdrop.sol\":939:985  airdroppedBal[msg.sender].amounts = airdropAmt */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RebaseAirdrop.sol\":695:995  {\r... */\n      pop\n      pop\n      pop\n        /* \"RebaseAirdrop.sol\":665:995  function calcAirdrop() public {\r... */\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":467:616  function startAirDrop() public\r... */\n    tag_9:\n        /* \"RebaseAirdrop.sol\":551:566  block.timestamp */\n      timestamp\n        /* \"RebaseAirdrop.sol\":514:527  airdroppedBal */\n      0x00\n        /* \"RebaseAirdrop.sol\":514:539  airdroppedBal[msg.sender] */\n      dup1\n        /* \"RebaseAirdrop.sol\":528:538  msg.sender */\n      caller\n        /* \"RebaseAirdrop.sol\":514:539  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RebaseAirdrop.sol\":514:548  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n        /* \"RebaseAirdrop.sol\":514:566  airdroppedBal[msg.sender].timeInit = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RebaseAirdrop.sol\":467:616  function startAirDrop() public\r... */\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":357:409  mapping(address => btonsLocked) public airdroppedBal */\n    tag_13:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_25:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_27\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_12:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":228:347   */\n    tag_30:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_33\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_25\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_34:\n        /* \"#utility.yul\":574:598   */\n      tag_36\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:943   */\n    tag_15:\n        /* \"#utility.yul\":732:736   */\n      0x00\n        /* \"#utility.yul\":770:772   */\n      0x40\n        /* \"#utility.yul\":759:768   */\n      dup3\n        /* \"#utility.yul\":755:773   */\n      add\n        /* \"#utility.yul\":747:773   */\n      swap1\n      pop\n        /* \"#utility.yul\":783:854   */\n      tag_39\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":840:849   */\n      dup4\n        /* \"#utility.yul\":836:853   */\n      add\n        /* \"#utility.yul\":827:833   */\n      dup6\n        /* \"#utility.yul\":783:854   */\n      tag_34\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":864:936   */\n      tag_40\n        /* \"#utility.yul\":932:934   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup4\n        /* \"#utility.yul\":917:935   */\n      add\n        /* \"#utility.yul\":908:914   */\n      dup5\n        /* \"#utility.yul\":864:936   */\n      tag_34\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":611:943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1215   */\n    tag_20:\n        /* \"#utility.yul\":1070:1071   */\n      0x00\n        /* \"#utility.yul\":1087:1107   */\n      tag_44\n        /* \"#utility.yul\":1105:1106   */\n      dup3\n        /* \"#utility.yul\":1087:1107   */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1082:1107   */\n      swap2\n      pop\n        /* \"#utility.yul\":1121:1141   */\n      tag_45\n        /* \"#utility.yul\":1139:1140   */\n      dup4\n        /* \"#utility.yul\":1121:1141   */\n      tag_37\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1116:1141   */\n      swap3\n      pop\n        /* \"#utility.yul\":1160:1161   */\n      dup3\n        /* \"#utility.yul\":1150:1185   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1165:1183   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1150:1185   */\n    tag_46:\n        /* \"#utility.yul\":1207:1208   */\n      dup3\n        /* \"#utility.yul\":1204:1205   */\n      dup3\n        /* \"#utility.yul\":1200:1209   */\n      div\n        /* \"#utility.yul\":1195:1209   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1221:1569   */\n    tag_22:\n        /* \"#utility.yul\":1261:1268   */\n      0x00\n        /* \"#utility.yul\":1284:1304   */\n      tag_50\n        /* \"#utility.yul\":1302:1303   */\n      dup3\n        /* \"#utility.yul\":1284:1304   */\n      tag_37\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1279:1304   */\n      swap2\n      pop\n        /* \"#utility.yul\":1318:1338   */\n      tag_51\n        /* \"#utility.yul\":1336:1337   */\n      dup4\n        /* \"#utility.yul\":1318:1338   */\n      tag_37\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1313:1338   */\n      swap3\n      pop\n        /* \"#utility.yul\":1506:1507   */\n      dup2\n        /* \"#utility.yul\":1438:1504   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1434:1508   */\n      div\n        /* \"#utility.yul\":1431:1432   */\n      dup4\n        /* \"#utility.yul\":1428:1509   */\n      gt\n        /* \"#utility.yul\":1423:1424   */\n      dup3\n        /* \"#utility.yul\":1416:1425   */\n      iszero\n        /* \"#utility.yul\":1409:1426   */\n      iszero\n        /* \"#utility.yul\":1405:1510   */\n      and\n        /* \"#utility.yul\":1402:1533   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1513:1531   */\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1402:1533   */\n    tag_52:\n        /* \"#utility.yul\":1561:1562   */\n      dup3\n        /* \"#utility.yul\":1558:1559   */\n      dup3\n        /* \"#utility.yul\":1554:1563   */\n      mul\n        /* \"#utility.yul\":1543:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1221:1569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1766   */\n    tag_18:\n        /* \"#utility.yul\":1615:1619   */\n      0x00\n        /* \"#utility.yul\":1635:1655   */\n      tag_56\n        /* \"#utility.yul\":1653:1654   */\n      dup3\n        /* \"#utility.yul\":1635:1655   */\n      tag_37\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1630:1655   */\n      swap2\n      pop\n        /* \"#utility.yul\":1669:1689   */\n      tag_57\n        /* \"#utility.yul\":1687:1688   */\n      dup4\n        /* \"#utility.yul\":1669:1689   */\n      tag_37\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1664:1689   */\n      swap3\n      pop\n        /* \"#utility.yul\":1708:1709   */\n      dup3\n        /* \"#utility.yul\":1705:1706   */\n      dup3\n        /* \"#utility.yul\":1702:1710   */\n      lt\n        /* \"#utility.yul\":1699:1733   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":1713:1731   */\n      tag_59\n      tag_54\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1699:1733   */\n    tag_58:\n        /* \"#utility.yul\":1758:1759   */\n      dup3\n        /* \"#utility.yul\":1755:1756   */\n      dup3\n        /* \"#utility.yul\":1751:1760   */\n      sub\n        /* \"#utility.yul\":1743:1760   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1868   */\n    tag_60:\n        /* \"#utility.yul\":1809:1816   */\n      0x00\n        /* \"#utility.yul\":1838:1862   */\n      tag_62\n        /* \"#utility.yul\":1856:1861   */\n      dup3\n        /* \"#utility.yul\":1838:1862   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1827:1862   */\n      swap1\n      pop\n        /* \"#utility.yul\":1772:1868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2000   */\n    tag_63:\n        /* \"#utility.yul\":1911:1918   */\n      0x00\n        /* \"#utility.yul\":1951:1993   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1944:1949   */\n      dup3\n        /* \"#utility.yul\":1940:1994   */\n      and\n        /* \"#utility.yul\":1929:1994   */\n      swap1\n      pop\n        /* \"#utility.yul\":1874:2000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2006:2083   */\n    tag_37:\n        /* \"#utility.yul\":2043:2050   */\n      0x00\n        /* \"#utility.yul\":2072:2077   */\n      dup2\n        /* \"#utility.yul\":2061:2077   */\n      swap1\n      pop\n        /* \"#utility.yul\":2006:2083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2089:2269   */\n    tag_54:\n        /* \"#utility.yul\":2137:2214   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2127:2215   */\n      mstore\n        /* \"#utility.yul\":2234:2238   */\n      0x11\n        /* \"#utility.yul\":2231:2232   */\n      0x04\n        /* \"#utility.yul\":2224:2239   */\n      mstore\n        /* \"#utility.yul\":2258:2262   */\n      0x24\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2248:2263   */\n      revert\n        /* \"#utility.yul\":2275:2455   */\n    tag_48:\n        /* \"#utility.yul\":2323:2400   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2320:2321   */\n      0x00\n        /* \"#utility.yul\":2313:2401   */\n      mstore\n        /* \"#utility.yul\":2420:2424   */\n      0x12\n        /* \"#utility.yul\":2417:2418   */\n      0x04\n        /* \"#utility.yul\":2410:2425   */\n      mstore\n        /* \"#utility.yul\":2444:2448   */\n      0x24\n        /* \"#utility.yul\":2441:2442   */\n      0x00\n        /* \"#utility.yul\":2434:2449   */\n      revert\n        /* \"#utility.yul\":2584:2701   */\n    tag_32:\n        /* \"#utility.yul\":2693:2694   */\n      0x00\n        /* \"#utility.yul\":2690:2691   */\n      dup1\n        /* \"#utility.yul\":2683:2695   */\n      revert\n        /* \"#utility.yul\":2707:2829   */\n    tag_28:\n        /* \"#utility.yul\":2780:2804   */\n      tag_72\n        /* \"#utility.yul\":2798:2803   */\n      dup2\n        /* \"#utility.yul\":2780:2804   */\n      tag_60\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2773:2778   */\n      dup2\n        /* \"#utility.yul\":2770:2805   */\n      eq\n        /* \"#utility.yul\":2760:2823   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2819:2820   */\n      0x00\n        /* \"#utility.yul\":2816:2817   */\n      dup1\n        /* \"#utility.yul\":2809:2821   */\n      revert\n        /* \"#utility.yul\":2760:2823   */\n    tag_73:\n        /* \"#utility.yul\":2707:2829   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204dc1aef922a43ac8900c54c3f4313c9212c3e2bb9fa68b2b1e69af5205a1429d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302699df814610046578063283a1e1614610050578063a87c70fa1461005a575b600080fd5b61004e61008b565b005b610058610148565b005b610074600480360381019061006f91906101c9565b610190565b604051610082929190610205565b60405180910390f35b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154426100dd91906102b9565b925060b4836100ec919061022e565b91506001826100fb919061025f565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050565b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b60006020528060005260406000206000915090508060000154908060010154905082565b6000813590506101c38161038c565b92915050565b6000602082840312156101df576101de610387565b5b60006101ed848285016101b4565b91505092915050565b6101ff8161031f565b82525050565b600060408201905061021a60008301856101f6565b61022760208301846101f6565b9392505050565b60006102398261031f565b91506102448361031f565b92508261025457610253610358565b5b828204905092915050565b600061026a8261031f565b91506102758361031f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156102ae576102ad610329565b5b828202905092915050565b60006102c48261031f565b91506102cf8361031f565b9250828210156102e2576102e1610329565b5b828203905092915050565b60006102f8826102ff565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b610395816102ed565b81146103a057600080fd5b5056fea26469706673582212204dc1aef922a43ac8900c54c3f4313c9212c3e2bb9fa68b2b1e69af5205a1429d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2699DF8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x283A1E16 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP3 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD TIMESTAMP PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 POP PUSH1 0xB4 DUP4 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP3 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3 DUP2 PUSH2 0x38C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x387 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED DUP5 DUP3 DUP6 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x227 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x244 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x358 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x275 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x329 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x329 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP3 PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x395 DUP2 PUSH2 0x2ED JUMP JUMPDEST DUP2 EQ PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xC1 0xAE 0xF9 0x22 LOG4 GASPRICE 0xC8 SWAP1 0xC SLOAD 0xC3 DELEGATECALL BALANCE EXTCODECOPY SWAP3 SLT 0xC3 0xE2 0xBB SWAP16 0xA6 DUP12 0x2B 0x1E PUSH10 0xAF5205A1429D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "55:949:1:-:0;;;418:36;;;;;;;;;;55:949;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@airdroppedBal_90": {
									"entryPoint": 400,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAirdrop_151": {
									"entryPoint": 139,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirDrop_107": {
									"entryPoint": 328,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2832:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:2",
														"type": ""
													}
												],
												"src": "487:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "747:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "759:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "755:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "747:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "840:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "851:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "783:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "783:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "932:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "864:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "864:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "701:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "713:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "721:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "732:4:2",
														"type": ""
													}
												],
												"src": "611:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "989:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "999:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1009:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "999:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "982:6:2",
														"type": ""
													}
												],
												"src": "949:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1072:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1082:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1105:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1087:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1082:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1116:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1139:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1121:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1116:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1163:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1165:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1165:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1165:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1160:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1153:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:9:2"
															},
															"nodeType": "YulIf",
															"src": "1150:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1195:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1204:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1207:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1200:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1195:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1061:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1064:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1070:1:2",
														"type": ""
													}
												],
												"src": "1030:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1269:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1279:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1302:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1284:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1279:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1313:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1336:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1318:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1313:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1511:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1513:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1513:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1513:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1423:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1416:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1416:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1409:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1409:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1431:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1438:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1506:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1434:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1434:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1428:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1428:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1405:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1405:105:2"
															},
															"nodeType": "YulIf",
															"src": "1402:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1543:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1558:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1561:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1554:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1543:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1252:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1255:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1261:7:2",
														"type": ""
													}
												],
												"src": "1221:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1620:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1630:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1653:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1635:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1630:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1664:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1687:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1669:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1664:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1713:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1705:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1708:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1702:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:8:2"
															},
															"nodeType": "YulIf",
															"src": "1699:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1743:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1755:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1758:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1751:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1751:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1743:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1606:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1609:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1615:4:2",
														"type": ""
													}
												],
												"src": "1575:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1817:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1827:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1838:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1827:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1799:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1809:7:2",
														"type": ""
													}
												],
												"src": "1772:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1919:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1929:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1944:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1951:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1940:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1929:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1901:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1911:7:2",
														"type": ""
													}
												],
												"src": "1874:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2061:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2072:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2061:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2033:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2043:7:2",
														"type": ""
													}
												],
												"src": "2006:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2117:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2137:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2127:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2231:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2234:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2224:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2224:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2258:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2248:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2248:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2089:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2303:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2320:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2323:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2313:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2313:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2313:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2417:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2420:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2410:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2410:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2410:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2441:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2444:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2434:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2434:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2434:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2275:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2550:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2567:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2560:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2461:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2673:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2683:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2584:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2750:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2807:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2816:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2819:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2809:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2809:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2809:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2773:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2798:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2780:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2770:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:43:2"
															},
															"nodeType": "YulIf",
															"src": "2760:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2743:5:2",
														"type": ""
													}
												],
												"src": "2707:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806302699df814610046578063283a1e1614610050578063a87c70fa1461005a575b600080fd5b61004e61008b565b005b610058610148565b005b610074600480360381019061006f91906101c9565b610190565b604051610082929190610205565b60405180910390f35b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154426100dd91906102b9565b925060b4836100ec919061022e565b91506001826100fb919061025f565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050565b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b60006020528060005260406000206000915090508060000154908060010154905082565b6000813590506101c38161038c565b92915050565b6000602082840312156101df576101de610387565b5b60006101ed848285016101b4565b91505092915050565b6101ff8161031f565b82525050565b600060408201905061021a60008301856101f6565b61022760208301846101f6565b9392505050565b60006102398261031f565b91506102448361031f565b92508261025457610253610358565b5b828204905092915050565b600061026a8261031f565b91506102758361031f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156102ae576102ad610329565b5b828202905092915050565b60006102c48261031f565b91506102cf8361031f565b9250828210156102e2576102e1610329565b5b828203905092915050565b60006102f8826102ff565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b610395816102ed565b81146103a057600080fd5b5056fea26469706673582212204dc1aef922a43ac8900c54c3f4313c9212c3e2bb9fa68b2b1e69af5205a1429d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2699DF8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x283A1E16 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x5A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x148 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6F SWAP2 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x82 SWAP3 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD TIMESTAMP PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST SWAP3 POP PUSH1 0xB4 DUP4 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x22E JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP3 PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x25F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3 DUP2 PUSH2 0x38C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF JUMPI PUSH2 0x1DE PUSH2 0x387 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED DUP5 DUP3 DUP6 ADD PUSH2 0x1B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FF DUP2 PUSH2 0x31F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F6 JUMP JUMPDEST PUSH2 0x227 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x244 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x254 JUMPI PUSH2 0x253 PUSH2 0x358 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26A DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x275 DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x329 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C4 DUP3 PUSH2 0x31F JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF DUP4 PUSH2 0x31F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2E2 JUMPI PUSH2 0x2E1 PUSH2 0x329 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 DUP3 PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x395 DUP2 PUSH2 0x2ED JUMP JUMPDEST DUP2 EQ PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xC1 0xAE 0xF9 0x22 LOG4 GASPRICE 0xC8 SWAP1 0xC SLOAD 0xC3 DELEGATECALL BALANCE EXTCODECOPY SWAP3 SLT 0xC3 0xE2 0xBB SWAP16 0xA6 DUP12 0x2B 0x1E PUSH10 0xAF5205A1429D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "55:949:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:330;;;:::i;:::-;;467:149;;;:::i;:::-;;357:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;665:330;706:25;742:14;767:18;830:13;:25;844:10;830:25;;;;;;;;;;;;;;;:34;;;812:15;:52;;;;:::i;:::-;792:72;;900:3;880:17;:23;;;;:::i;:::-;871:32;;931:1;923:6;:9;;;;:::i;:::-;910:22;;975:10;939:13;:25;953:10;939:25;;;;;;;;;;;;;;;:33;;:46;;;;695:300;;;665:330::o;467:149::-;551:15;514:13;:25;528:10;514:25;;;;;;;;;;;;;;;:34;;:52;;;;467:149::o;357:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:332::-;732:4;770:2;759:9;755:18;747:26;;783:71;851:1;840:9;836:17;827:6;783:71;:::i;:::-;864:72;932:2;921:9;917:18;908:6;864:72;:::i;:::-;611:332;;;;;:::o;1030:185::-;1070:1;1087:20;1105:1;1087:20;:::i;:::-;1082:25;;1121:20;1139:1;1121:20;:::i;:::-;1116:25;;1160:1;1150:35;;1165:18;;:::i;:::-;1150:35;1207:1;1204;1200:9;1195:14;;1030:185;;;;:::o;1221:348::-;1261:7;1284:20;1302:1;1284:20;:::i;:::-;1279:25;;1318:20;1336:1;1318:20;:::i;:::-;1313:25;;1506:1;1438:66;1434:74;1431:1;1428:81;1423:1;1416:9;1409:17;1405:105;1402:131;;;1513:18;;:::i;:::-;1402:131;1561:1;1558;1554:9;1543:20;;1221:348;;;;:::o;1575:191::-;1615:4;1635:20;1653:1;1635:20;:::i;:::-;1630:25;;1669:20;1687:1;1669:20;:::i;:::-;1664:25;;1708:1;1705;1702:8;1699:34;;;1713:18;;:::i;:::-;1699:34;1758:1;1755;1751:9;1743:17;;1575:191;;;;:::o;1772:96::-;1809:7;1838:24;1856:5;1838:24;:::i;:::-;1827:35;;1772:96;;;:::o;1874:126::-;1911:7;1951:42;1944:5;1940:54;1929:65;;1874:126;;;:::o;2006:77::-;2043:7;2072:5;2061:16;;2006:77;;;:::o;2089:180::-;2137:77;2134:1;2127:88;2234:4;2231:1;2224:15;2258:4;2255:1;2248:15;2275:180;2323:77;2320:1;2313:88;2420:4;2417:1;2410:15;2444:4;2441:1;2434:15;2584:117;2693:1;2690;2683:12;2707:122;2780:24;2798:5;2780:24;:::i;:::-;2773:5;2770:35;2760:63;;2819:1;2816;2809:12;2760:63;2707:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "197000",
								"executionCost": "238",
								"totalCost": "197238"
							},
							"external": {
								"airdroppedBal(address)": "infinite",
								"calcAirdrop()": "infinite",
								"startAirDrop()": "22352"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 1004,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204dc1aef922a43ac8900c54c3f4313c9212c3e2bb9fa68b2b1e69af5205a1429d64736f6c63430008070033",
									".code": [
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "2699DF8"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "283A1E16"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "A87C70FA"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1004,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 665,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 665,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 665,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 665,
											"end": 995,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 665,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 665,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 995,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 665,
											"end": 995,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 665,
											"end": 995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 767,
											"end": 785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 843,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 854,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 830,
											"end": 855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 830,
											"end": 855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 830,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 855,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 830,
											"end": 864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 830,
											"end": 864,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 827,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 812,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 812,
											"end": 864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 792,
											"end": 864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 903,
											"name": "PUSH",
											"source": 1,
											"value": "B4"
										},
										{
											"begin": 880,
											"end": 897,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 880,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 880,
											"end": 903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 903,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 903,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 880,
											"end": 903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 931,
											"end": 932,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 923,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 923,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 923,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 923,
											"end": 932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 910,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 910,
											"end": 932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 985,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 939,
											"end": 952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 964,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 939,
											"end": 964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 964,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 939,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 939,
											"end": 972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 939,
											"end": 985,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 939,
											"end": 985,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 939,
											"end": 985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 695,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 695,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 695,
											"end": 995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 665,
											"end": 995,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 566,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 514,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 538,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 514,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 943,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 611,
											"end": 943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 755,
											"end": 773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 783,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 783,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 864,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 917,
											"end": 935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 864,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1105,
											"end": 1106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1150,
											"end": 1185,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1165,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1150,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1150,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1204,
											"end": 1205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1209,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1209,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1215,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1261,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1284,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1318,
											"end": 1338,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1318,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1318,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1313,
											"end": 1338,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1434,
											"end": 1508,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1509,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1533,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1402,
											"end": 1533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1533,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1402,
											"end": 1533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1569,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1653,
											"end": 1654,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1635,
											"end": 1655,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1635,
											"end": 1655,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1635,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1655,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1655,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1669,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1689,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1664,
											"end": 1689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1702,
											"end": 1710,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1733,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1699,
											"end": 1733,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1713,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1699,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1758,
											"end": 1759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 1760,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1766,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1838,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1868,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 1918,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1993,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1944,
											"end": 1949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1940,
											"end": 1994,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 2000,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2006,
											"end": 2083,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2006,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2050,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2083,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2083,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2089,
											"end": 2269,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2089,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2137,
											"end": 2214,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2234,
											"end": 2238,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2231,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2224,
											"end": 2239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2258,
											"end": 2262,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2455,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2275,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2400,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2424,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2410,
											"end": 2425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2444,
											"end": 2448,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2449,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2701,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2584,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2693,
											"end": 2694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2829,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2707,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2798,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2780,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2805,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2821,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2760,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2829,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdroppedBal(address)": "a87c70fa",
							"calcAirdrop()": "02699df8",
							"startAirDrop()": "283a1e16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RebaseAirdrop.sol\":\"testRebase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"RebaseAirdrop.sol\":{\"keccak256\":\"0x7a60f36552b3d6632696a7e9b87432dce8be9f015877c48a559a0912748a9be6\",\"urls\":[\"bzz-raw://38288d30ae11db7a31c06881eab2695fddd9fdb3a822d1f7f236cb9555595f02\",\"dweb:/ipfs/QmRRYBN4VibmWF74FbCCq58kt82denAEdDhAeeJe28Toj6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> RebaseAirdrop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "RebaseAirdrop.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "197:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 77,
									"src": "281:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:0"
									},
									"scope": 77,
									"src": "419:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "725:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 77,
									"src": "707:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1078:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:0"
									},
									"scope": 77,
									"src": "1059:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1863:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:0"
									},
									"scope": 77,
									"src": "1795:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2207:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:0"
									},
									"scope": 77,
									"src": "2176:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2478:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2487:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2509:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2529:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:0"
									},
									"src": "2472:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2709:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2718:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2741:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:0"
									},
									"src": "2703:78:0"
								}
							],
							"scope": 78,
							"src": "187:2596:0",
							"usedErrors": []
						}
					],
					"src": "91:2693:0"
				},
				"id": 0
			},
			"RebaseAirdrop.sol": {
				"ast": {
					"absolutePath": "RebaseAirdrop.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"testRebase": [
							152
						]
					},
					"id": 153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 153,
							"sourceUnit": 78,
							"src": "29:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "testRebase",
							"nameLocation": "64:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "testRebase.btonsLocked",
									"id": 85,
									"members": [
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "timeInit",
											"nameLocation": "301:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "293:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 81,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "293:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 84,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "330:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "322:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 83,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "322:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "btonsLocked",
									"nameLocation": "268:11:1",
									"nodeType": "StructDefinition",
									"scope": 152,
									"src": "261:90:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87c70fa",
									"id": 90,
									"mutability": "mutable",
									"name": "airdroppedBal",
									"nameLocation": "396:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "357:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
										"typeString": "mapping(address => struct testRebase.btonsLocked)"
									},
									"typeName": {
										"id": 89,
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "365:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "357:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
											"typeString": "mapping(address => struct testRebase.btonsLocked)"
										},
										"valueType": {
											"id": 88,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 87,
												"name": "btonsLocked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "376:11:1"
											},
											"referencedDeclaration": 85,
											"src": "376:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_btonsLocked_$85_storage_ptr",
												"typeString": "struct testRebase.btonsLocked"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "432:22:1",
										"statements": []
									},
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:1"
									},
									"scope": 152,
									"src": "418:36:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "503:113:1",
										"statements": [
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 97,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "514:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 100,
															"indexExpression": {
																"expression": {
																	"id": 98,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "528:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "528:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "514:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeInit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "514:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 102,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "551:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "514:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "514:52:1"
											}
										]
									},
									"functionSelector": "283a1e16",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startAirDrop",
									"nameLocation": "476:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:1"
									},
									"scope": 152,
									"src": "467:149:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "695:300:1",
										"statements": [
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "deltaTimeFromInit",
														"nameLocation": "714:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "706:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "706:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"nodeType": "VariableDeclarationStatement",
												"src": "706:25:1"
											},
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "epochs",
														"nameLocation": "750:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "742:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "742:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"nodeType": "VariableDeclarationStatement",
												"src": "742:14:1"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "airdropAmt",
														"nameLocation": "775:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "767:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"nodeType": "VariableDeclarationStatement",
												"src": "767:18:1"
											},
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "deltaTimeFromInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "792:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "812:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "812:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 122,
																	"name": "airdroppedBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "830:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																		"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																	}
																},
																"id": 125,
																"indexExpression": {
																	"expression": {
																		"id": 123,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "844:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "844:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "830:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																	"typeString": "struct testRebase.btonsLocked storage ref"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timeInit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "830:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "812:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "792:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "792:72:1"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 130,
														"name": "epochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "871:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 131,
															"name": "deltaTimeFromInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "880:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313830",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "900:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"src": "880:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "871:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "871:32:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "910:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 137,
															"name": "epochs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "923:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "931:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "923:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "910:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "910:22:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 142,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "939:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 145,
															"indexExpression": {
																"expression": {
																	"id": 143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "953:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "953:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "939:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "939:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "975:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "939:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "939:46:1"
											}
										]
									},
									"functionSelector": "02699df8",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAirdrop",
									"nameLocation": "674:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:0:1"
									},
									"scope": 152,
									"src": "665:330:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 153,
							"src": "55:949:1",
							"usedErrors": []
						}
					],
					"src": "2:1004:1"
				},
				"id": 1
			}
		}
	}
}