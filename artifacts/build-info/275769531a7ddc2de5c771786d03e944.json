{
	"id": "275769531a7ddc2de5c771786d03e944",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"RebaseAirdrop.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ncontract testRebase { \r\n\r\n    //TODO: Update airdropped balance of tUSDC \r\n    mapping(address => uint256) public airdroppedBal;\r\n    uint256 public timeLaunched;\r\n    uint256 deltaTimeFromInit;\r\n\r\n    constructor() {\r\n        timeLaunched = block.timestamp;\r\n        }\r\n\r\n    //TODO: Check amount of BTON Held\r\n\r\n    //TODO: Calculate airdrop per 3 min\r\n\r\n    function calcAirdrop() public returns (uint256) {\r\n        return 5;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RebaseAirdrop.sol": {
				"testRebase": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "airdroppedBal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calcAirdrop",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "timeLaunched",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RebaseAirdrop.sol\":55:502  contract testRebase { \r... */\n  mstore(0x40, 0x80)\n    /* \"RebaseAirdrop.sol\":257:324  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RebaseAirdrop.sol\":297:312  block.timestamp */\n  timestamp\n    /* \"RebaseAirdrop.sol\":282:294  timeLaunched */\n  0x01\n    /* \"RebaseAirdrop.sol\":282:312  timeLaunched = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"RebaseAirdrop.sol\":55:502  contract testRebase { \r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RebaseAirdrop.sol\":55:502  contract testRebase { \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x02699df8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3c6eb17a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa87c70fa\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RebaseAirdrop.sol\":416:493  function calcAirdrop() public returns (uint256) {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":189:216  uint256 public timeLaunched */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":134:182  mapping(address => uint256) public airdroppedBal */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":416:493  function calcAirdrop() public returns (uint256) {\r... */\n    tag_7:\n        /* \"RebaseAirdrop.sol\":455:462  uint256 */\n      0x00\n        /* \"RebaseAirdrop.sol\":482:483  5 */\n      0x05\n        /* \"RebaseAirdrop.sol\":475:483  return 5 */\n      swap1\n      pop\n        /* \"RebaseAirdrop.sol\":416:493  function calcAirdrop() public returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":189:216  uint256 public timeLaunched */\n    tag_11:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":134:182  mapping(address => uint256) public airdroppedBal */\n    tag_16:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_20:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_22\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_15:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":228:347   */\n    tag_25:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_28\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_29:\n        /* \"#utility.yul\":574:598   */\n      tag_31\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:833   */\n    tag_9:\n        /* \"#utility.yul\":704:708   */\n      0x00\n        /* \"#utility.yul\":742:744   */\n      0x20\n        /* \"#utility.yul\":731:740   */\n      dup3\n        /* \"#utility.yul\":727:745   */\n      add\n        /* \"#utility.yul\":719:745   */\n      swap1\n      pop\n        /* \"#utility.yul\":755:826   */\n      tag_34\n        /* \"#utility.yul\":823:824   */\n      0x00\n        /* \"#utility.yul\":812:821   */\n      dup4\n        /* \"#utility.yul\":808:825   */\n      add\n        /* \"#utility.yul\":799:805   */\n      dup5\n        /* \"#utility.yul\":755:826   */\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":611:833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":920:1016   */\n    tag_37:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:1010   */\n      tag_39\n        /* \"#utility.yul\":1004:1009   */\n      dup3\n        /* \"#utility.yul\":986:1010   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":975:1010   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:1016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1022:1148   */\n    tag_40:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1099:1141   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1092:1097   */\n      dup3\n        /* \"#utility.yul\":1088:1142   */\n      and\n        /* \"#utility.yul\":1077:1142   */\n      swap1\n      pop\n        /* \"#utility.yul\":1022:1148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1154:1231   */\n    tag_32:\n        /* \"#utility.yul\":1191:1198   */\n      0x00\n        /* \"#utility.yul\":1220:1225   */\n      dup2\n        /* \"#utility.yul\":1209:1225   */\n      swap1\n      pop\n        /* \"#utility.yul\":1154:1231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1360:1477   */\n    tag_27:\n        /* \"#utility.yul\":1469:1470   */\n      0x00\n        /* \"#utility.yul\":1466:1467   */\n      dup1\n        /* \"#utility.yul\":1459:1471   */\n      revert\n        /* \"#utility.yul\":1483:1605   */\n    tag_23:\n        /* \"#utility.yul\":1556:1580   */\n      tag_47\n        /* \"#utility.yul\":1574:1579   */\n      dup2\n        /* \"#utility.yul\":1556:1580   */\n      tag_37\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1549:1554   */\n      dup2\n        /* \"#utility.yul\":1546:1581   */\n      eq\n        /* \"#utility.yul\":1536:1599   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1592:1593   */\n      dup1\n        /* \"#utility.yul\":1585:1597   */\n      revert\n        /* \"#utility.yul\":1536:1599   */\n    tag_48:\n        /* \"#utility.yul\":1483:1605   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220098104c3e7bb9a8554fae69012fca29e558a913998e74aa3240150a6464711fe64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_97": {
									"entryPoint": null,
									"id": 97,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50426001819055506101d3806100276000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806302699df8146100465780633c6eb17a14610064578063a87c70fa14610082575b600080fd5b61004e6100b2565b60405161005b919061012a565b60405180910390f35b61006c6100bb565b604051610079919061012a565b60405180910390f35b61009c600480360381019061009791906100ee565b6100c1565b6040516100a9919061012a565b60405180910390f35b60006005905090565b60015481565b60006020528060005260406000206000915090505481565b6000813590506100e881610186565b92915050565b60006020828403121561010457610103610181565b5b6000610112848285016100d9565b91505092915050565b61012481610177565b82525050565b600060208201905061013f600083018461011b565b92915050565b600061015082610157565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61018f81610145565b811461019a57600080fd5b5056fea2646970667358221220098104c3e7bb9a8554fae69012fca29e558a913998e74aa3240150a6464711fe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1D3 DUP1 PUSH2 0x27 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2699DF8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3C6EB17A EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE8 DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104 JUMPI PUSH2 0x103 PUSH2 0x181 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112 DUP5 DUP3 DUP6 ADD PUSH2 0xD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x145 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD DUP2 DIV 0xC3 0xE7 0xBB SWAP11 DUP6 SLOAD STATICCALL 0xE6 SWAP1 SLT 0xFC LOG2 SWAP15 SSTORE DUP11 SWAP2 CODECOPY SWAP9 0xE7 0x4A LOG3 0x24 ADD POP 0xA6 CHAINID SELFBALANCE GT INVALID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "55:447:1:-:0;;;257:67;;;;;;;;;;297:15;282:12;:30;;;;55:447;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@airdroppedBal_84": {
									"entryPoint": 193,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAirdrop_105": {
									"entryPoint": 178,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@timeLaunched_86": {
									"entryPoint": 187,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1608:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:2",
														"type": ""
													}
												],
												"src": "487:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "731:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "742:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "727:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "719:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "799:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "808:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "808:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "755:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "755:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "681:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:2",
														"type": ""
													}
												],
												"src": "611:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "899:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "872:6:2",
														"type": ""
													}
												],
												"src": "839:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "965:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "975:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "986:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "947:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "957:7:2",
														"type": ""
													}
												],
												"src": "920:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1099:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1088:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:2",
														"type": ""
													}
												],
												"src": "1022:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1199:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1209:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1220:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1209:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1181:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1191:7:2",
														"type": ""
													}
												],
												"src": "1154:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1326:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1343:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1336:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1336:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1237:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1449:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1466:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1469:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1459:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1459:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1360:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1583:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1592:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1595:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1585:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1585:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1585:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1549:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1574:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1556:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1546:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1546:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1539:43:2"
															},
															"nodeType": "YulIf",
															"src": "1536:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1519:5:2",
														"type": ""
													}
												],
												"src": "1483:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806302699df8146100465780633c6eb17a14610064578063a87c70fa14610082575b600080fd5b61004e6100b2565b60405161005b919061012a565b60405180910390f35b61006c6100bb565b604051610079919061012a565b60405180910390f35b61009c600480360381019061009791906100ee565b6100c1565b6040516100a9919061012a565b60405180910390f35b60006005905090565b60015481565b60006020528060005260406000206000915090505481565b6000813590506100e881610186565b92915050565b60006020828403121561010457610103610181565b5b6000610112848285016100d9565b91505092915050565b61012481610177565b82525050565b600060208201905061013f600083018461011b565b92915050565b600061015082610157565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61018f81610145565b811461019a57600080fd5b5056fea2646970667358221220098104c3e7bb9a8554fae69012fca29e558a913998e74aa3240150a6464711fe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2699DF8 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3C6EB17A EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0xEE JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE8 DUP2 PUSH2 0x186 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x104 JUMPI PUSH2 0x103 PUSH2 0x181 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112 DUP5 DUP3 DUP6 ADD PUSH2 0xD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124 DUP2 PUSH2 0x177 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18F DUP2 PUSH2 0x145 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD DUP2 DIV 0xC3 0xE7 0xBB SWAP11 DUP6 SLOAD STATICCALL 0xE6 SWAP1 SLT 0xFC LOG2 SWAP15 SSTORE DUP11 SWAP2 CODECOPY SWAP9 0xE7 0x4A LOG3 0x24 ADD POP 0xA6 CHAINID SELFBALANCE GT INVALID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "55:447:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;416:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;134:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;416:77;455:7;482:1;475:8;;416:77;:::o;189:27::-;;;;:::o;134:48::-;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:222::-;704:4;742:2;731:9;727:18;719:26;;755:71;823:1;812:9;808:17;799:6;755:71;:::i;:::-;611:222;;;;:::o;920:96::-;957:7;986:24;1004:5;986:24;:::i;:::-;975:35;;920:96;;;:::o;1022:126::-;1059:7;1099:42;1092:5;1088:54;1077:65;;1022:126;;;:::o;1154:77::-;1191:7;1220:5;1209:16;;1154:77;;;:::o;1360:117::-;1469:1;1466;1459:12;1483:122;1556:24;1574:5;1556:24;:::i;:::-;1549:5;1546:35;1536:63;;1595:1;1592;1585:12;1536:63;1483:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "93400",
								"executionCost": "22254",
								"totalCost": "115654"
							},
							"external": {
								"airdroppedBal(address)": "2836",
								"calcAirdrop()": "315",
								"timeLaunched()": "2429"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 502,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 324,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 324,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 257,
									"end": 324,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 297,
									"end": 312,
									"name": "TIMESTAMP",
									"source": 1
								},
								{
									"begin": 282,
									"end": 294,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 282,
									"end": 312,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 282,
									"end": 312,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 282,
									"end": 312,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 282,
									"end": 312,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 55,
									"end": 502,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 502,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 55,
									"end": 502,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 502,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 55,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 502,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220098104c3e7bb9a8554fae69012fca29e558a913998e74aa3240150a6464711fe64736f6c63430008070033",
									".code": [
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "2699DF8"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "3C6EB17A"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "A87C70FA"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 502,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 455,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 475,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 475,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 493,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 189,
											"end": 216,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 189,
											"end": 216,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 134,
											"end": 182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 727,
											"end": 745,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 719,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 823,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 808,
											"end": 825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 755,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 755,
											"end": 826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 833,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 986,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 975,
											"end": 1010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1016,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1142,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1142,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1148,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1209,
											"end": 1225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1231,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1360,
											"end": 1477,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1360,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1574,
											"end": 1579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1546,
											"end": 1581,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1536,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdroppedBal(address)": "a87c70fa",
							"calcAirdrop()": "02699df8",
							"timeLaunched()": "3c6eb17a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcAirdrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLaunched\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RebaseAirdrop.sol\":\"testRebase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"RebaseAirdrop.sol\":{\"keccak256\":\"0x6094037de82424a3e7f44fbbe9de75aaa4fb6f14a390436f310df328c792032f\",\"urls\":[\"bzz-raw://0f3710bcf111b15fa84db38d053814bd1ae591bf92bf7229c5425cb7c77fb0bb\",\"dweb:/ipfs/QmY7AM792VVaY1XNVTsAR1KPJAWEpL4cPxooRmUTUTzw6t\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> RebaseAirdrop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "RebaseAirdrop.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> RebaseAirdrop.sol:21:5:\n   |\n21 |     function calcAirdrop() public returns (uint256) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 493,
					"file": "RebaseAirdrop.sol",
					"start": 416
				},
				"type": "Warning"
			}
		],
		"sources": {
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "197:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 77,
									"src": "281:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:0"
									},
									"scope": 77,
									"src": "419:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "725:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 77,
									"src": "707:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1078:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:0"
									},
									"scope": 77,
									"src": "1059:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1863:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:0"
									},
									"scope": 77,
									"src": "1795:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2207:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:0"
									},
									"scope": 77,
									"src": "2176:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2478:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2487:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2509:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2529:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:0"
									},
									"src": "2472:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2709:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2718:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2741:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:0"
									},
									"src": "2703:78:0"
								}
							],
							"scope": 78,
							"src": "187:2596:0",
							"usedErrors": []
						}
					],
					"src": "91:2693:0"
				},
				"id": 0
			},
			"RebaseAirdrop.sol": {
				"ast": {
					"absolutePath": "RebaseAirdrop.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"testRebase": [
							106
						]
					},
					"id": 107,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 107,
							"sourceUnit": 78,
							"src": "29:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 106,
							"linearizedBaseContracts": [
								106
							],
							"name": "testRebase",
							"nameLocation": "64:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a87c70fa",
									"id": 84,
									"mutability": "mutable",
									"name": "airdroppedBal",
									"nameLocation": "169:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "134:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 83,
										"keyType": {
											"id": 81,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "142:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "134:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 82,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "153:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c6eb17a",
									"id": 86,
									"mutability": "mutable",
									"name": "timeLaunched",
									"nameLocation": "204:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "189:27:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "189:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "deltaTimeFromInit",
									"nameLocation": "231:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 106,
									"src": "223:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "223:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "271:53:1",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "timeLaunched",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "282:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 92,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "297:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "297:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "282:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "282:30:1"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "268:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:0:1"
									},
									"scope": 106,
									"src": "257:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "464:29:1",
										"statements": [
											{
												"expression": {
													"hexValue": "35",
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "482:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5_by_1",
														"typeString": "int_const 5"
													},
													"value": "5"
												},
												"functionReturnParameters": 101,
												"id": 103,
												"nodeType": "Return",
												"src": "475:8:1"
											}
										]
									},
									"functionSelector": "02699df8",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAirdrop",
									"nameLocation": "425:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "455:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:9:1"
									},
									"scope": 106,
									"src": "416:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 107,
							"src": "55:447:1",
							"usedErrors": []
						}
					],
					"src": "2:502:1"
				},
				"id": 1
			}
		}
	}
}