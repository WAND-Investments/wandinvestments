{
	"id": "8ef90754af4e31f01b2890978150195a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    address private  approvedTransferor;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        \n    }\n\n    modifier onlyApproved {\n      require(msg.sender == approvedTransferor, \"Not Approved to do so\");\n      _;\n    }\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n    /**\n     * @dev See {IERC20-mint}.\n     */\n    function mint(address to, uint256 amount) public virtual override onlyApproved {\n       \n         _mint(to, amount);\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override onlyApproved returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n\n    function _setApprovedTokenTransferor(address account) internal  {\n        //require(account != address(0), \"ERC20: mint to the zero address\");\n\n        approvedTransferor = account;\n    }\n\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /*\n    *Customised \n    */\n    function mint(address addrTo, uint256 amount) external;\n    //function burn(address addrFrom, uint256 amount) external;\n    //function scepterTotalSupply() public view virtual returns (uint256);\n    //function transferFrom(address addrTo, uint256 amount) external ;\n    /*\n    *End Customised \n    */\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "See {IERC20-mint}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1367:12346  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1984:2106  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":2058:2063  name_ */\n  dup2\n    /* \"ERC20.sol\":2050:2055  _name */\n  0x03\n    /* \"ERC20.sol\":2050:2063  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20.sol\":2083:2090  symbol_ */\n  dup1\n    /* \"ERC20.sol\":2073:2080  _symbol */\n  0x04\n    /* \"ERC20.sol\":2073:2090  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":1984:2106  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1367:12346  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_33:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":531:653   */\ntag_35:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_38\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":933:1052   */\ntag_40:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1128:1245   */\ntag_43:\n    /* \"#utility.yul\":1269:1343   */\n  tag_46\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_48\n  tag_45\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1430:1547   */\ntag_47:\n    /* \"#utility.yul\":1571:1645   */\n  tag_49\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_27:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_53\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_52:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_26:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2022:2078   */\ntag_57:\n    /* \"#utility.yul\":2096:2125   */\n  tag_60\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_32:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_63:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_66:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_11:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_68:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2741:2825   */\ntag_69:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_54:\n    /* \"#utility.yul\":2920:2947   */\n  tag_73\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_61\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2993:3081   */\ntag_74:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_71:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_59:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_37:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_30:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_45:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_42:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_61:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":1367:12346  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1367:12346  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4572:4738  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5205:5696  function transferFrom(... */\n    tag_6:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":6091:6303  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3534:3656  function mint(address to, uint256 amount) public virtual override onlyApproved {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"ERC20.sol\":3714:3839  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":6790:7195  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4042:4227  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4285:4434  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n    tag_17:\n        /* \"ERC20.sol\":2342:2355  string memory */\n      0x60\n        /* \"ERC20.sol\":2374:2379  _name */\n      0x03\n        /* \"ERC20.sol\":2367:2379  return _name */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4572:4738  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"ERC20.sol\":4655:4659  bool */\n      0x00\n        /* \"ERC20.sol\":4671:4710  _approve(_msgSender(), spender, amount) */\n      tag_75\n        /* \"ERC20.sol\":4680:4692  _msgSender() */\n      tag_76\n        /* \"ERC20.sol\":4680:4690  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":4680:4692  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"ERC20.sol\":4694:4701  spender */\n      dup5\n        /* \"ERC20.sol\":4703:4709  amount */\n      dup5\n        /* \"ERC20.sol\":4671:4679  _approve */\n      tag_78\n        /* \"ERC20.sol\":4671:4710  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_75:\n        /* \"ERC20.sol\":4727:4731  true */\n      0x01\n        /* \"ERC20.sol\":4720:4731  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":4572:4738  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_27:\n        /* \"ERC20.sol\":3437:3444  uint256 */\n      0x00\n        /* \"ERC20.sol\":3463:3475  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3456:3475  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5205:5696  function transferFrom(... */\n    tag_33:\n        /* \"ERC20.sol\":5354:5358  bool */\n      0x00\n        /* \"ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"ERC20.sol\":5370:5406  _transfer(sender, recipient, amount) */\n      tag_85\n        /* \"ERC20.sol\":5380:5386  sender */\n      dup5\n        /* \"ERC20.sol\":5388:5397  recipient */\n      dup5\n        /* \"ERC20.sol\":5399:5405  amount */\n      dup5\n        /* \"ERC20.sol\":5370:5379  _transfer */\n      tag_86\n        /* \"ERC20.sol\":5370:5406  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_85:\n        /* \"ERC20.sol\":5417:5441  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":5444:5455  _allowances */\n      0x01\n        /* \"ERC20.sol\":5444:5463  _allowances[sender] */\n      0x00\n        /* \"ERC20.sol\":5456:5462  sender */\n      dup7\n        /* \"ERC20.sol\":5444:5463  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5444:5477  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5464:5476  _msgSender() */\n      tag_87\n        /* \"ERC20.sol\":5464:5474  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":5464:5476  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"ERC20.sol\":5444:5477  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":5417:5477  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"ERC20.sol\":5515:5521  amount */\n      dup3\n        /* \"ERC20.sol\":5495:5511  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":5495:5521  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":5487:5566  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"ERC20.sol\":5600:5657  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_91\n        /* \"ERC20.sol\":5609:5615  sender */\n      dup6\n        /* \"ERC20.sol\":5617:5629  _msgSender() */\n      tag_92\n        /* \"ERC20.sol\":5617:5627  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":5617:5629  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"ERC20.sol\":5650:5656  amount */\n      dup6\n        /* \"ERC20.sol\":5631:5647  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":5631:5656  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":5600:5608  _approve */\n      tag_78\n        /* \"ERC20.sol\":5600:5657  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_91:\n        /* \"ERC20.sol\":5685:5689  true */\n      0x01\n        /* \"ERC20.sol\":5678:5689  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":5205:5696  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n    tag_36:\n        /* \"ERC20.sol\":3283:3288  uint8 */\n      0x00\n        /* \"ERC20.sol\":3307:3309  18 */\n      0x12\n        /* \"ERC20.sol\":3300:3309  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":6091:6303  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_41:\n        /* \"ERC20.sol\":6179:6183  bool */\n      0x00\n        /* \"ERC20.sol\":6195:6275  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_95\n        /* \"ERC20.sol\":6204:6216  _msgSender() */\n      tag_96\n        /* \"ERC20.sol\":6204:6214  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":6204:6216  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"ERC20.sol\":6218:6225  spender */\n      dup5\n        /* \"ERC20.sol\":6264:6274  addedValue */\n      dup5\n        /* \"ERC20.sol\":6227:6238  _allowances */\n      0x01\n        /* \"ERC20.sol\":6227:6252  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6239:6251  _msgSender() */\n      tag_97\n        /* \"ERC20.sol\":6239:6249  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":6239:6251  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"ERC20.sol\":6227:6252  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6227:6261  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":6253:6260  spender */\n      dup9\n        /* \"ERC20.sol\":6227:6261  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6227:6274  _allowances[_msgSender()][spender] + addedValue */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"ERC20.sol\":6195:6203  _approve */\n      tag_78\n        /* \"ERC20.sol\":6195:6275  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_95:\n        /* \"ERC20.sol\":6292:6296  true */\n      0x01\n        /* \"ERC20.sol\":6285:6296  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":6091:6303  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3534:3656  function mint(address to, uint256 amount) public virtual override onlyApproved {... */\n    tag_45:\n        /* \"ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_83\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"ERC20.sol\":3632:3649  _mint(to, amount) */\n      tag_104\n        /* \"ERC20.sol\":3638:3640  to */\n      dup3\n        /* \"ERC20.sol\":3642:3648  amount */\n      dup3\n        /* \"ERC20.sol\":3632:3637  _mint */\n      tag_105\n        /* \"ERC20.sol\":3632:3649  _mint(to, amount) */\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":3534:3656  function mint(address to, uint256 amount) public virtual override onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3714:3839  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_49:\n        /* \"ERC20.sol\":3788:3795  uint256 */\n      0x00\n        /* \"ERC20.sol\":3814:3823  _balances */\n      dup1\n        /* \"ERC20.sol\":3814:3832  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3824:3831  account */\n      dup4\n        /* \"ERC20.sol\":3814:3832  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3807:3832  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3714:3839  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n    tag_52:\n        /* \"ERC20.sol\":2555:2568  string memory */\n      0x60\n        /* \"ERC20.sol\":2587:2594  _symbol */\n      0x04\n        /* \"ERC20.sol\":2580:2594  return _symbol */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_69\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_69\n      jump\t// in\n    tag_109:\n      dup1\n      iszero\n      tag_110\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_111\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_110)\n    tag_111:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_112:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_112\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":6790:7195  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_56:\n        /* \"ERC20.sol\":6883:6887  bool */\n      0x00\n        /* \"ERC20.sol\":6899:6923  uint256 currentAllowance */\n      dup1\n        /* \"ERC20.sol\":6926:6937  _allowances */\n      0x01\n        /* \"ERC20.sol\":6926:6951  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6938:6950  _msgSender() */\n      tag_114\n        /* \"ERC20.sol\":6938:6948  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":6938:6950  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"ERC20.sol\":6926:6951  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6926:6960  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":6952:6959  spender */\n      dup6\n        /* \"ERC20.sol\":6926:6960  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6899:6960  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":6998:7013  subtractedValue */\n      dup3\n        /* \"ERC20.sol\":6978:6994  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6978:7013  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":6970:7055  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"ERC20.sol\":7089:7156  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_118\n        /* \"ERC20.sol\":7098:7110  _msgSender() */\n      tag_119\n        /* \"ERC20.sol\":7098:7108  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":7098:7110  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"ERC20.sol\":7112:7119  spender */\n      dup6\n        /* \"ERC20.sol\":7140:7155  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":7121:7137  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":7121:7155  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":7089:7097  _approve */\n      tag_78\n        /* \"ERC20.sol\":7089:7156  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_118:\n        /* \"ERC20.sol\":7184:7188  true */\n      0x01\n        /* \"ERC20.sol\":7177:7188  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":6790:7195  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4042:4227  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n    tag_60:\n        /* \"ERC20.sol\":4141:4145  bool */\n      0x00\n        /* \"ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_83\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"ERC20.sol\":4157:4199  _transfer(_msgSender(), recipient, amount) */\n      tag_124\n        /* \"ERC20.sol\":4167:4179  _msgSender() */\n      tag_125\n        /* \"ERC20.sol\":4167:4177  _msgSender */\n      tag_77\n        /* \"ERC20.sol\":4167:4179  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"ERC20.sol\":4181:4190  recipient */\n      dup5\n        /* \"ERC20.sol\":4192:4198  amount */\n      dup5\n        /* \"ERC20.sol\":4157:4166  _transfer */\n      tag_86\n        /* \"ERC20.sol\":4157:4199  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_124:\n        /* \"ERC20.sol\":4216:4220  true */\n      0x01\n        /* \"ERC20.sol\":4209:4220  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":4042:4227  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4285:4434  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_65:\n        /* \"ERC20.sol\":4374:4381  uint256 */\n      0x00\n        /* \"ERC20.sol\":4400:4411  _allowances */\n      0x01\n        /* \"ERC20.sol\":4400:4418  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":4412:4417  owner */\n      dup5\n        /* \"ERC20.sol\":4400:4418  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":4400:4427  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":4419:4426  spender */\n      dup4\n        /* \"ERC20.sol\":4400:4427  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":4393:4427  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":4285:4434  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_77:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":10366:10736  function _approve(... */\n    tag_78:\n        /* \"ERC20.sol\":10514:10515  0 */\n      0x00\n        /* \"ERC20.sol\":10497:10516  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10497:10502  owner */\n      dup4\n        /* \"ERC20.sol\":10497:10516  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":10489:10557  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"ERC20.sol\":10594:10595  0 */\n      0x00\n        /* \"ERC20.sol\":10575:10596  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10575:10582  spender */\n      dup3\n        /* \"ERC20.sol\":10575:10596  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":10567:10635  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"ERC20.sol\":10676:10682  amount */\n      dup1\n        /* \"ERC20.sol\":10646:10657  _allowances */\n      0x01\n        /* \"ERC20.sol\":10646:10664  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":10658:10663  owner */\n      dup6\n        /* \"ERC20.sol\":10646:10664  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10646:10673  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":10665:10672  spender */\n      dup5\n        /* \"ERC20.sol\":10646:10673  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10646:10682  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":10713:10720  spender */\n      dup2\n        /* \"ERC20.sol\":10697:10729  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10706:10711  owner */\n      dup4\n        /* \"ERC20.sol\":10697:10729  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":10722:10728  amount */\n      dup4\n        /* \"ERC20.sol\":10697:10729  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10366:10736  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7669:8382  function _transfer(... */\n    tag_86:\n        /* \"ERC20.sol\":7822:7823  0 */\n      0x00\n        /* \"ERC20.sol\":7804:7824  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7804:7810  sender */\n      dup4\n        /* \"ERC20.sol\":7804:7824  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7796:7866  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"ERC20.sol\":7905:7906  0 */\n      0x00\n        /* \"ERC20.sol\":7884:7907  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7884:7893  recipient */\n      dup3\n        /* \"ERC20.sol\":7884:7907  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7876:7947  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"ERC20.sol\":7958:8005  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_143\n        /* \"ERC20.sol\":7979:7985  sender */\n      dup4\n        /* \"ERC20.sol\":7987:7996  recipient */\n      dup4\n        /* \"ERC20.sol\":7998:8004  amount */\n      dup4\n        /* \"ERC20.sol\":7958:7978  _beforeTokenTransfer */\n      tag_144\n        /* \"ERC20.sol\":7958:8005  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_143:\n        /* \"ERC20.sol\":8016:8037  uint256 senderBalance */\n      0x00\n        /* \"ERC20.sol\":8040:8049  _balances */\n      dup1\n        /* \"ERC20.sol\":8040:8057  _balances[sender] */\n      0x00\n        /* \"ERC20.sol\":8050:8056  sender */\n      dup6\n        /* \"ERC20.sol\":8040:8057  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":8016:8057  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":8092:8098  amount */\n      dup2\n        /* \"ERC20.sol\":8075:8088  senderBalance */\n      dup2\n        /* \"ERC20.sol\":8075:8098  senderBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":8067:8141  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"ERC20.sol\":8211:8217  amount */\n      dup2\n        /* \"ERC20.sol\":8195:8208  senderBalance */\n      dup2\n        /* \"ERC20.sol\":8195:8217  senderBalance - amount */\n      sub\n        /* \"ERC20.sol\":8175:8184  _balances */\n      0x00\n        /* \"ERC20.sol\":8175:8192  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":8185:8191  sender */\n      dup7\n        /* \"ERC20.sol\":8175:8192  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":8175:8217  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8261:8267  amount */\n      dup2\n        /* \"ERC20.sol\":8237:8246  _balances */\n      0x00\n        /* \"ERC20.sol\":8237:8257  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":8247:8256  recipient */\n      dup6\n        /* \"ERC20.sol\":8237:8257  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":8237:8267  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8300:8309  recipient */\n      dup3\n        /* \"ERC20.sol\":8283:8318  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":8292:8298  sender */\n      dup5\n        /* \"ERC20.sol\":8283:8318  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":8311:8317  amount */\n      dup5\n        /* \"ERC20.sol\":8283:8318  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":8329:8375  _afterTokenTransfer(sender, recipient, amount) */\n      tag_150\n        /* \"ERC20.sol\":8349:8355  sender */\n      dup5\n        /* \"ERC20.sol\":8357:8366  recipient */\n      dup5\n        /* \"ERC20.sol\":8368:8374  amount */\n      dup5\n        /* \"ERC20.sol\":8329:8348  _afterTokenTransfer */\n      tag_151\n        /* \"ERC20.sol\":8329:8375  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_150:\n        /* \"ERC20.sol\":7786:8382  {... */\n      pop\n        /* \"ERC20.sol\":7669:8382  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":8658:9047  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_105:\n        /* \"ERC20.sol\":8760:8761  0 */\n      0x00\n        /* \"ERC20.sol\":8741:8762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":8741:8748  account */\n      dup3\n        /* \"ERC20.sol\":8741:8762  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":8733:8798  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"ERC20.sol\":8809:8858  _beforeTokenTransfer(address(0), account, amount) */\n      tag_156\n        /* \"ERC20.sol\":8838:8839  0 */\n      0x00\n        /* \"ERC20.sol\":8842:8849  account */\n      dup4\n        /* \"ERC20.sol\":8851:8857  amount */\n      dup4\n        /* \"ERC20.sol\":8809:8829  _beforeTokenTransfer */\n      tag_144\n        /* \"ERC20.sol\":8809:8858  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_156:\n        /* \"ERC20.sol\":8885:8891  amount */\n      dup1\n        /* \"ERC20.sol\":8869:8881  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":8869:8891  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8923:8929  amount */\n      dup1\n        /* \"ERC20.sol\":8901:8910  _balances */\n      0x00\n        /* \"ERC20.sol\":8901:8919  _balances[account] */\n      dup1\n        /* \"ERC20.sol\":8911:8918  account */\n      dup5\n        /* \"ERC20.sol\":8901:8919  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":8901:8929  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8965:8972  account */\n      dup2\n        /* \"ERC20.sol\":8944:8981  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":8961:8962  0 */\n      0x00\n        /* \"ERC20.sol\":8944:8981  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":8974:8980  amount */\n      dup4\n        /* \"ERC20.sol\":8944:8981  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":8992:9040  _afterTokenTransfer(address(0), account, amount) */\n      tag_160\n        /* \"ERC20.sol\":9020:9021  0 */\n      0x00\n        /* \"ERC20.sol\":9024:9031  account */\n      dup4\n        /* \"ERC20.sol\":9033:9039  amount */\n      dup4\n        /* \"ERC20.sol\":8992:9011  _afterTokenTransfer */\n      tag_151\n        /* \"ERC20.sol\":8992:9040  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_160:\n        /* \"ERC20.sol\":8658:9047  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11320:11441  function _beforeTokenTransfer(... */\n    tag_144:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":12029:12149  function _afterTokenTransfer(... */\n    tag_151:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_164:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_166\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_168:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_170\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_48:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":373:492   */\n    tag_173:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_176\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_164\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_64:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_179\n      tag_175\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":725:844   */\n    tag_178:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_180\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_164\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_181\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_164\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_32:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_184\n      tag_175\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1222:1341   */\n    tag_183:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_185\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_164\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_186\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_164\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_187\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_168\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_22:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_190\n      tag_175\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1830:1949   */\n    tag_189:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_191\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_164\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_192\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_168\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_193:\n        /* \"#utility.yul\":2298:2319   */\n      tag_195\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_197:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_199\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":2503:2574   */\n      tag_201\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_203\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2660:2689   */\n      tag_205\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_207:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_209\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_202\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_210\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_212:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_214\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_202\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_215\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_217:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_219\n        /* \"#utility.yul\":3673:3675   */\n      0x15\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_202\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_220\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_222:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_224\n        /* \"#utility.yul\":4045:4047   */\n      0x26\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_202\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_225\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_227:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_229\n        /* \"#utility.yul\":4417:4419   */\n      0x28\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_202\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_230\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_232:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_234\n        /* \"#utility.yul\":4789:4791   */\n      0x25\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_202\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_235\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_237:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_239\n        /* \"#utility.yul\":5161:5163   */\n      0x24\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_202\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_240\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5672   */\n    tag_242:\n        /* \"#utility.yul\":5448:5451   */\n      0x00\n        /* \"#utility.yul\":5469:5536   */\n      tag_244\n        /* \"#utility.yul\":5533:5535   */\n      0x25\n        /* \"#utility.yul\":5528:5531   */\n      dup4\n        /* \"#utility.yul\":5469:5536   */\n      tag_202\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5462:5536   */\n      swap2\n      pop\n        /* \"#utility.yul\":5545:5638   */\n      tag_245\n        /* \"#utility.yul\":5634:5637   */\n      dup3\n        /* \"#utility.yul\":5545:5638   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5663:5665   */\n      0x40\n        /* \"#utility.yul\":5658:5661   */\n      dup3\n        /* \"#utility.yul\":5654:5666   */\n      add\n        /* \"#utility.yul\":5647:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5306:5672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:6044   */\n    tag_247:\n        /* \"#utility.yul\":5820:5823   */\n      0x00\n        /* \"#utility.yul\":5841:5908   */\n      tag_249\n        /* \"#utility.yul\":5905:5907   */\n      0x1f\n        /* \"#utility.yul\":5900:5903   */\n      dup4\n        /* \"#utility.yul\":5841:5908   */\n      tag_202\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5834:5908   */\n      swap2\n      pop\n        /* \"#utility.yul\":5917:6010   */\n      tag_250\n        /* \"#utility.yul\":6006:6009   */\n      dup3\n        /* \"#utility.yul\":5917:6010   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6035:6037   */\n      0x20\n        /* \"#utility.yul\":6030:6033   */\n      dup3\n        /* \"#utility.yul\":6026:6038   */\n      add\n        /* \"#utility.yul\":6019:6038   */\n      swap1\n      pop\n        /* \"#utility.yul\":5678:6044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6050:6168   */\n    tag_252:\n        /* \"#utility.yul\":6137:6161   */\n      tag_254\n        /* \"#utility.yul\":6155:6160   */\n      dup2\n        /* \"#utility.yul\":6137:6161   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6132:6135   */\n      dup3\n        /* \"#utility.yul\":6125:6162   */\n      mstore\n        /* \"#utility.yul\":6050:6168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6174:6286   */\n    tag_256:\n        /* \"#utility.yul\":6257:6279   */\n      tag_258\n        /* \"#utility.yul\":6273:6278   */\n      dup2\n        /* \"#utility.yul\":6257:6279   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6252:6255   */\n      dup3\n        /* \"#utility.yul\":6245:6280   */\n      mstore\n        /* \"#utility.yul\":6174:6286   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6292:6502   */\n    tag_25:\n        /* \"#utility.yul\":6379:6383   */\n      0x00\n        /* \"#utility.yul\":6417:6419   */\n      0x20\n        /* \"#utility.yul\":6406:6415   */\n      dup3\n        /* \"#utility.yul\":6402:6420   */\n      add\n        /* \"#utility.yul\":6394:6420   */\n      swap1\n      pop\n        /* \"#utility.yul\":6430:6495   */\n      tag_261\n        /* \"#utility.yul\":6492:6493   */\n      0x00\n        /* \"#utility.yul\":6481:6490   */\n      dup4\n        /* \"#utility.yul\":6477:6494   */\n      add\n        /* \"#utility.yul\":6468:6474   */\n      dup5\n        /* \"#utility.yul\":6430:6495   */\n      tag_193\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6292:6502   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6821   */\n    tag_19:\n        /* \"#utility.yul\":6621:6625   */\n      0x00\n        /* \"#utility.yul\":6659:6661   */\n      0x20\n        /* \"#utility.yul\":6648:6657   */\n      dup3\n        /* \"#utility.yul\":6644:6662   */\n      add\n        /* \"#utility.yul\":6636:6662   */\n      swap1\n      pop\n        /* \"#utility.yul\":6708:6717   */\n      dup2\n        /* \"#utility.yul\":6702:6706   */\n      dup2\n        /* \"#utility.yul\":6698:6718   */\n      sub\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6683:6692   */\n      dup4\n        /* \"#utility.yul\":6679:6696   */\n      add\n        /* \"#utility.yul\":6672:6719   */\n      mstore\n        /* \"#utility.yul\":6736:6814   */\n      tag_263\n        /* \"#utility.yul\":6809:6813   */\n      dup2\n        /* \"#utility.yul\":6800:6806   */\n      dup5\n        /* \"#utility.yul\":6736:6814   */\n      tag_197\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6728:6814   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6827:7246   */\n    tag_142:\n        /* \"#utility.yul\":6993:6997   */\n      0x00\n        /* \"#utility.yul\":7031:7033   */\n      0x20\n        /* \"#utility.yul\":7020:7029   */\n      dup3\n        /* \"#utility.yul\":7016:7034   */\n      add\n        /* \"#utility.yul\":7008:7034   */\n      swap1\n      pop\n        /* \"#utility.yul\":7080:7089   */\n      dup2\n        /* \"#utility.yul\":7074:7078   */\n      dup2\n        /* \"#utility.yul\":7070:7090   */\n      sub\n        /* \"#utility.yul\":7066:7067   */\n      0x00\n        /* \"#utility.yul\":7055:7064   */\n      dup4\n        /* \"#utility.yul\":7051:7068   */\n      add\n        /* \"#utility.yul\":7044:7091   */\n      mstore\n        /* \"#utility.yul\":7108:7239   */\n      tag_265\n        /* \"#utility.yul\":7234:7238   */\n      dup2\n        /* \"#utility.yul\":7108:7239   */\n      tag_207\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7100:7239   */\n      swap1\n      pop\n        /* \"#utility.yul\":6827:7246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7252:7671   */\n    tag_134:\n        /* \"#utility.yul\":7418:7422   */\n      0x00\n        /* \"#utility.yul\":7456:7458   */\n      0x20\n        /* \"#utility.yul\":7445:7454   */\n      dup3\n        /* \"#utility.yul\":7441:7459   */\n      add\n        /* \"#utility.yul\":7433:7459   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7514   */\n      dup2\n        /* \"#utility.yul\":7499:7503   */\n      dup2\n        /* \"#utility.yul\":7495:7515   */\n      sub\n        /* \"#utility.yul\":7491:7492   */\n      0x00\n        /* \"#utility.yul\":7480:7489   */\n      dup4\n        /* \"#utility.yul\":7476:7493   */\n      add\n        /* \"#utility.yul\":7469:7516   */\n      mstore\n        /* \"#utility.yul\":7533:7664   */\n      tag_267\n        /* \"#utility.yul\":7659:7663   */\n      dup2\n        /* \"#utility.yul\":7533:7664   */\n      tag_212\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7525:7664   */\n      swap1\n      pop\n        /* \"#utility.yul\":7252:7671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7677:8096   */\n    tag_83:\n        /* \"#utility.yul\":7843:7847   */\n      0x00\n        /* \"#utility.yul\":7881:7883   */\n      0x20\n        /* \"#utility.yul\":7870:7879   */\n      dup3\n        /* \"#utility.yul\":7866:7884   */\n      add\n        /* \"#utility.yul\":7858:7884   */\n      swap1\n      pop\n        /* \"#utility.yul\":7930:7939   */\n      dup2\n        /* \"#utility.yul\":7924:7928   */\n      dup2\n        /* \"#utility.yul\":7920:7940   */\n      sub\n        /* \"#utility.yul\":7916:7917   */\n      0x00\n        /* \"#utility.yul\":7905:7914   */\n      dup4\n        /* \"#utility.yul\":7901:7918   */\n      add\n        /* \"#utility.yul\":7894:7941   */\n      mstore\n        /* \"#utility.yul\":7958:8089   */\n      tag_269\n        /* \"#utility.yul\":8084:8088   */\n      dup2\n        /* \"#utility.yul\":7958:8089   */\n      tag_217\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7950:8089   */\n      swap1\n      pop\n        /* \"#utility.yul\":7677:8096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8102:8521   */\n    tag_147:\n        /* \"#utility.yul\":8268:8272   */\n      0x00\n        /* \"#utility.yul\":8306:8308   */\n      0x20\n        /* \"#utility.yul\":8295:8304   */\n      dup3\n        /* \"#utility.yul\":8291:8309   */\n      add\n        /* \"#utility.yul\":8283:8309   */\n      swap1\n      pop\n        /* \"#utility.yul\":8355:8364   */\n      dup2\n        /* \"#utility.yul\":8349:8353   */\n      dup2\n        /* \"#utility.yul\":8345:8365   */\n      sub\n        /* \"#utility.yul\":8341:8342   */\n      0x00\n        /* \"#utility.yul\":8330:8339   */\n      dup4\n        /* \"#utility.yul\":8326:8343   */\n      add\n        /* \"#utility.yul\":8319:8366   */\n      mstore\n        /* \"#utility.yul\":8383:8514   */\n      tag_271\n        /* \"#utility.yul\":8509:8513   */\n      dup2\n        /* \"#utility.yul\":8383:8514   */\n      tag_222\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8375:8514   */\n      swap1\n      pop\n        /* \"#utility.yul\":8102:8521   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8527:8946   */\n    tag_90:\n        /* \"#utility.yul\":8693:8697   */\n      0x00\n        /* \"#utility.yul\":8731:8733   */\n      0x20\n        /* \"#utility.yul\":8720:8729   */\n      dup3\n        /* \"#utility.yul\":8716:8734   */\n      add\n        /* \"#utility.yul\":8708:8734   */\n      swap1\n      pop\n        /* \"#utility.yul\":8780:8789   */\n      dup2\n        /* \"#utility.yul\":8774:8778   */\n      dup2\n        /* \"#utility.yul\":8770:8790   */\n      sub\n        /* \"#utility.yul\":8766:8767   */\n      0x00\n        /* \"#utility.yul\":8755:8764   */\n      dup4\n        /* \"#utility.yul\":8751:8768   */\n      add\n        /* \"#utility.yul\":8744:8791   */\n      mstore\n        /* \"#utility.yul\":8808:8939   */\n      tag_273\n        /* \"#utility.yul\":8934:8938   */\n      dup2\n        /* \"#utility.yul\":8808:8939   */\n      tag_227\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8800:8939   */\n      swap1\n      pop\n        /* \"#utility.yul\":8527:8946   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8952:9371   */\n    tag_139:\n        /* \"#utility.yul\":9118:9122   */\n      0x00\n        /* \"#utility.yul\":9156:9158   */\n      0x20\n        /* \"#utility.yul\":9145:9154   */\n      dup3\n        /* \"#utility.yul\":9141:9159   */\n      add\n        /* \"#utility.yul\":9133:9159   */\n      swap1\n      pop\n        /* \"#utility.yul\":9205:9214   */\n      dup2\n        /* \"#utility.yul\":9199:9203   */\n      dup2\n        /* \"#utility.yul\":9195:9215   */\n      sub\n        /* \"#utility.yul\":9191:9192   */\n      0x00\n        /* \"#utility.yul\":9180:9189   */\n      dup4\n        /* \"#utility.yul\":9176:9193   */\n      add\n        /* \"#utility.yul\":9169:9216   */\n      mstore\n        /* \"#utility.yul\":9233:9364   */\n      tag_275\n        /* \"#utility.yul\":9359:9363   */\n      dup2\n        /* \"#utility.yul\":9233:9364   */\n      tag_232\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9225:9364   */\n      swap1\n      pop\n        /* \"#utility.yul\":8952:9371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9377:9796   */\n    tag_131:\n        /* \"#utility.yul\":9543:9547   */\n      0x00\n        /* \"#utility.yul\":9581:9583   */\n      0x20\n        /* \"#utility.yul\":9570:9579   */\n      dup3\n        /* \"#utility.yul\":9566:9584   */\n      add\n        /* \"#utility.yul\":9558:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9639   */\n      dup2\n        /* \"#utility.yul\":9624:9628   */\n      dup2\n        /* \"#utility.yul\":9620:9640   */\n      sub\n        /* \"#utility.yul\":9616:9617   */\n      0x00\n        /* \"#utility.yul\":9605:9614   */\n      dup4\n        /* \"#utility.yul\":9601:9618   */\n      add\n        /* \"#utility.yul\":9594:9641   */\n      mstore\n        /* \"#utility.yul\":9658:9789   */\n      tag_277\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9658:9789   */\n      tag_237\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9650:9789   */\n      swap1\n      pop\n        /* \"#utility.yul\":9377:9796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9802:10221   */\n    tag_117:\n        /* \"#utility.yul\":9968:9972   */\n      0x00\n        /* \"#utility.yul\":10006:10008   */\n      0x20\n        /* \"#utility.yul\":9995:10004   */\n      dup3\n        /* \"#utility.yul\":9991:10009   */\n      add\n        /* \"#utility.yul\":9983:10009   */\n      swap1\n      pop\n        /* \"#utility.yul\":10055:10064   */\n      dup2\n        /* \"#utility.yul\":10049:10053   */\n      dup2\n        /* \"#utility.yul\":10045:10065   */\n      sub\n        /* \"#utility.yul\":10041:10042   */\n      0x00\n        /* \"#utility.yul\":10030:10039   */\n      dup4\n        /* \"#utility.yul\":10026:10043   */\n      add\n        /* \"#utility.yul\":10019:10066   */\n      mstore\n        /* \"#utility.yul\":10083:10214   */\n      tag_279\n        /* \"#utility.yul\":10209:10213   */\n      dup2\n        /* \"#utility.yul\":10083:10214   */\n      tag_242\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10075:10214   */\n      swap1\n      pop\n        /* \"#utility.yul\":9802:10221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10227:10646   */\n    tag_155:\n        /* \"#utility.yul\":10393:10397   */\n      0x00\n        /* \"#utility.yul\":10431:10433   */\n      0x20\n        /* \"#utility.yul\":10420:10429   */\n      dup3\n        /* \"#utility.yul\":10416:10434   */\n      add\n        /* \"#utility.yul\":10408:10434   */\n      swap1\n      pop\n        /* \"#utility.yul\":10480:10489   */\n      dup2\n        /* \"#utility.yul\":10474:10478   */\n      dup2\n        /* \"#utility.yul\":10470:10490   */\n      sub\n        /* \"#utility.yul\":10466:10467   */\n      0x00\n        /* \"#utility.yul\":10455:10464   */\n      dup4\n        /* \"#utility.yul\":10451:10468   */\n      add\n        /* \"#utility.yul\":10444:10491   */\n      mstore\n        /* \"#utility.yul\":10508:10639   */\n      tag_281\n        /* \"#utility.yul\":10634:10638   */\n      dup2\n        /* \"#utility.yul\":10508:10639   */\n      tag_247\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10500:10639   */\n      swap1\n      pop\n        /* \"#utility.yul\":10227:10646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10652:10874   */\n    tag_29:\n        /* \"#utility.yul\":10745:10749   */\n      0x00\n        /* \"#utility.yul\":10783:10785   */\n      0x20\n        /* \"#utility.yul\":10772:10781   */\n      dup3\n        /* \"#utility.yul\":10768:10786   */\n      add\n        /* \"#utility.yul\":10760:10786   */\n      swap1\n      pop\n        /* \"#utility.yul\":10796:10867   */\n      tag_283\n        /* \"#utility.yul\":10864:10865   */\n      0x00\n        /* \"#utility.yul\":10853:10862   */\n      dup4\n        /* \"#utility.yul\":10849:10866   */\n      add\n        /* \"#utility.yul\":10840:10846   */\n      dup5\n        /* \"#utility.yul\":10796:10867   */\n      tag_252\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10652:10874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10880:11094   */\n    tag_38:\n        /* \"#utility.yul\":10969:10973   */\n      0x00\n        /* \"#utility.yul\":11007:11009   */\n      0x20\n        /* \"#utility.yul\":10996:11005   */\n      dup3\n        /* \"#utility.yul\":10992:11010   */\n      add\n        /* \"#utility.yul\":10984:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":11020:11087   */\n      tag_285\n        /* \"#utility.yul\":11084:11085   */\n      0x00\n        /* \"#utility.yul\":11073:11082   */\n      dup4\n        /* \"#utility.yul\":11069:11086   */\n      add\n        /* \"#utility.yul\":11060:11066   */\n      dup5\n        /* \"#utility.yul\":11020:11087   */\n      tag_256\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10880:11094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11181:11280   */\n    tag_200:\n        /* \"#utility.yul\":11233:11239   */\n      0x00\n        /* \"#utility.yul\":11267:11272   */\n      dup2\n        /* \"#utility.yul\":11261:11273   */\n      mload\n        /* \"#utility.yul\":11251:11273   */\n      swap1\n      pop\n        /* \"#utility.yul\":11181:11280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11286:11455   */\n    tag_202:\n        /* \"#utility.yul\":11370:11381   */\n      0x00\n        /* \"#utility.yul\":11404:11410   */\n      dup3\n        /* \"#utility.yul\":11399:11402   */\n      dup3\n        /* \"#utility.yul\":11392:11411   */\n      mstore\n        /* \"#utility.yul\":11444:11448   */\n      0x20\n        /* \"#utility.yul\":11439:11442   */\n      dup3\n        /* \"#utility.yul\":11435:11449   */\n      add\n        /* \"#utility.yul\":11420:11449   */\n      swap1\n      pop\n        /* \"#utility.yul\":11286:11455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11461:11766   */\n    tag_99:\n        /* \"#utility.yul\":11501:11504   */\n      0x00\n        /* \"#utility.yul\":11520:11540   */\n      tag_291\n        /* \"#utility.yul\":11538:11539   */\n      dup3\n        /* \"#utility.yul\":11520:11540   */\n      tag_255\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11515:11540   */\n      swap2\n      pop\n        /* \"#utility.yul\":11554:11574   */\n      tag_292\n        /* \"#utility.yul\":11572:11573   */\n      dup4\n        /* \"#utility.yul\":11554:11574   */\n      tag_255\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11549:11574   */\n      swap3\n      pop\n        /* \"#utility.yul\":11708:11709   */\n      dup3\n        /* \"#utility.yul\":11640:11706   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11636:11710   */\n      sub\n        /* \"#utility.yul\":11633:11634   */\n      dup3\n        /* \"#utility.yul\":11630:11711   */\n      gt\n        /* \"#utility.yul\":11627:11734   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":11714:11732   */\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11627:11734   */\n    tag_293:\n        /* \"#utility.yul\":11758:11759   */\n      dup3\n        /* \"#utility.yul\":11755:11756   */\n      dup3\n        /* \"#utility.yul\":11751:11760   */\n      add\n        /* \"#utility.yul\":11744:11760   */\n      swap1\n      pop\n        /* \"#utility.yul\":11461:11766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11772:11868   */\n    tag_296:\n        /* \"#utility.yul\":11809:11816   */\n      0x00\n        /* \"#utility.yul\":11838:11862   */\n      tag_298\n        /* \"#utility.yul\":11856:11861   */\n      dup3\n        /* \"#utility.yul\":11838:11862   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":11827:11862   */\n      swap1\n      pop\n        /* \"#utility.yul\":11772:11868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11874:11964   */\n    tag_196:\n        /* \"#utility.yul\":11908:11915   */\n      0x00\n        /* \"#utility.yul\":11951:11956   */\n      dup2\n        /* \"#utility.yul\":11944:11957   */\n      iszero\n        /* \"#utility.yul\":11937:11958   */\n      iszero\n        /* \"#utility.yul\":11926:11958   */\n      swap1\n      pop\n        /* \"#utility.yul\":11874:11964   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11970:12096   */\n    tag_299:\n        /* \"#utility.yul\":12007:12014   */\n      0x00\n        /* \"#utility.yul\":12047:12089   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12040:12045   */\n      dup3\n        /* \"#utility.yul\":12036:12090   */\n      and\n        /* \"#utility.yul\":12025:12090   */\n      swap1\n      pop\n        /* \"#utility.yul\":11970:12096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12102:12179   */\n    tag_255:\n        /* \"#utility.yul\":12139:12146   */\n      0x00\n        /* \"#utility.yul\":12168:12173   */\n      dup2\n        /* \"#utility.yul\":12157:12173   */\n      swap1\n      pop\n        /* \"#utility.yul\":12102:12179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12185:12271   */\n    tag_259:\n        /* \"#utility.yul\":12220:12227   */\n      0x00\n        /* \"#utility.yul\":12260:12264   */\n      0xff\n        /* \"#utility.yul\":12253:12258   */\n      dup3\n        /* \"#utility.yul\":12249:12265   */\n      and\n        /* \"#utility.yul\":12238:12265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12185:12271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12277:12584   */\n    tag_204:\n        /* \"#utility.yul\":12345:12346   */\n      0x00\n        /* \"#utility.yul\":12355:12468   */\n    tag_305:\n        /* \"#utility.yul\":12369:12375   */\n      dup4\n        /* \"#utility.yul\":12366:12367   */\n      dup2\n        /* \"#utility.yul\":12363:12376   */\n      lt\n        /* \"#utility.yul\":12355:12468   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":12454:12455   */\n      dup1\n        /* \"#utility.yul\":12449:12452   */\n      dup3\n        /* \"#utility.yul\":12445:12456   */\n      add\n        /* \"#utility.yul\":12439:12457   */\n      mload\n        /* \"#utility.yul\":12435:12436   */\n      dup2\n        /* \"#utility.yul\":12430:12433   */\n      dup5\n        /* \"#utility.yul\":12426:12437   */\n      add\n        /* \"#utility.yul\":12419:12458   */\n      mstore\n        /* \"#utility.yul\":12391:12393   */\n      0x20\n        /* \"#utility.yul\":12388:12389   */\n      dup2\n        /* \"#utility.yul\":12384:12394   */\n      add\n        /* \"#utility.yul\":12379:12394   */\n      swap1\n      pop\n        /* \"#utility.yul\":12355:12468   */\n      jump(tag_305)\n    tag_307:\n        /* \"#utility.yul\":12486:12492   */\n      dup4\n        /* \"#utility.yul\":12483:12484   */\n      dup2\n        /* \"#utility.yul\":12480:12493   */\n      gt\n        /* \"#utility.yul\":12477:12578   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":12566:12567   */\n      0x00\n        /* \"#utility.yul\":12557:12563   */\n      dup5\n        /* \"#utility.yul\":12552:12555   */\n      dup5\n        /* \"#utility.yul\":12548:12564   */\n      add\n        /* \"#utility.yul\":12541:12568   */\n      mstore\n        /* \"#utility.yul\":12477:12578   */\n    tag_308:\n        /* \"#utility.yul\":12326:12584   */\n      pop\n        /* \"#utility.yul\":12277:12584   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12590:12910   */\n    tag_69:\n        /* \"#utility.yul\":12634:12640   */\n      0x00\n        /* \"#utility.yul\":12671:12672   */\n      0x02\n        /* \"#utility.yul\":12665:12669   */\n      dup3\n        /* \"#utility.yul\":12661:12673   */\n      div\n        /* \"#utility.yul\":12651:12673   */\n      swap1\n      pop\n        /* \"#utility.yul\":12718:12719   */\n      0x01\n        /* \"#utility.yul\":12712:12716   */\n      dup3\n        /* \"#utility.yul\":12708:12720   */\n      and\n        /* \"#utility.yul\":12739:12757   */\n      dup1\n        /* \"#utility.yul\":12729:12810   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":12795:12799   */\n      0x7f\n        /* \"#utility.yul\":12787:12793   */\n      dup3\n        /* \"#utility.yul\":12783:12800   */\n      and\n        /* \"#utility.yul\":12773:12800   */\n      swap2\n      pop\n        /* \"#utility.yul\":12729:12810   */\n    tag_310:\n        /* \"#utility.yul\":12857:12859   */\n      0x20\n        /* \"#utility.yul\":12849:12855   */\n      dup3\n        /* \"#utility.yul\":12846:12860   */\n      lt\n        /* \"#utility.yul\":12826:12844   */\n      dup2\n        /* \"#utility.yul\":12823:12861   */\n      eq\n        /* \"#utility.yul\":12820:12904   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":12876:12894   */\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12820:12904   */\n    tag_311:\n        /* \"#utility.yul\":12641:12910   */\n      pop\n        /* \"#utility.yul\":12590:12910   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12916:13096   */\n    tag_295:\n        /* \"#utility.yul\":12964:13041   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12961:12962   */\n      0x00\n        /* \"#utility.yul\":12954:13042   */\n      mstore\n        /* \"#utility.yul\":13061:13065   */\n      0x11\n        /* \"#utility.yul\":13058:13059   */\n      0x04\n        /* \"#utility.yul\":13051:13066   */\n      mstore\n        /* \"#utility.yul\":13085:13089   */\n      0x24\n        /* \"#utility.yul\":13082:13083   */\n      0x00\n        /* \"#utility.yul\":13075:13090   */\n      revert\n        /* \"#utility.yul\":13102:13282   */\n    tag_313:\n        /* \"#utility.yul\":13150:13227   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13147:13148   */\n      0x00\n        /* \"#utility.yul\":13140:13228   */\n      mstore\n        /* \"#utility.yul\":13247:13251   */\n      0x22\n        /* \"#utility.yul\":13244:13245   */\n      0x04\n        /* \"#utility.yul\":13237:13252   */\n      mstore\n        /* \"#utility.yul\":13271:13275   */\n      0x24\n        /* \"#utility.yul\":13268:13269   */\n      0x00\n        /* \"#utility.yul\":13261:13276   */\n      revert\n        /* \"#utility.yul\":13411:13528   */\n    tag_175:\n        /* \"#utility.yul\":13520:13521   */\n      0x00\n        /* \"#utility.yul\":13517:13518   */\n      dup1\n        /* \"#utility.yul\":13510:13522   */\n      revert\n        /* \"#utility.yul\":13534:13636   */\n    tag_206:\n        /* \"#utility.yul\":13575:13581   */\n      0x00\n        /* \"#utility.yul\":13626:13628   */\n      0x1f\n        /* \"#utility.yul\":13622:13629   */\n      not\n        /* \"#utility.yul\":13617:13619   */\n      0x1f\n        /* \"#utility.yul\":13610:13615   */\n      dup4\n        /* \"#utility.yul\":13606:13620   */\n      add\n        /* \"#utility.yul\":13602:13630   */\n      and\n        /* \"#utility.yul\":13592:13630   */\n      swap1\n      pop\n        /* \"#utility.yul\":13534:13636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13642:13864   */\n    tag_211:\n        /* \"#utility.yul\":13782:13816   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13778:13779   */\n      0x00\n        /* \"#utility.yul\":13770:13776   */\n      dup3\n        /* \"#utility.yul\":13766:13780   */\n      add\n        /* \"#utility.yul\":13759:13817   */\n      mstore\n        /* \"#utility.yul\":13851:13856   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13846:13848   */\n      0x20\n        /* \"#utility.yul\":13838:13844   */\n      dup3\n        /* \"#utility.yul\":13834:13849   */\n      add\n        /* \"#utility.yul\":13827:13857   */\n      mstore\n        /* \"#utility.yul\":13642:13864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13870:14091   */\n    tag_216:\n        /* \"#utility.yul\":14010:14044   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":14006:14007   */\n      0x00\n        /* \"#utility.yul\":13998:14004   */\n      dup3\n        /* \"#utility.yul\":13994:14008   */\n      add\n        /* \"#utility.yul\":13987:14045   */\n      mstore\n        /* \"#utility.yul\":14079:14083   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14074:14076   */\n      0x20\n        /* \"#utility.yul\":14066:14072   */\n      dup3\n        /* \"#utility.yul\":14062:14077   */\n      add\n        /* \"#utility.yul\":14055:14084   */\n      mstore\n        /* \"#utility.yul\":13870:14091   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14097:14268   */\n    tag_221:\n        /* \"#utility.yul\":14237:14260   */\n      0x4e6f7420417070726f76656420746f20646f20736f0000000000000000000000\n        /* \"#utility.yul\":14233:14234   */\n      0x00\n        /* \"#utility.yul\":14225:14231   */\n      dup3\n        /* \"#utility.yul\":14221:14235   */\n      add\n        /* \"#utility.yul\":14214:14261   */\n      mstore\n        /* \"#utility.yul\":14097:14268   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14499   */\n    tag_226:\n        /* \"#utility.yul\":14414:14448   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14410:14411   */\n      0x00\n        /* \"#utility.yul\":14402:14408   */\n      dup3\n        /* \"#utility.yul\":14398:14412   */\n      add\n        /* \"#utility.yul\":14391:14449   */\n      mstore\n        /* \"#utility.yul\":14483:14491   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14478:14480   */\n      0x20\n        /* \"#utility.yul\":14470:14476   */\n      dup3\n        /* \"#utility.yul\":14466:14481   */\n      add\n        /* \"#utility.yul\":14459:14492   */\n      mstore\n        /* \"#utility.yul\":14274:14499   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14505:14732   */\n    tag_231:\n        /* \"#utility.yul\":14645:14679   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":14641:14642   */\n      0x00\n        /* \"#utility.yul\":14633:14639   */\n      dup3\n        /* \"#utility.yul\":14629:14643   */\n      add\n        /* \"#utility.yul\":14622:14680   */\n      mstore\n        /* \"#utility.yul\":14714:14724   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14709:14711   */\n      0x20\n        /* \"#utility.yul\":14701:14707   */\n      dup3\n        /* \"#utility.yul\":14697:14712   */\n      add\n        /* \"#utility.yul\":14690:14725   */\n      mstore\n        /* \"#utility.yul\":14505:14732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14738:14962   */\n    tag_236:\n        /* \"#utility.yul\":14878:14912   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14874:14875   */\n      0x00\n        /* \"#utility.yul\":14866:14872   */\n      dup3\n        /* \"#utility.yul\":14862:14876   */\n      add\n        /* \"#utility.yul\":14855:14913   */\n      mstore\n        /* \"#utility.yul\":14947:14954   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14942:14944   */\n      0x20\n        /* \"#utility.yul\":14934:14940   */\n      dup3\n        /* \"#utility.yul\":14930:14945   */\n      add\n        /* \"#utility.yul\":14923:14955   */\n      mstore\n        /* \"#utility.yul\":14738:14962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14968:15191   */\n    tag_241:\n        /* \"#utility.yul\":15108:15142   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":15104:15105   */\n      0x00\n        /* \"#utility.yul\":15096:15102   */\n      dup3\n        /* \"#utility.yul\":15092:15106   */\n      add\n        /* \"#utility.yul\":15085:15143   */\n      mstore\n        /* \"#utility.yul\":15177:15183   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15172:15174   */\n      0x20\n        /* \"#utility.yul\":15164:15170   */\n      dup3\n        /* \"#utility.yul\":15160:15175   */\n      add\n        /* \"#utility.yul\":15153:15184   */\n      mstore\n        /* \"#utility.yul\":14968:15191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15197:15421   */\n    tag_246:\n        /* \"#utility.yul\":15337:15371   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":15333:15334   */\n      0x00\n        /* \"#utility.yul\":15325:15331   */\n      dup3\n        /* \"#utility.yul\":15321:15335   */\n      add\n        /* \"#utility.yul\":15314:15372   */\n      mstore\n        /* \"#utility.yul\":15406:15413   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15401:15403   */\n      0x20\n        /* \"#utility.yul\":15393:15399   */\n      dup3\n        /* \"#utility.yul\":15389:15404   */\n      add\n        /* \"#utility.yul\":15382:15414   */\n      mstore\n        /* \"#utility.yul\":15197:15421   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15427:15608   */\n    tag_251:\n        /* \"#utility.yul\":15567:15600   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":15563:15564   */\n      0x00\n        /* \"#utility.yul\":15555:15561   */\n      dup3\n        /* \"#utility.yul\":15551:15565   */\n      add\n        /* \"#utility.yul\":15544:15601   */\n      mstore\n        /* \"#utility.yul\":15427:15608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15614:15736   */\n    tag_167:\n        /* \"#utility.yul\":15687:15711   */\n      tag_330\n        /* \"#utility.yul\":15705:15710   */\n      dup2\n        /* \"#utility.yul\":15687:15711   */\n      tag_296\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":15680:15685   */\n      dup2\n        /* \"#utility.yul\":15677:15712   */\n      eq\n        /* \"#utility.yul\":15667:15730   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":15726:15727   */\n      0x00\n        /* \"#utility.yul\":15723:15724   */\n      dup1\n        /* \"#utility.yul\":15716:15728   */\n      revert\n        /* \"#utility.yul\":15667:15730   */\n    tag_331:\n        /* \"#utility.yul\":15614:15736   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15742:15864   */\n    tag_171:\n        /* \"#utility.yul\":15815:15839   */\n      tag_333\n        /* \"#utility.yul\":15833:15838   */\n      dup2\n        /* \"#utility.yul\":15815:15839   */\n      tag_255\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":15808:15813   */\n      dup2\n        /* \"#utility.yul\":15805:15840   */\n      eq\n        /* \"#utility.yul\":15795:15858   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":15854:15855   */\n      0x00\n        /* \"#utility.yul\":15851:15852   */\n      dup1\n        /* \"#utility.yul\":15844:15856   */\n      revert\n        /* \"#utility.yul\":15795:15858   */\n    tag_334:\n        /* \"#utility.yul\":15742:15864   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085fb7d9fcfbf1cbfa360373e2fe687cebd834cf03290c4bdbcf209f462b3a8c464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:4"
															},
															"nodeType": "YulIf",
															"src": "262:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:4"
															},
															"nodeType": "YulIf",
															"src": "531:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:4",
														"type": ""
													}
												],
												"src": "448:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:4"
															},
															"nodeType": "YulIf",
															"src": "933:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:4",
														"type": ""
													}
												],
												"src": "809:853:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:4",
														"type": ""
													}
												],
												"src": "1668:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:4",
														"type": ""
													}
												],
												"src": "1803:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:4"
															},
															"nodeType": "YulIf",
															"src": "2022:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:4",
														"type": ""
													}
												],
												"src": "1884:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:4",
																"statements": []
															},
															"src": "2276:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:4"
															},
															"nodeType": "YulIf",
															"src": "2398:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:4",
														"type": ""
													}
												],
												"src": "2198:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:4"
															},
															"nodeType": "YulIf",
															"src": "2650:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:4"
															},
															"nodeType": "YulIf",
															"src": "2741:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:4",
														"type": ""
													}
												],
												"src": "2511:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:4"
															},
															"nodeType": "YulIf",
															"src": "2993:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:4",
														"type": ""
													}
												],
												"src": "2837:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:4",
														"type": ""
													}
												],
												"src": "3988:102:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001b7f38038062001b7f83398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6117c780620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce91906111d0565b60405180910390f35b6100f160048036038101906100ec9190610fd4565b61032f565b6040516100fe91906111b5565b60405180910390f35b61010f61034d565b60405161011c9190611312565b60405180910390f35b61013f600480360381019061013a9190610f81565b610357565b60405161014c91906111b5565b60405180910390f35b61015d6104df565b60405161016a919061132d565b60405180910390f35b61018d60048036038101906101889190610fd4565b6104e8565b60405161019a91906111b5565b60405180910390f35b6101bd60048036038101906101b89190610fd4565b610594565b005b6101d960048036038101906101d49190610f14565b610632565b6040516101e69190611312565b60405180910390f35b6101f761067a565b60405161020491906111d0565b60405180910390f35b61022760048036038101906102229190610fd4565b61070c565b60405161023491906111b5565b60405180910390f35b61025760048036038101906102529190610fd4565b6107f7565b60405161026491906111b5565b60405180910390f35b61028760048036038101906102829190610f41565b6108a5565b6040516102949190611312565b60405180910390f35b6060600380546102ac90611442565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890611442565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c61092c565b8484610934565b6001905092915050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090611232565b60405180910390fd5b6103f4848484610aff565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061043f61092c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690611272565b60405180910390fd5b6104d3856104cb61092c565b858403610934565b60019150509392505050565b60006012905090565b600061058a6104f561092c565b84846001600061050361092c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105859190611364565b610934565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90611232565b60405180910390fd5b61062e8282610d80565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461068990611442565b80601f01602080910402602001604051908101604052809291908181526020018280546106b590611442565b80156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b5050505050905090565b6000806001600061071b61092c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf906112d2565b60405180910390fd5b6107ec6107e361092c565b85858403610934565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611232565b60405180910390fd5b61089b61089461092c565b8484610aff565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b906112b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611212565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610af29190611312565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611292565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd6906111f2565b60405180910390fd5b610bea838383610ee0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790611252565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d039190611364565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d679190611312565b60405180910390a3610d7a848484610ee5565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de7906112f2565b60405180910390fd5b610dfc60008383610ee0565b8060026000828254610e0e9190611364565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e639190611364565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec89190611312565b60405180910390a3610edc60008383610ee5565b5050565b505050565b505050565b600081359050610ef981611763565b92915050565b600081359050610f0e8161177a565b92915050565b600060208284031215610f2a57610f296114d2565b5b6000610f3884828501610eea565b91505092915050565b60008060408385031215610f5857610f576114d2565b5b6000610f6685828601610eea565b9250506020610f7785828601610eea565b9150509250929050565b600080600060608486031215610f9a57610f996114d2565b5b6000610fa886828701610eea565b9350506020610fb986828701610eea565b9250506040610fca86828701610eff565b9150509250925092565b60008060408385031215610feb57610fea6114d2565b5b6000610ff985828601610eea565b925050602061100a85828601610eff565b9150509250929050565b61101d816113cc565b82525050565b600061102e82611348565b6110388185611353565b935061104881856020860161140f565b611051816114d7565b840191505092915050565b6000611069602383611353565b9150611074826114e8565b604082019050919050565b600061108c602283611353565b915061109782611537565b604082019050919050565b60006110af601583611353565b91506110ba82611586565b602082019050919050565b60006110d2602683611353565b91506110dd826115af565b604082019050919050565b60006110f5602883611353565b9150611100826115fe565b604082019050919050565b6000611118602583611353565b91506111238261164d565b604082019050919050565b600061113b602483611353565b91506111468261169c565b604082019050919050565b600061115e602583611353565b9150611169826116eb565b604082019050919050565b6000611181601f83611353565b915061118c8261173a565b602082019050919050565b6111a0816113f8565b82525050565b6111af81611402565b82525050565b60006020820190506111ca6000830184611014565b92915050565b600060208201905081810360008301526111ea8184611023565b905092915050565b6000602082019050818103600083015261120b8161105c565b9050919050565b6000602082019050818103600083015261122b8161107f565b9050919050565b6000602082019050818103600083015261124b816110a2565b9050919050565b6000602082019050818103600083015261126b816110c5565b9050919050565b6000602082019050818103600083015261128b816110e8565b9050919050565b600060208201905081810360008301526112ab8161110b565b9050919050565b600060208201905081810360008301526112cb8161112e565b9050919050565b600060208201905081810360008301526112eb81611151565b9050919050565b6000602082019050818103600083015261130b81611174565b9050919050565b60006020820190506113276000830184611197565b92915050565b600060208201905061134260008301846111a6565b92915050565b600081519050919050565b600082825260208201905092915050565b600061136f826113f8565b915061137a836113f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113af576113ae611474565b5b828201905092915050565b60006113c5826113d8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561142d578082015181840152602081019050611412565b8381111561143c576000848401525b50505050565b6000600282049050600182168061145a57607f821691505b6020821081141561146e5761146d6114a3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417070726f76656420746f20646f20736f0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61176c816113ba565b811461177757600080fd5b50565b611783816113f8565b811461178e57600080fd5b5056fea264697066735822122085fb7d9fcfbf1cbfa360373e2fe687cebd834cf03290c4bdbcf209f462b3a8c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B7F CODESIZE SUB DUP1 PUSH3 0x1B7F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C7 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343 PUSH2 0x33C PUSH2 0x92C JUMP JUMPDEST DUP5 DUP5 PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 DUP5 DUP5 DUP5 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x43F PUSH2 0x92C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D3 DUP6 PUSH2 0x4CB PUSH2 0x92C JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58A PUSH2 0x4F5 PUSH2 0x92C JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x92C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62E DUP3 DUP3 PUSH2 0xD80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x689 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B5 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x702 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x702 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x71B PUSH2 0x92C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EC PUSH2 0x7E3 PUSH2 0x92C JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x880 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x89B PUSH2 0x894 PUSH2 0x92C JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB66 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEA DUP4 DUP4 DUP4 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD67 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD7A DUP5 DUP5 DUP5 PUSH2 0xEE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE7 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFC PUSH1 0x0 DUP4 DUP4 PUSH2 0xEE0 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xEDC PUSH1 0x0 DUP4 DUP4 PUSH2 0xEE5 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEF9 DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0E DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2A JUMPI PUSH2 0xF29 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP5 DUP3 DUP6 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF57 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF66 DUP6 DUP3 DUP7 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF77 DUP6 DUP3 DUP7 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF9A JUMPI PUSH2 0xF99 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA8 DUP7 DUP3 DUP8 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFB9 DUP7 DUP3 DUP8 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFCA DUP7 DUP3 DUP8 ADD PUSH2 0xEFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEB JUMPI PUSH2 0xFEA PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF9 DUP6 DUP3 DUP7 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x100A DUP6 DUP3 DUP7 ADD PUSH2 0xEFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x101D DUP2 PUSH2 0x13CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102E DUP3 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x1038 DUP2 DUP6 PUSH2 0x1353 JUMP JUMPDEST SWAP4 POP PUSH2 0x1048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH2 0x1051 DUP2 PUSH2 0x14D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1069 PUSH1 0x23 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1074 DUP3 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108C PUSH1 0x22 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1097 DUP3 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AF PUSH1 0x15 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BA DUP3 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D2 PUSH1 0x26 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DD DUP3 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F5 PUSH1 0x28 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1100 DUP3 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1118 PUSH1 0x25 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1123 DUP3 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113B PUSH1 0x24 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1146 DUP3 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115E PUSH1 0x25 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1169 DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1181 PUSH1 0x1F DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x118C DUP3 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0x13F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x1402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1014 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11EA DUP2 DUP5 PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x120B DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122B DUP2 PUSH2 0x107F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126B DUP2 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x128B DUP2 PUSH2 0x10E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12AB DUP2 PUSH2 0x110B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CB DUP2 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12EB DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x130B DUP2 PUSH2 0x1174 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1327 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1342 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136F DUP3 PUSH2 0x13F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x137A DUP4 PUSH2 0x13F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x13AF JUMPI PUSH2 0x13AE PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C5 DUP3 PUSH2 0x13D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x145A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420417070726F76656420746F20646F20736F0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP2 EQ PUSH2 0x1777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1783 DUP2 PUSH2 0x13F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xFB PUSH30 0x9FCFBF1CBFA360373E2FE687CEBD834CF03290C4BDBCF209F462B3A8C464 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "1367:10979:1:-:0;;;1984:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2058:5;2050;:13;;;;;;;;;;;;:::i;:::-;;2083:7;2073;:17;;;;;;;;;;;;:::i;:::-;;1984:122;;1367:10979;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1367:10979:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_601": {
									"entryPoint": 3813,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_579": {
									"entryPoint": 2356,
									"id": 579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_590": {
									"entryPoint": 3808,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_462": {
									"entryPoint": 3456,
									"id": 462,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 2348,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_406": {
									"entryPoint": 2815,
									"id": 406,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_192": {
									"entryPoint": 2213,
									"id": 192,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_213": {
									"entryPoint": 815,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_151": {
									"entryPoint": 1586,
									"id": 151,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_110": {
									"entryPoint": 1247,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_329": {
									"entryPoint": 1804,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_290": {
									"entryPoint": 1256,
									"id": 290,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_137": {
									"entryPoint": 1428,
									"id": 137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_90": {
									"entryPoint": 669,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_100": {
									"entryPoint": 1658,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_120": {
									"entryPoint": 845,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_263": {
									"entryPoint": 855,
									"id": 263,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_174": {
									"entryPoint": 2039,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 5352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 5431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 5551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 5867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 5946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15867:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"src": "2332:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:4",
														"type": ""
													}
												],
												"src": "2702:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:4",
														"type": ""
													}
												],
												"src": "3074:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:4",
														"type": ""
													}
												],
												"src": "3446:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:4",
														"type": ""
													}
												],
												"src": "3818:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:4",
														"type": ""
													}
												],
												"src": "4190:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:4",
														"type": ""
													}
												],
												"src": "4562:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:4",
														"type": ""
													}
												],
												"src": "4934:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5462:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5528:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5533:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5469:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5634:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5545:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5647:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5658:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5654:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5647:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5440:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5448:3:4",
														"type": ""
													}
												],
												"src": "5306:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5824:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5834:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5900:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5905:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5841:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5841:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5834:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6006:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "5917:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5917:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5917:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6019:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6030:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6019:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5812:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5820:3:4",
														"type": ""
													}
												],
												"src": "5678:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6115:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6132:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6155:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6137:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6137:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6125:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6125:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6103:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6110:3:4",
														"type": ""
													}
												],
												"src": "6050:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6252:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6273:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6257:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6257:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6245:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6245:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6245:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6223:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6230:3:4",
														"type": ""
													}
												],
												"src": "6174:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6384:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6394:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6406:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6417:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6402:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6402:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6394:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6468:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6481:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6492:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6477:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6477:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6430:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6430:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6430:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6356:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6368:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6379:4:4",
														"type": ""
													}
												],
												"src": "6292:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6636:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6648:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6659:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6644:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6636:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6683:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6679:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6702:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6708:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6698:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6698:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6672:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6672:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6728:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6809:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6736:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6736:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6728:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6598:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6610:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6621:4:4",
														"type": ""
													}
												],
												"src": "6508:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6998:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7008:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7020:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7031:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7016:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7008:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7055:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7066:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7051:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7074:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7070:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7070:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7044:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7044:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7100:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7234:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7108:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7108:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7100:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6978:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6993:4:4",
														"type": ""
													}
												],
												"src": "6827:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7423:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7433:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7441:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7433:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7480:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7491:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7476:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7476:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7499:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7495:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7495:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7469:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7469:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7525:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7659:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7533:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7533:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7525:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7403:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7418:4:4",
														"type": ""
													}
												],
												"src": "7252:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7848:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7858:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7870:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7866:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7858:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7916:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7901:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7924:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7920:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7894:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7950:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8084:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7958:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7950:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7828:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7843:4:4",
														"type": ""
													}
												],
												"src": "7677:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8273:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8283:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8295:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8291:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8283:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8330:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8341:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8326:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8349:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8355:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8345:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8345:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8319:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8319:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8319:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8375:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8509:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8383:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8375:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8253:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8268:4:4",
														"type": ""
													}
												],
												"src": "8102:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8698:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8708:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8720:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8731:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8755:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8766:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8751:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8751:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8774:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8780:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8770:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8770:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8744:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8744:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8744:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8800:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8934:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8808:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8808:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8800:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8678:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8693:4:4",
														"type": ""
													}
												],
												"src": "8527:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9123:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9133:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9145:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9156:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9133:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9180:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9191:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9176:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9176:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9199:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9205:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9195:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9195:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9169:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9169:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9225:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9359:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9233:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9233:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9225:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9103:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9118:4:4",
														"type": ""
													}
												],
												"src": "8952:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9548:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9558:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9570:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9581:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9558:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9605:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9616:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9601:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9624:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9594:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9594:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9784:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9658:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9528:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9543:4:4",
														"type": ""
													}
												],
												"src": "9377:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9973:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9983:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9995:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9983:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10030:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10041:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10026:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10026:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10049:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10055:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10045:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10045:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10019:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10019:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10019:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10075:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10209:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10083:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10083:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10075:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9953:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9968:4:4",
														"type": ""
													}
												],
												"src": "9802:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10398:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10408:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10420:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10431:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10416:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10416:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10408:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10455:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10466:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10451:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10451:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10474:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10480:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10470:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10470:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10444:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10444:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10444:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10500:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10634:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10508:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10500:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10378:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10393:4:4",
														"type": ""
													}
												],
												"src": "10227:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10750:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10760:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10772:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10783:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10768:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10768:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10760:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10840:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10853:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10864:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10849:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10849:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10796:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10796:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10796:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10722:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10734:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10745:4:4",
														"type": ""
													}
												],
												"src": "10652:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10974:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10984:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10996:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11007:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10992:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10992:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10984:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11060:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11073:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11084:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11069:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11069:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11020:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11020:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11020:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10946:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10958:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10969:4:4",
														"type": ""
													}
												],
												"src": "10880:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11140:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11150:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11166:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11160:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11160:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11150:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11133:6:4",
														"type": ""
													}
												],
												"src": "11100:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11240:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11251:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11267:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11261:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11261:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11251:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11223:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11233:6:4",
														"type": ""
													}
												],
												"src": "11181:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11382:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11399:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11404:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11392:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11392:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11392:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11420:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11439:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11444:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11435:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11435:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11420:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11354:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11359:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11370:11:4",
														"type": ""
													}
												],
												"src": "11286:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11505:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11515:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11538:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11520:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11520:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11515:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11549:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11572:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11554:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11554:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11549:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11712:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11714:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11714:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11714:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11633:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11640:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11708:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11636:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11636:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11630:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11630:81:4"
															},
															"nodeType": "YulIf",
															"src": "11627:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11744:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11755:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11758:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11751:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11751:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11744:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11492:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11495:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11501:3:4",
														"type": ""
													}
												],
												"src": "11461:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11817:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11827:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11856:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11838:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11838:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11827:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11799:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11809:7:4",
														"type": ""
													}
												],
												"src": "11772:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11916:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11926:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11951:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11944:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11944:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11937:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11937:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11926:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11898:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11908:7:4",
														"type": ""
													}
												],
												"src": "11874:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12015:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12025:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12040:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12036:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12036:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12025:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11997:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12007:7:4",
														"type": ""
													}
												],
												"src": "11970:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12147:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12157:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12168:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12157:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12129:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12139:7:4",
														"type": ""
													}
												],
												"src": "12102:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12228:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12238:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12253:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12260:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12249:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12249:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12238:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12210:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12220:7:4",
														"type": ""
													}
												],
												"src": "12185:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12326:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12336:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12345:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12340:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12405:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12430:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12435:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12426:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12426:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12449:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12454:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12445:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12445:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12439:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12439:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12419:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12419:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12419:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12366:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12369:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12363:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12363:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12377:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12379:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12388:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12391:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12384:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12384:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12379:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12359:3:4",
																"statements": []
															},
															"src": "12355:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12502:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12552:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12557:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12548:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12548:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12566:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12541:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12541:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12541:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12483:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12486:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12480:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12480:13:4"
															},
															"nodeType": "YulIf",
															"src": "12477:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12308:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12313:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12318:6:4",
														"type": ""
													}
												],
												"src": "12277:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12641:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12651:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12665:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12671:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12661:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12651:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12682:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12712:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12718:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12708:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12708:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12686:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12759:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12773:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12787:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12795:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12783:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12783:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12773:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12739:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12732:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12732:26:4"
															},
															"nodeType": "YulIf",
															"src": "12729:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12862:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12876:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12876:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12876:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12826:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12857:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12846:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12846:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12823:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12823:38:4"
															},
															"nodeType": "YulIf",
															"src": "12820:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12625:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12634:6:4",
														"type": ""
													}
												],
												"src": "12590:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12944:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12961:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12964:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12954:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12954:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12954:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13058:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13061:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13051:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13051:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13051:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13082:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13085:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13075:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13075:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13075:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12916:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13130:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13147:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13150:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13140:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13244:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13247:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13237:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13237:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13237:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13268:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13271:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13261:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13261:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13261:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13102:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13377:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13394:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13397:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13387:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13387:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13387:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13288:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13517:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13520:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13510:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13510:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13510:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13411:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13582:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13592:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13610:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13617:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13606:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13626:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13622:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13622:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13602:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13602:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13592:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13565:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13575:6:4",
														"type": ""
													}
												],
												"src": "13534:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13748:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13778:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13766:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13766:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13782:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13759:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13759:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13759:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13838:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13846:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13834:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13834:15:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13851:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13827:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13827:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13827:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13740:6:4",
														"type": ""
													}
												],
												"src": "13642:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13976:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13998:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14006:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13994:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13994:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14010:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13987:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13987:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13987:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14066:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14074:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14062:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14062:15:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14079:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14055:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14055:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14055:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13968:6:4",
														"type": ""
													}
												],
												"src": "13870:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14203:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14225:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14233:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14221:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14221:14:4"
																	},
																	{
																		"hexValue": "4e6f7420417070726f76656420746f20646f20736f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14237:23:4",
																		"type": "",
																		"value": "Not Approved to do so"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14214:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14214:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14214:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14195:6:4",
														"type": ""
													}
												],
												"src": "14097:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14380:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14402:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14410:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14398:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14398:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14414:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14391:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14391:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14391:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14470:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14478:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14466:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14466:15:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14483:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14459:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14459:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14459:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14372:6:4",
														"type": ""
													}
												],
												"src": "14274:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14611:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14633:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14641:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14629:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14629:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14645:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14622:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14622:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14622:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14701:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14709:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14697:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14697:15:4"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14714:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14690:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14690:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14690:35:4"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14603:6:4",
														"type": ""
													}
												],
												"src": "14505:227:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14844:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14866:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14874:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14862:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14862:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14878:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14855:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14855:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14855:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14934:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14942:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14930:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14930:15:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14947:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14923:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14923:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14923:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14836:6:4",
														"type": ""
													}
												],
												"src": "14738:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15074:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15096:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15104:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15092:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15092:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15108:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15085:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15085:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15164:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15172:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15160:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15160:15:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15177:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15153:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15153:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15153:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15066:6:4",
														"type": ""
													}
												],
												"src": "14968:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15303:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15325:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15333:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15321:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15321:14:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15337:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15314:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15314:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15314:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15393:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15401:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15389:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15389:15:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15406:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15382:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15382:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15382:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15295:6:4",
														"type": ""
													}
												],
												"src": "15197:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15533:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15555:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15563:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15551:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15551:14:4"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15567:33:4",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15544:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15544:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15544:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15525:6:4",
														"type": ""
													}
												],
												"src": "15427:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15657:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15714:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15723:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15726:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15716:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15716:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15716:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15680:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15705:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15687:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15687:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15677:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15677:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15670:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15670:43:4"
															},
															"nodeType": "YulIf",
															"src": "15667:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15650:5:4",
														"type": ""
													}
												],
												"src": "15614:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15785:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15842:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15851:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15854:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15844:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15844:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15844:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15808:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15833:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15815:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15815:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15805:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15805:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15798:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15798:43:4"
															},
															"nodeType": "YulIf",
															"src": "15795:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15778:5:4",
														"type": ""
													}
												],
												"src": "15742:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Approved to do so\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f19146101a357806370a08231146101bf57806395d89b41146101ef578063a457c2d71461020d578063a9059cbb1461023d578063dd62ed3e1461026d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029d565b6040516100ce91906111d0565b60405180910390f35b6100f160048036038101906100ec9190610fd4565b61032f565b6040516100fe91906111b5565b60405180910390f35b61010f61034d565b60405161011c9190611312565b60405180910390f35b61013f600480360381019061013a9190610f81565b610357565b60405161014c91906111b5565b60405180910390f35b61015d6104df565b60405161016a919061132d565b60405180910390f35b61018d60048036038101906101889190610fd4565b6104e8565b60405161019a91906111b5565b60405180910390f35b6101bd60048036038101906101b89190610fd4565b610594565b005b6101d960048036038101906101d49190610f14565b610632565b6040516101e69190611312565b60405180910390f35b6101f761067a565b60405161020491906111d0565b60405180910390f35b61022760048036038101906102229190610fd4565b61070c565b60405161023491906111b5565b60405180910390f35b61025760048036038101906102529190610fd4565b6107f7565b60405161026491906111b5565b60405180910390f35b61028760048036038101906102829190610f41565b6108a5565b6040516102949190611312565b60405180910390f35b6060600380546102ac90611442565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890611442565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061034361033c61092c565b8484610934565b6001905092915050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e090611232565b60405180910390fd5b6103f4848484610aff565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061043f61092c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b690611272565b60405180910390fd5b6104d3856104cb61092c565b858403610934565b60019150509392505050565b60006012905090565b600061058a6104f561092c565b84846001600061050361092c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105859190611364565b610934565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90611232565b60405180910390fd5b61062e8282610d80565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461068990611442565b80601f01602080910402602001604051908101604052809291908181526020018280546106b590611442565b80156107025780601f106106d757610100808354040283529160200191610702565b820191906000526020600020905b8154815290600101906020018083116106e557829003601f168201915b5050505050905090565b6000806001600061071b61092c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf906112d2565b60405180910390fd5b6107ec6107e361092c565b85858403610934565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610889576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088090611232565b60405180910390fd5b61089b61089461092c565b8484610aff565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b906112b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611212565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610af29190611312565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6690611292565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd6906111f2565b60405180910390fd5b610bea838383610ee0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6790611252565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d039190611364565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d679190611312565b60405180910390a3610d7a848484610ee5565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610df0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de7906112f2565b60405180910390fd5b610dfc60008383610ee0565b8060026000828254610e0e9190611364565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e639190611364565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec89190611312565b60405180910390a3610edc60008383610ee5565b5050565b505050565b505050565b600081359050610ef981611763565b92915050565b600081359050610f0e8161177a565b92915050565b600060208284031215610f2a57610f296114d2565b5b6000610f3884828501610eea565b91505092915050565b60008060408385031215610f5857610f576114d2565b5b6000610f6685828601610eea565b9250506020610f7785828601610eea565b9150509250929050565b600080600060608486031215610f9a57610f996114d2565b5b6000610fa886828701610eea565b9350506020610fb986828701610eea565b9250506040610fca86828701610eff565b9150509250925092565b60008060408385031215610feb57610fea6114d2565b5b6000610ff985828601610eea565b925050602061100a85828601610eff565b9150509250929050565b61101d816113cc565b82525050565b600061102e82611348565b6110388185611353565b935061104881856020860161140f565b611051816114d7565b840191505092915050565b6000611069602383611353565b9150611074826114e8565b604082019050919050565b600061108c602283611353565b915061109782611537565b604082019050919050565b60006110af601583611353565b91506110ba82611586565b602082019050919050565b60006110d2602683611353565b91506110dd826115af565b604082019050919050565b60006110f5602883611353565b9150611100826115fe565b604082019050919050565b6000611118602583611353565b91506111238261164d565b604082019050919050565b600061113b602483611353565b91506111468261169c565b604082019050919050565b600061115e602583611353565b9150611169826116eb565b604082019050919050565b6000611181601f83611353565b915061118c8261173a565b602082019050919050565b6111a0816113f8565b82525050565b6111af81611402565b82525050565b60006020820190506111ca6000830184611014565b92915050565b600060208201905081810360008301526111ea8184611023565b905092915050565b6000602082019050818103600083015261120b8161105c565b9050919050565b6000602082019050818103600083015261122b8161107f565b9050919050565b6000602082019050818103600083015261124b816110a2565b9050919050565b6000602082019050818103600083015261126b816110c5565b9050919050565b6000602082019050818103600083015261128b816110e8565b9050919050565b600060208201905081810360008301526112ab8161110b565b9050919050565b600060208201905081810360008301526112cb8161112e565b9050919050565b600060208201905081810360008301526112eb81611151565b9050919050565b6000602082019050818103600083015261130b81611174565b9050919050565b60006020820190506113276000830184611197565b92915050565b600060208201905061134260008301846111a6565b92915050565b600081519050919050565b600082825260208201905092915050565b600061136f826113f8565b915061137a836113f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113af576113ae611474565b5b828201905092915050565b60006113c5826113d8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561142d578082015181840152602081019050611412565b8381111561143c576000848401525b50505050565b6000600282049050600182168061145a57607f821691505b6020821081141561146e5761146d6114a3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417070726f76656420746f20646f20736f0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b61176c816113ba565b811461177757600080fd5b50565b611783816113f8565b811461178e57600080fd5b5056fea264697066735822122085fb7d9fcfbf1cbfa360373e2fe687cebd834cf03290c4bdbcf209f462b3a8c464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x26D JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x594 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343 PUSH2 0x33C PUSH2 0x92C JUMP JUMPDEST DUP5 DUP5 PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 DUP5 DUP5 DUP5 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x43F PUSH2 0x92C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B6 SWAP1 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D3 DUP6 PUSH2 0x4CB PUSH2 0x92C JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58A PUSH2 0x4F5 PUSH2 0x92C JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x92C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62E DUP3 DUP3 PUSH2 0xD80 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x689 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B5 SWAP1 PUSH2 0x1442 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x702 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x702 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x71B PUSH2 0x92C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CF SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EC PUSH2 0x7E3 PUSH2 0x92C JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x934 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x880 SWAP1 PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x89B PUSH2 0x894 PUSH2 0x92C JUMP JUMPDEST DUP5 DUP5 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF2 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB66 SWAP1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEA DUP4 DUP4 DUP4 PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC67 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD03 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD67 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD7A DUP5 DUP5 DUP5 PUSH2 0xEE5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE7 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDFC PUSH1 0x0 DUP4 DUP4 PUSH2 0xEE0 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE0E SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x1364 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEC8 SWAP2 SWAP1 PUSH2 0x1312 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xEDC PUSH1 0x0 DUP4 DUP4 PUSH2 0xEE5 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEF9 DUP2 PUSH2 0x1763 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0E DUP2 PUSH2 0x177A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF2A JUMPI PUSH2 0xF29 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF38 DUP5 DUP3 DUP6 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF58 JUMPI PUSH2 0xF57 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF66 DUP6 DUP3 DUP7 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF77 DUP6 DUP3 DUP7 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF9A JUMPI PUSH2 0xF99 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA8 DUP7 DUP3 DUP8 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFB9 DUP7 DUP3 DUP8 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFCA DUP7 DUP3 DUP8 ADD PUSH2 0xEFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFEB JUMPI PUSH2 0xFEA PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF9 DUP6 DUP3 DUP7 ADD PUSH2 0xEEA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x100A DUP6 DUP3 DUP7 ADD PUSH2 0xEFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x101D DUP2 PUSH2 0x13CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102E DUP3 PUSH2 0x1348 JUMP JUMPDEST PUSH2 0x1038 DUP2 DUP6 PUSH2 0x1353 JUMP JUMPDEST SWAP4 POP PUSH2 0x1048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x140F JUMP JUMPDEST PUSH2 0x1051 DUP2 PUSH2 0x14D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1069 PUSH1 0x23 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1074 DUP3 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x108C PUSH1 0x22 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1097 DUP3 PUSH2 0x1537 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AF PUSH1 0x15 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x10BA DUP3 PUSH2 0x1586 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D2 PUSH1 0x26 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DD DUP3 PUSH2 0x15AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F5 PUSH1 0x28 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1100 DUP3 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1118 PUSH1 0x25 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1123 DUP3 PUSH2 0x164D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113B PUSH1 0x24 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1146 DUP3 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115E PUSH1 0x25 DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1169 DUP3 PUSH2 0x16EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1181 PUSH1 0x1F DUP4 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x118C DUP3 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A0 DUP2 PUSH2 0x13F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x1402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1014 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11EA DUP2 DUP5 PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x120B DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x122B DUP2 PUSH2 0x107F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x124B DUP2 PUSH2 0x10A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x126B DUP2 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x128B DUP2 PUSH2 0x10E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12AB DUP2 PUSH2 0x110B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CB DUP2 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12EB DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x130B DUP2 PUSH2 0x1174 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1327 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1197 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1342 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136F DUP3 PUSH2 0x13F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x137A DUP4 PUSH2 0x13F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x13AF JUMPI PUSH2 0x13AE PUSH2 0x1474 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C5 DUP3 PUSH2 0x13D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1412 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x143C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x145A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x146E JUMPI PUSH2 0x146D PUSH2 0x14A3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420417070726F76656420746F20646F20736F0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x176C DUP2 PUSH2 0x13BA JUMP JUMPDEST DUP2 EQ PUSH2 0x1777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1783 DUP2 PUSH2 0x13F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x178E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xFB PUSH30 0x9FCFBF1CBFA360373E2FE687CEBD834CF03290C4BDBCF209F462B3A8C464 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "1367:10979:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4572:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3376:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5205:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3225:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6091:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3534:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3714:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2499:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6790:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4042:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4285:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:98;2342:13;2374:5;2367:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:98;:::o;4572:166::-;4655:4;4671:39;4680:12;:10;:12::i;:::-;4694:7;4703:6;4671:8;:39::i;:::-;4727:4;4720:11;;4572:166;;;;:::o;3376:106::-;3437:7;3463:12;;3456:19;;3376:106;:::o;5205:491::-;5354:4;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5370:36:::1;5380:6;5388:9;5399:6;5370:9;:36::i;:::-;5417:24;5444:11;:19;5456:6;5444:19;;;;;;;;;;;;;;;:33;5464:12;:10;:12::i;:::-;5444:33;;;;;;;;;;;;;;;;5417:60;;5515:6;5495:16;:26;;5487:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5600:57;5609:6;5617:12;:10;:12::i;:::-;5650:6;5631:16;:25;5600:8;:57::i;:::-;5685:4;5678:11;;;5205:491:::0;;;;;:::o;3225:91::-;3283:5;3307:2;3300:9;;3225:91;:::o;6091:212::-;6179:4;6195:80;6204:12;:10;:12::i;:::-;6218:7;6264:10;6227:11;:25;6239:12;:10;:12::i;:::-;6227:25;;;;;;;;;;;;;;;:34;6253:7;6227:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;6195:8;:80::i;:::-;6292:4;6285:11;;6091:212;;;;:::o;3534:122::-;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3632:17:::1;3638:2;3642:6;3632:5;:17::i;:::-;3534:122:::0;;:::o;3714:125::-;3788:7;3814:9;:18;3824:7;3814:18;;;;;;;;;;;;;;;;3807:25;;3714:125;;;:::o;2499:102::-;2555:13;2587:7;2580:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:102;:::o;6790:405::-;6883:4;6899:24;6926:11;:25;6938:12;:10;:12::i;:::-;6926:25;;;;;;;;;;;;;;;:34;6952:7;6926:34;;;;;;;;;;;;;;;;6899:61;;6998:15;6978:16;:35;;6970:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7089:67;7098:12;:10;:12::i;:::-;7112:7;7140:15;7121:16;:34;7089:8;:67::i;:::-;7184:4;7177:11;;;6790:405;;;;:::o;4042:185::-;4141:4;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4157:42:::1;4167:12;:10;:12::i;:::-;4181:9;4192:6;4157:9;:42::i;:::-;4216:4;4209:11;;4042:185:::0;;;;:::o;4285:149::-;4374:7;4400:11;:18;4412:5;4400:18;;;;;;;;;;;;;;;:27;4419:7;4400:27;;;;;;;;;;;;;;;;4393:34;;4285:149;;;;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;10366:370:1:-;10514:1;10497:19;;:5;:19;;;;10489:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10594:1;10575:21;;:7;:21;;;;10567:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10676:6;10646:11;:18;10658:5;10646:18;;;;;;;;;;;;;;;:27;10665:7;10646:27;;;;;;;;;;;;;;;:36;;;;10713:7;10697:32;;10706:5;10697:32;;;10722:6;10697:32;;;;;;:::i;:::-;;;;;;;;10366:370;;;:::o;7669:713::-;7822:1;7804:20;;:6;:20;;;;7796:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7905:1;7884:23;;:9;:23;;;;7876:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7958:47;7979:6;7987:9;7998:6;7958:20;:47::i;:::-;8016:21;8040:9;:17;8050:6;8040:17;;;;;;;;;;;;;;;;8016:41;;8092:6;8075:13;:23;;8067:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;8211:6;8195:13;:22;8175:9;:17;8185:6;8175:17;;;;;;;;;;;;;;;:42;;;;8261:6;8237:9;:20;8247:9;8237:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8300:9;8283:35;;8292:6;8283:35;;;8311:6;8283:35;;;;;;:::i;:::-;;;;;;;;8329:46;8349:6;8357:9;8368:6;8329:19;:46::i;:::-;7786:596;7669:713;;;:::o;8658:389::-;8760:1;8741:21;;:7;:21;;;;8733:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8809:49;8838:1;8842:7;8851:6;8809:20;:49::i;:::-;8885:6;8869:12;;:22;;;;;;;:::i;:::-;;;;;;;;8923:6;8901:9;:18;8911:7;8901:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8965:7;8944:37;;8961:1;8944:37;;;8974:6;8944:37;;;;;;:::i;:::-;;;;;;;;8992:48;9020:1;9024:7;9033:6;8992:19;:48::i;:::-;8658:389;;:::o;11320:121::-;;;;:::o;12029:120::-;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:::-;5448:3;5469:67;5533:2;5528:3;5469:67;:::i;:::-;5462:74;;5545:93;5634:3;5545:93;:::i;:::-;5663:2;5658:3;5654:12;5647:19;;5306:366;;;:::o;5678:::-;5820:3;5841:67;5905:2;5900:3;5841:67;:::i;:::-;5834:74;;5917:93;6006:3;5917:93;:::i;:::-;6035:2;6030:3;6026:12;6019:19;;5678:366;;;:::o;6050:118::-;6137:24;6155:5;6137:24;:::i;:::-;6132:3;6125:37;6050:118;;:::o;6174:112::-;6257:22;6273:5;6257:22;:::i;:::-;6252:3;6245:35;6174:112;;:::o;6292:210::-;6379:4;6417:2;6406:9;6402:18;6394:26;;6430:65;6492:1;6481:9;6477:17;6468:6;6430:65;:::i;:::-;6292:210;;;;:::o;6508:313::-;6621:4;6659:2;6648:9;6644:18;6636:26;;6708:9;6702:4;6698:20;6694:1;6683:9;6679:17;6672:47;6736:78;6809:4;6800:6;6736:78;:::i;:::-;6728:86;;6508:313;;;;:::o;6827:419::-;6993:4;7031:2;7020:9;7016:18;7008:26;;7080:9;7074:4;7070:20;7066:1;7055:9;7051:17;7044:47;7108:131;7234:4;7108:131;:::i;:::-;7100:139;;6827:419;;;:::o;7252:::-;7418:4;7456:2;7445:9;7441:18;7433:26;;7505:9;7499:4;7495:20;7491:1;7480:9;7476:17;7469:47;7533:131;7659:4;7533:131;:::i;:::-;7525:139;;7252:419;;;:::o;7677:::-;7843:4;7881:2;7870:9;7866:18;7858:26;;7930:9;7924:4;7920:20;7916:1;7905:9;7901:17;7894:47;7958:131;8084:4;7958:131;:::i;:::-;7950:139;;7677:419;;;:::o;8102:::-;8268:4;8306:2;8295:9;8291:18;8283:26;;8355:9;8349:4;8345:20;8341:1;8330:9;8326:17;8319:47;8383:131;8509:4;8383:131;:::i;:::-;8375:139;;8102:419;;;:::o;8527:::-;8693:4;8731:2;8720:9;8716:18;8708:26;;8780:9;8774:4;8770:20;8766:1;8755:9;8751:17;8744:47;8808:131;8934:4;8808:131;:::i;:::-;8800:139;;8527:419;;;:::o;8952:::-;9118:4;9156:2;9145:9;9141:18;9133:26;;9205:9;9199:4;9195:20;9191:1;9180:9;9176:17;9169:47;9233:131;9359:4;9233:131;:::i;:::-;9225:139;;8952:419;;;:::o;9377:::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:::-;9968:4;10006:2;9995:9;9991:18;9983:26;;10055:9;10049:4;10045:20;10041:1;10030:9;10026:17;10019:47;10083:131;10209:4;10083:131;:::i;:::-;10075:139;;9802:419;;;:::o;10227:::-;10393:4;10431:2;10420:9;10416:18;10408:26;;10480:9;10474:4;10470:20;10466:1;10455:9;10451:17;10444:47;10508:131;10634:4;10508:131;:::i;:::-;10500:139;;10227:419;;;:::o;10652:222::-;10745:4;10783:2;10772:9;10768:18;10760:26;;10796:71;10864:1;10853:9;10849:17;10840:6;10796:71;:::i;:::-;10652:222;;;;:::o;10880:214::-;10969:4;11007:2;10996:9;10992:18;10984:26;;11020:67;11084:1;11073:9;11069:17;11060:6;11020:67;:::i;:::-;10880:214;;;;:::o;11181:99::-;11233:6;11267:5;11261:12;11251:22;;11181:99;;;:::o;11286:169::-;11370:11;11404:6;11399:3;11392:19;11444:4;11439:3;11435:14;11420:29;;11286:169;;;;:::o;11461:305::-;11501:3;11520:20;11538:1;11520:20;:::i;:::-;11515:25;;11554:20;11572:1;11554:20;:::i;:::-;11549:25;;11708:1;11640:66;11636:74;11633:1;11630:81;11627:107;;;11714:18;;:::i;:::-;11627:107;11758:1;11755;11751:9;11744:16;;11461:305;;;;:::o;11772:96::-;11809:7;11838:24;11856:5;11838:24;:::i;:::-;11827:35;;11772:96;;;:::o;11874:90::-;11908:7;11951:5;11944:13;11937:21;11926:32;;11874:90;;;:::o;11970:126::-;12007:7;12047:42;12040:5;12036:54;12025:65;;11970:126;;;:::o;12102:77::-;12139:7;12168:5;12157:16;;12102:77;;;:::o;12185:86::-;12220:7;12260:4;12253:5;12249:16;12238:27;;12185:86;;;:::o;12277:307::-;12345:1;12355:113;12369:6;12366:1;12363:13;12355:113;;;12454:1;12449:3;12445:11;12439:18;12435:1;12430:3;12426:11;12419:39;12391:2;12388:1;12384:10;12379:15;;12355:113;;;12486:6;12483:1;12480:13;12477:101;;;12566:1;12557:6;12552:3;12548:16;12541:27;12477:101;12326:258;12277:307;;;:::o;12590:320::-;12634:6;12671:1;12665:4;12661:12;12651:22;;12718:1;12712:4;12708:12;12739:18;12729:81;;12795:4;12787:6;12783:17;12773:27;;12729:81;12857:2;12849:6;12846:14;12826:18;12823:38;12820:84;;;12876:18;;:::i;:::-;12820:84;12641:269;12590:320;;;:::o;12916:180::-;12964:77;12961:1;12954:88;13061:4;13058:1;13051:15;13085:4;13082:1;13075:15;13102:180;13150:77;13147:1;13140:88;13247:4;13244:1;13237:15;13271:4;13268:1;13261:15;13411:117;13520:1;13517;13510:12;13534:102;13575:6;13626:2;13622:7;13617:2;13610:5;13606:14;13602:28;13592:38;;13534:102;;;:::o;13642:222::-;13782:34;13778:1;13770:6;13766:14;13759:58;13851:5;13846:2;13838:6;13834:15;13827:30;13642:222;:::o;13870:221::-;14010:34;14006:1;13998:6;13994:14;13987:58;14079:4;14074:2;14066:6;14062:15;14055:29;13870:221;:::o;14097:171::-;14237:23;14233:1;14225:6;14221:14;14214:47;14097:171;:::o;14274:225::-;14414:34;14410:1;14402:6;14398:14;14391:58;14483:8;14478:2;14470:6;14466:15;14459:33;14274:225;:::o;14505:227::-;14645:34;14641:1;14633:6;14629:14;14622:58;14714:10;14709:2;14701:6;14697:15;14690:35;14505:227;:::o;14738:224::-;14878:34;14874:1;14866:6;14862:14;14855:58;14947:7;14942:2;14934:6;14930:15;14923:32;14738:224;:::o;14968:223::-;15108:34;15104:1;15096:6;15092:14;15085:58;15177:6;15172:2;15164:6;15160:15;15153:31;14968:223;:::o;15197:224::-;15337:34;15333:1;15325:6;15321:14;15314:58;15406:7;15401:2;15393:6;15389:15;15382:32;15197:224;:::o;15427:181::-;15567:33;15563:1;15555:6;15551:14;15544:57;15427:181;:::o;15614:122::-;15687:24;15705:5;15687:24;:::i;:::-;15680:5;15677:35;15667:63;;15726:1;15723;15716:12;15667:63;15614:122;:::o;15742:::-;15815:24;15833:5;15815:24;:::i;:::-;15808:5;15805:35;15795:63;;15854:1;15851;15844:12;15795:63;15742:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1217400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setApprovedTokenTransferor(address)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12346,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085fb7d9fcfbf1cbfa360373e2fe687cebd834cf03290c4bdbcf209f462b3a8c464736f6c63430008070033",
									".code": [
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2355,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4680,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4680,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4671,
											"end": 4710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4710,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4671,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4720,
											"end": 4731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4720,
											"end": 4731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5380,
											"end": 5386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5397,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5370,
											"end": 5406,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5370,
											"end": 5406,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5370,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5463,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5464,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5464,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5477,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5521,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5487,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5609,
											"end": 5615,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5617,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5617,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5656,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5600,
											"end": 5657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5600,
											"end": 5657,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5600,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5678,
											"end": 5689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5696,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6204,
											"end": 6214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6204,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6225,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6274,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6238,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6239,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6239,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6239,
											"end": 6251,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6251,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6239,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6252,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6227,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6195,
											"end": 6275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6195,
											"end": 6275,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6195,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6285,
											"end": 6296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3638,
											"end": 3640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3632,
											"end": 3649,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3632,
											"end": 3649,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3632,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3656,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3823,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3839,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6899,
											"end": 6923,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6938,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6938,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6926,
											"end": 6951,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6926,
											"end": 6960,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6899,
											"end": 6960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6998,
											"end": 7013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 6994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 7013,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6978,
											"end": 7013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6970,
											"end": 7055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7098,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7137,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7155,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7089,
											"end": 7156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7089,
											"end": 7156,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7089,
											"end": 7156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7184,
											"end": 7188,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7177,
											"end": 7188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4167,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4167,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4220,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4209,
											"end": 4220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4042,
											"end": 4227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4393,
											"end": 4427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10366,
											"end": 10736,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10366,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10489,
											"end": 10557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10567,
											"end": 10635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10657,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10665,
											"end": 10672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10682,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10713,
											"end": 10720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 10711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10722,
											"end": 10728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10697,
											"end": 10729,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10366,
											"end": 10736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7669,
											"end": 8382,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7669,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7796,
											"end": 7866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7905,
											"end": 7906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7876,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7987,
											"end": 7996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7998,
											"end": 8004,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7958,
											"end": 8005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 8005,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7958,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8050,
											"end": 8056,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8057,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8067,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8192,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8217,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8256,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8292,
											"end": 8298,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8311,
											"end": 8317,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8318,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8357,
											"end": 8366,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8329,
											"end": 8375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8329,
											"end": 8375,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8329,
											"end": 8375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 8382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 8382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 8382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 8382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 8382,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8658,
											"end": 9047,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8658,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8760,
											"end": 8761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8733,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8838,
											"end": 8839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 8809,
											"end": 8858,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8809,
											"end": 8858,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8809,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8885,
											"end": 8891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8869,
											"end": 8881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8918,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8961,
											"end": 8962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8944,
											"end": 8981,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 9040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8992,
											"end": 9040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8992,
											"end": 9040,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 8992,
											"end": 9040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 9047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 9047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8658,
											"end": 9047,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11320,
											"end": 11441,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 11320,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12029,
											"end": 12149,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 12029,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12149,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5905,
											"end": 5907,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6030,
											"end": 6033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6050,
											"end": 6168,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 6050,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6155,
											"end": 6160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6137,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 6137,
											"end": 6161,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6137,
											"end": 6161,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6137,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6168,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6174,
											"end": 6286,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6174,
											"end": 6286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6273,
											"end": 6278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6257,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6245,
											"end": 6280,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6379,
											"end": 6383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6419,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6406,
											"end": 6415,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6394,
											"end": 6420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6492,
											"end": 6493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6481,
											"end": 6490,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6477,
											"end": 6494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6468,
											"end": 6474,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6430,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6502,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6661,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6644,
											"end": 6662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 6718,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6809,
											"end": 6813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6736,
											"end": 6814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6736,
											"end": 6814,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6736,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6728,
											"end": 6814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6728,
											"end": 6814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6821,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6827,
											"end": 7246,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6827,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6993,
											"end": 6997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7008,
											"end": 7034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7089,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7074,
											"end": 7078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7090,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7066,
											"end": 7067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7051,
											"end": 7068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7044,
											"end": 7091,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 7108,
											"end": 7239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7108,
											"end": 7239,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 7108,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7100,
											"end": 7239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7100,
											"end": 7239,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 7246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 7246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 7246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 7246,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7454,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7503,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7515,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7659,
											"end": 7663,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7525,
											"end": 7664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7843,
											"end": 7847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7858,
											"end": 7884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7858,
											"end": 7884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7930,
											"end": 7939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7924,
											"end": 7928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7940,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7901,
											"end": 7918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7894,
											"end": 7941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8084,
											"end": 8088,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7958,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7950,
											"end": 8089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7950,
											"end": 8089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7677,
											"end": 8096,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8102,
											"end": 8521,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 8102,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8291,
											"end": 8309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8341,
											"end": 8342,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8326,
											"end": 8343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8319,
											"end": 8366,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8383,
											"end": 8514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8383,
											"end": 8514,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8383,
											"end": 8514,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8383,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8375,
											"end": 8514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8375,
											"end": 8514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8102,
											"end": 8521,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8733,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8780,
											"end": 8789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8774,
											"end": 8778,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8770,
											"end": 8790,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8766,
											"end": 8767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8751,
											"end": 8768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8744,
											"end": 8791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8808,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8527,
											"end": 8946,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8952,
											"end": 9371,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 8952,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9156,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9145,
											"end": 9154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9141,
											"end": 9159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9205,
											"end": 9214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9195,
											"end": 9215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9191,
											"end": 9192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9176,
											"end": 9193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9169,
											"end": 9216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9233,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9359,
											"end": 9363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9233,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 9233,
											"end": 9364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9233,
											"end": 9364,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9233,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8952,
											"end": 9371,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9543,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9570,
											"end": 9579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9620,
											"end": 9640,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9594,
											"end": 9641,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 9658,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9650,
											"end": 9789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9796,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9802,
											"end": 10221,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9802,
											"end": 10221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9968,
											"end": 9972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9995,
											"end": 10004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9991,
											"end": 10009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 10009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 10009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10049,
											"end": 10053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10045,
											"end": 10065,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10041,
											"end": 10042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10026,
											"end": 10043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10019,
											"end": 10066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 10209,
											"end": 10213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10083,
											"end": 10214,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10083,
											"end": 10214,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 10083,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10075,
											"end": 10214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10075,
											"end": 10214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 10221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 10221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 10221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 10221,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10393,
											"end": 10397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10433,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10416,
											"end": 10434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10408,
											"end": 10434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10489,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10474,
											"end": 10478,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10470,
											"end": 10490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10451,
											"end": 10468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10444,
											"end": 10491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 10508,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10639,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10500,
											"end": 10639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10227,
											"end": 10646,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10772,
											"end": 10781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10760,
											"end": 10786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10760,
											"end": 10786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 10864,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10853,
											"end": 10862,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10849,
											"end": 10866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10796,
											"end": 10867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10796,
											"end": 10867,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 10796,
											"end": 10867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10652,
											"end": 10874,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10969,
											"end": 10973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11005,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10984,
											"end": 11010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10984,
											"end": 11010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11020,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 11084,
											"end": 11085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11073,
											"end": 11082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11069,
											"end": 11086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11020,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 11020,
											"end": 11087,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11020,
											"end": 11087,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 11020,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 11094,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11181,
											"end": 11280,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 11181,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11233,
											"end": 11239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11267,
											"end": 11272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11261,
											"end": 11273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11251,
											"end": 11273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11251,
											"end": 11273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11181,
											"end": 11280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11181,
											"end": 11280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11181,
											"end": 11280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11181,
											"end": 11280,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11370,
											"end": 11381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11399,
											"end": 11402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11392,
											"end": 11411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11444,
											"end": 11448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11439,
											"end": 11442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11435,
											"end": 11449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11420,
											"end": 11449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11420,
											"end": 11449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11286,
											"end": 11455,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11501,
											"end": 11504,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11520,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 11538,
											"end": 11539,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11520,
											"end": 11540,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11520,
											"end": 11540,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 11520,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11515,
											"end": 11540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11515,
											"end": 11540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11554,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 11572,
											"end": 11573,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11554,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 11554,
											"end": 11574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11554,
											"end": 11574,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 11554,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11549,
											"end": 11574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11549,
											"end": 11574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11708,
											"end": 11709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11640,
											"end": 11706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11636,
											"end": 11710,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11630,
											"end": 11711,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11627,
											"end": 11734,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11627,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 11627,
											"end": 11734,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 11714,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11627,
											"end": 11734,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 11627,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11758,
											"end": 11759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11755,
											"end": 11756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11751,
											"end": 11760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11461,
											"end": 11766,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11772,
											"end": 11868,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 11772,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 11856,
											"end": 11861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 11838,
											"end": 11862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11827,
											"end": 11862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11772,
											"end": 11868,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11874,
											"end": 11964,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 11874,
											"end": 11964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11908,
											"end": 11915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11951,
											"end": 11956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11944,
											"end": 11957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11937,
											"end": 11958,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11926,
											"end": 11958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11926,
											"end": 11958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11874,
											"end": 11964,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11970,
											"end": 12096,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 11970,
											"end": 12096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12007,
											"end": 12014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12040,
											"end": 12045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12036,
											"end": 12090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12025,
											"end": 12090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12025,
											"end": 12090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11970,
											"end": 12096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11970,
											"end": 12096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11970,
											"end": 12096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11970,
											"end": 12096,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12102,
											"end": 12179,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 12102,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12139,
											"end": 12146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12157,
											"end": 12173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12157,
											"end": 12173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12102,
											"end": 12179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12102,
											"end": 12179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12102,
											"end": 12179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12102,
											"end": 12179,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12185,
											"end": 12271,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 12185,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12220,
											"end": 12227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 12253,
											"end": 12258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12249,
											"end": 12265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12238,
											"end": 12265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12238,
											"end": 12265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12271,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12185,
											"end": 12271,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12277,
											"end": 12584,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 12277,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12345,
											"end": 12346,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12369,
											"end": 12375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12366,
											"end": 12367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12363,
											"end": 12376,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12454,
											"end": 12455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12449,
											"end": 12452,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12445,
											"end": 12456,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12439,
											"end": 12457,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12430,
											"end": 12433,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12426,
											"end": 12437,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12391,
											"end": 12393,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12388,
											"end": 12389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12384,
											"end": 12394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12379,
											"end": 12394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 12355,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12486,
											"end": 12492,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12483,
											"end": 12484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12480,
											"end": 12493,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 12477,
											"end": 12578,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12477,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 12477,
											"end": 12578,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12566,
											"end": 12567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12563,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12552,
											"end": 12555,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12548,
											"end": 12564,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12541,
											"end": 12568,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12477,
											"end": 12578,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 12477,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12326,
											"end": 12584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12277,
											"end": 12584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12277,
											"end": 12584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12277,
											"end": 12584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12277,
											"end": 12584,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12590,
											"end": 12910,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 12590,
											"end": 12910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12634,
											"end": 12640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12672,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 12665,
											"end": 12669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12661,
											"end": 12673,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 12651,
											"end": 12673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12651,
											"end": 12673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12718,
											"end": 12719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12712,
											"end": 12716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12708,
											"end": 12720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12729,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 12729,
											"end": 12810,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12795,
											"end": 12799,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 12787,
											"end": 12793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12783,
											"end": 12800,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12773,
											"end": 12800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12773,
											"end": 12800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12729,
											"end": 12810,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 12729,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12857,
											"end": 12859,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12846,
											"end": 12860,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12826,
											"end": 12844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12823,
											"end": 12861,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12820,
											"end": 12904,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12820,
											"end": 12904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 12820,
											"end": 12904,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12820,
											"end": 12904,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 12820,
											"end": 12904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12641,
											"end": 12910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12590,
											"end": 12910,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12590,
											"end": 12910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12590,
											"end": 12910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12590,
											"end": 12910,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12916,
											"end": 13096,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 12916,
											"end": 13096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12964,
											"end": 13041,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12961,
											"end": 12962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12954,
											"end": 13042,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13061,
											"end": 13065,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 13058,
											"end": 13059,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13051,
											"end": 13066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13085,
											"end": 13089,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13090,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13102,
											"end": 13282,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 13102,
											"end": 13282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13150,
											"end": 13227,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13147,
											"end": 13148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13247,
											"end": 13251,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 13244,
											"end": 13245,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13271,
											"end": 13275,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 13268,
											"end": 13269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13261,
											"end": 13276,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 13411,
											"end": 13528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13520,
											"end": 13521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13510,
											"end": 13522,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13636,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 13534,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13575,
											"end": 13581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13622,
											"end": 13629,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 13617,
											"end": 13619,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 13610,
											"end": 13615,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13606,
											"end": 13620,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13602,
											"end": 13630,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13592,
											"end": 13630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13592,
											"end": 13630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13636,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13642,
											"end": 13864,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 13642,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13782,
											"end": 13816,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13778,
											"end": 13779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13770,
											"end": 13776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13766,
											"end": 13780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13759,
											"end": 13817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13851,
											"end": 13856,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13846,
											"end": 13848,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13838,
											"end": 13844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13834,
											"end": 13849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13827,
											"end": 13857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13642,
											"end": 13864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13642,
											"end": 13864,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13870,
											"end": 14091,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 13870,
											"end": 14091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14010,
											"end": 14044,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 14006,
											"end": 14007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13994,
											"end": 14008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13987,
											"end": 14045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14079,
											"end": 14083,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14074,
											"end": 14076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14066,
											"end": 14072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14062,
											"end": 14077,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14055,
											"end": 14084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13870,
											"end": 14091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13870,
											"end": 14091,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14097,
											"end": 14268,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 14097,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14237,
											"end": 14260,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420417070726F76656420746F20646F20736F0000000000000000000000"
										},
										{
											"begin": 14233,
											"end": 14234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14225,
											"end": 14231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14221,
											"end": 14235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14214,
											"end": 14261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14097,
											"end": 14268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14097,
											"end": 14268,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14274,
											"end": 14499,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 14274,
											"end": 14499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14414,
											"end": 14448,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14410,
											"end": 14411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14402,
											"end": 14408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14398,
											"end": 14412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14391,
											"end": 14449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14483,
											"end": 14491,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14478,
											"end": 14480,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14470,
											"end": 14476,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14466,
											"end": 14481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14459,
											"end": 14492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14499,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14505,
											"end": 14732,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 14505,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14645,
											"end": 14679,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 14641,
											"end": 14642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14633,
											"end": 14639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14629,
											"end": 14643,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14622,
											"end": 14680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14714,
											"end": 14724,
											"name": "PUSH",
											"source": 4,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14709,
											"end": 14711,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14701,
											"end": 14707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14697,
											"end": 14712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14690,
											"end": 14725,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14505,
											"end": 14732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14505,
											"end": 14732,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14738,
											"end": 14962,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 14738,
											"end": 14962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14878,
											"end": 14912,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14874,
											"end": 14875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14862,
											"end": 14876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14855,
											"end": 14913,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14947,
											"end": 14954,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14942,
											"end": 14944,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14930,
											"end": 14945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14923,
											"end": 14955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14738,
											"end": 14962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14738,
											"end": 14962,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14968,
											"end": 15191,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 14968,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15108,
											"end": 15142,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 15104,
											"end": 15105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15102,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15092,
											"end": 15106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15085,
											"end": 15143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15177,
											"end": 15183,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15172,
											"end": 15174,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15164,
											"end": 15170,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15160,
											"end": 15175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15153,
											"end": 15184,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14968,
											"end": 15191,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15197,
											"end": 15421,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 15197,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15337,
											"end": 15371,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 15333,
											"end": 15334,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15325,
											"end": 15331,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15321,
											"end": 15335,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15314,
											"end": 15372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15406,
											"end": 15413,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15401,
											"end": 15403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15393,
											"end": 15399,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15389,
											"end": 15404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15382,
											"end": 15414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15197,
											"end": 15421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15197,
											"end": 15421,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15427,
											"end": 15608,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 15427,
											"end": 15608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15567,
											"end": 15600,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 15563,
											"end": 15564,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15555,
											"end": 15561,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15551,
											"end": 15565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15544,
											"end": 15601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15427,
											"end": 15608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15427,
											"end": 15608,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15614,
											"end": 15736,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 15614,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15687,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 15705,
											"end": 15710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15687,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 15687,
											"end": 15711,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15687,
											"end": 15711,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 15687,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15680,
											"end": 15685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15677,
											"end": 15712,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15667,
											"end": 15730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 15667,
											"end": 15730,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15726,
											"end": 15727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15723,
											"end": 15724,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15716,
											"end": 15728,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15667,
											"end": 15730,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 15667,
											"end": 15730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15614,
											"end": 15736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15614,
											"end": 15736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15742,
											"end": 15864,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 15742,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15815,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 15833,
											"end": 15838,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15815,
											"end": 15839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 15815,
											"end": 15839,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 15815,
											"end": 15839,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 15815,
											"end": 15839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15808,
											"end": 15813,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15805,
											"end": 15840,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15795,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 15795,
											"end": 15858,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15854,
											"end": 15855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15851,
											"end": 15852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15844,
											"end": 15856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15795,
											"end": 15858,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 15795,
											"end": 15858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15742,
											"end": 15864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15742,
											"end": 15864,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See {IERC20-mint}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ERC20.sol\":{\"keccak256\":\"0x198f7ccd49a28a90e6fbdee751475c2f2708eb7c621c1eb3c4e473001c8e1f34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://254cd96ef89b517689fb2c5f07f22bbfd896049d45f9c8a82835418453b0f7a3\",\"dweb:/ipfs/QmYqeTzjrhpe6ktrvue4zku6E8S2gywnJc4wH6nKscPhrr\"]},\"IERC20.sol\":{\"keccak256\":\"0x3141dd57e33a68f910e5e468f78e43f26fd3baeb8a342b05544fec0aa43620de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640100a4c68628e9509cf9b472830e74ef184cfa81584e320ac4900fe917f248\",\"dweb:/ipfs/QmTXxdN6ZcKsFqVLtV49RwYNHCVCCNvjrXozZTQNtB2zSm\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 43,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 45,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 47,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 49,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 51,
								"contract": "ERC20.sol:ERC20",
								"label": "approvedTransferor",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addrTo",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x3141dd57e33a68f910e5e468f78e43f26fd3baeb8a342b05544fec0aa43620de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640100a4c68628e9509cf9b472830e74ef184cfa81584e320ac4900fe917f248\",\"dweb:/ipfs/QmTXxdN6ZcKsFqVLtV49RwYNHCVCCNvjrXozZTQNtB2zSm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addrTo",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x3141dd57e33a68f910e5e468f78e43f26fd3baeb8a342b05544fec0aa43620de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://640100a4c68628e9509cf9b472830e74ef184cfa81584e320ac4900fe917f248\",\"dweb:/ipfs/QmTXxdN6ZcKsFqVLtV49RwYNHCVCCNvjrXozZTQNtB2zSm\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							612
						],
						"IERC20": [
							697
						],
						"IERC20Metadata": [
							722
						]
					},
					"id": 613,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 613,
							"sourceUnit": 698,
							"src": "115:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 613,
							"sourceUnit": 723,
							"src": "138:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 613,
							"sourceUnit": 22,
							"src": "169:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1385:7:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "1385:7:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "1394:6:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1394:6:1"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 722,
										"src": "1402:14:1"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1402:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "194:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 612,
							"linearizedBaseContracts": [
								612,
								722,
								697,
								21
							],
							"name": "ERC20",
							"nameLocation": "1376:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1459:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "1423:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1431:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1423:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1442:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1531:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "1475:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1483:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1475:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 41,
											"keyType": {
												"id": 39,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1494:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 40,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1513:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1565:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "1549:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1549:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1599:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "1584:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 46,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1625:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "1610:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 48,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1610:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "approvedTransferor",
									"nameLocation": "1656:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 612,
									"src": "1639:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1639:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2040:66:1",
										"statements": [
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2050:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 60,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2058:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2050:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "2050:13:1"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2083:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2073:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "2073:17:1"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1681:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 68,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2010:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1996:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2017:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:44:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:1"
									},
									"scope": 612,
									"src": "1984:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2134:90:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2150:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2150:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 73,
																"name": "approvedTransferor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "2164:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2150:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420417070726f76656420746f20646f20736f",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2184:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																"typeString": "literal_string \"Not Approved to do so\""
															},
															"value": "Not Approved to do so"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																"typeString": "literal_string \"Not Approved to do so\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2142:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2142:66:1"
											},
											{
												"id": 78,
												"nodeType": "PlaceholderStatement",
												"src": "2216:1:1"
											}
										]
									},
									"id": 80,
									"name": "onlyApproved",
									"nameLocation": "2121:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:1"
									},
									"src": "2112:112:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										709
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "2357:29:1",
										"statements": [
											{
												"expression": {
													"id": 87,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "2374:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "2367:12:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2229:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2297:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2324:8:1"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2342:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:15:1"
									},
									"scope": 612,
									"src": "2288:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2570:31:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "2587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "2580:14:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2392:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2508:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2537:8:1"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2555:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 94,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2555:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:15:1"
									},
									"scope": 612,
									"src": "2499:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										721
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3290:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3307:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 106,
												"id": 108,
												"nodeType": "Return",
												"src": "3300:9:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2607:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3234:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3265:8:1"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3283:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3283:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:7:1"
									},
									"scope": 612,
									"src": "3225:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										628
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3446:36:1",
										"statements": [
											{
												"expression": {
													"id": 117,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "3463:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 118,
												"nodeType": "Return",
												"src": "3456:19:1"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3322:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3385:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 113,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3419:8:1"
									},
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3396:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3437:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:9:1"
									},
									"scope": 612,
									"src": "3376:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3613:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 132,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3638:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3642:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 131,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3632:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3632:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "3632:17:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3487:42:1",
										"text": " @dev See {IERC20-mint}."
									},
									"functionSelector": "40c10f19",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 129,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 128,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "3600:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3600:12:1"
										}
									],
									"name": "mint",
									"nameLocation": "3543:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3591:8:1"
									},
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3568:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "3560:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3547:28:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3613:0:1"
									},
									"scope": 612,
									"src": "3534:122:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										636
									],
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "3797:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 146,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3814:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 148,
													"indexExpression": {
														"id": 147,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3824:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3814:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 145,
												"id": 149,
												"nodeType": "Return",
												"src": "3807:25:1"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "3662:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3723:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3770:8:1"
									},
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3741:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3733:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3732:17:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3788:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:9:1"
									},
									"scope": 612,
									"src": "3714:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										646
									],
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "4147:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 165,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4167:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4167:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 167,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4181:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4192:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 164,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "4157:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4157:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4157:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4216:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 163,
												"id": 172,
												"nodeType": "Return",
												"src": "4209:11:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "3845:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 159,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "4119:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4119:12:1"
										}
									],
									"name": "transfer",
									"nameLocation": "4051:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 158,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4110:8:1"
									},
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4068:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4060:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4060:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4087:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4079:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4059:35:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4141:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4141:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:6:1"
									},
									"scope": 612,
									"src": "4042:185:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										656
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "4383:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 185,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4400:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 187,
														"indexExpression": {
															"id": 186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4412:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4400:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 189,
													"indexExpression": {
														"id": 188,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "4419:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4400:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 190,
												"nodeType": "Return",
												"src": "4393:34:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4233:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4294:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4356:8:1"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4312:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4304:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4319:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4303:32:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4374:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:1"
									},
									"scope": 612,
									"src": "4285:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4661:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 204,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4680:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4680:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "4694:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 207,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4703:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 203,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "4671:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4671:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "4671:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4727:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 202,
												"id": 211,
												"nodeType": "Return",
												"src": "4720:11:1"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "4440:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4581:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 199,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4637:8:1"
									},
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4597:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4589:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4614:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4606:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4606:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4588:33:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4655:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4655:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4654:6:1"
									},
									"scope": 612,
									"src": "4572:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "5360:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 229,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5380:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5388:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "5399:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 228,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "5370:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5370:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "5370:36:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5425:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "5417:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 234,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 236,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "5444:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 238,
														"indexExpression": {
															"id": 237,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5456:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5444:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 241,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 239,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "5464:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5464:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5444:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5417:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 244,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "5495:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 245,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "5515:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5495:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5523:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5487:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "5487:79:1"
											},
											{
												"id": 259,
												"nodeType": "UncheckedBlock",
												"src": "5576:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 251,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5609:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 252,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "5617:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5617:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 254,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "5631:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 255,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "5650:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5631:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 250,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5600:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5600:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 258,
														"nodeType": "ExpressionStatement",
														"src": "5600:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5685:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 227,
												"id": 261,
												"nodeType": "Return",
												"src": "5678:11:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4744:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 224,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 223,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "5332:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5332:12:1"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5214:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 222,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5323:8:1"
									},
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5244:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5236:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5268:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5260:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5260:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5295:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5287:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:81:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5354:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5354:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5353:6:1"
									},
									"scope": 612,
									"src": "5205:491:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "6185:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 274,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6204:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6204:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 276,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "6218:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 277,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "6227:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 280,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 278,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "6239:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6239:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6227:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 282,
																"indexExpression": {
																	"id": 281,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "6253:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6227:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 283,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "6264:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6227:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "6195:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6195:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "6195:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6292:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 272,
												"id": 288,
												"nodeType": "Return",
												"src": "6285:11:1"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "5702:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6100:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6143:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6135:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:37:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6179:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6179:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6178:6:1"
									},
									"scope": 612,
									"src": "6091:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "6889:306:1",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6907:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 328,
														"src": "6899:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6899:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 302,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6926:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 305,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 303,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6938:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6938:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6926:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 307,
													"indexExpression": {
														"id": 306,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6952:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6926:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6899:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "6978:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "6998:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6978:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7015:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6970:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6970:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "6970:85:1"
											},
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "7065:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 317,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "7098:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7098:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 319,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "7112:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 320,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 301,
																		"src": "7121:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 321,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "7140:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7121:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 316,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "7089:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7089:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 324,
														"nodeType": "ExpressionStatement",
														"src": "7089:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7184:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 299,
												"id": 327,
												"nodeType": "Return",
												"src": "7177:11:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "6309:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6799:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6825:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6817:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6817:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6842:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6834:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6816:42:1"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "6883:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 297,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6883:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:6:1"
									},
									"scope": 612,
									"src": "6790:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "7786:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 340,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "7804:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7822:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7814:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 341,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7814:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7814:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7804:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7826:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7796:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7796:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "7796:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 350,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "7884:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7905:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7897:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 351,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7897:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7897:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7884:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7909:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7876:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7876:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "7876:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "7979:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "7987:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "7998:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 359,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "7958:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "7958:47:1"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "8024:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "8016:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 365,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8016:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"baseExpression": {
														"id": 367,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "8040:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 369,
													"indexExpression": {
														"id": 368,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "8050:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8040:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8016:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 372,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "8075:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 373,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "8092:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8075:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8100:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8067:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "8067:74:1"
											},
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "8151:77:1",
												"statements": [
													{
														"expression": {
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 378,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "8175:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 380,
																"indexExpression": {
																	"id": 379,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "8185:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8175:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 381,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "8195:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 382,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "8211:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8195:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8175:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 385,
														"nodeType": "ExpressionStatement",
														"src": "8175:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 387,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8237:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 389,
														"indexExpression": {
															"id": 388,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "8247:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8237:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 390,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "8261:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8237:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "8237:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 394,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "8292:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 395,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "8300:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8311:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8283:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8283:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "EmitStatement",
												"src": "8278:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 400,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "8349:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 401,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "8357:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8368:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "8329:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8329:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "8329:46:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "7201:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7678:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7705:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7697:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7697:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7729:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7721:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7721:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7756:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "7748:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7687:81:1"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7786:0:1"
									},
									"scope": 612,
									"src": "7669:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "8723:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "8741:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8760:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8752:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8752:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8752:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8741:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8764:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8733:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8733:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "8733:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8830:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 425,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8830:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8830:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "8851:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 424,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "8809:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8809:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "8809:49:1"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 433,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "8869:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 434,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "8885:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8869:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "8869:22:1"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 437,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8901:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 439,
														"indexExpression": {
															"id": 438,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8901:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 440,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "8923:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8901:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "8901:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8961:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8953:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 444,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8953:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8953:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8965:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "8974:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 443,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8944:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8939:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9012:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 453,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9012:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9012:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "9024:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "9033:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "8992:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8992:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "8992:48:1"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "8388:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8667:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8681:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8673:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8698:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8690:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8672:33:1"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8723:0:1"
									},
									"scope": 612,
									"src": "8658:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "9432:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 471,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "9450:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9469:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9461:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 472,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9461:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9461:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9450:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9473:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9442:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9442:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "9442:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 481,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "9541:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9558:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9550:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9550:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9550:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "9562:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "9520:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9520:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "9520:49:1"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9588:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "9580:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9580:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 494,
												"initialValue": {
													"baseExpression": {
														"id": 491,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "9605:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 493,
													"indexExpression": {
														"id": 492,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "9615:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9605:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9580:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "9641:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 497,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "9659:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9641:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9667:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9633:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "9633:71:1"
											},
											{
												"id": 510,
												"nodeType": "UncheckedBlock",
												"src": "9714:79:1",
												"statements": [
													{
														"expression": {
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 502,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "9738:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 504,
																"indexExpression": {
																	"id": 503,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "9748:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9738:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 505,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "9759:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 506,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "9776:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9759:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9738:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 509,
														"nodeType": "ExpressionStatement",
														"src": "9738:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "9802:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 512,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "9818:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9802:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "9802:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "9849:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9866:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9858:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 517,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9858:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9858:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "9870:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9840:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9840:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "9835:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "9908:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9925:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9917:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 526,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9917:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9917:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "9929:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "9888:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "9888:48:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "9053:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9376:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9382:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9382:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9407:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "9399:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9399:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9381:33:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9432:0:1"
									},
									"scope": 612,
									"src": "9367:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "10479:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 545,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "10497:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10514:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10506:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 546,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10506:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10506:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10497:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10518:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10489:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10489:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "10489:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 555,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "10575:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10594:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10586:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 556,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10586:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10586:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10575:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10598:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10567:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10567:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "10567:68:1"
											},
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 564,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "10646:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 567,
															"indexExpression": {
																"id": 565,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "10658:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10646:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 568,
														"indexExpression": {
															"id": 566,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "10665:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10646:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 569,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "10676:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10646:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "10646:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 573,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "10706:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "10713:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "10722:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "10697:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10697:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "10692:37:1"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "9949:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10375:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10401:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "10393:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10424:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "10416:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10449:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "10441:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10383:78:1"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10479:0:1"
									},
									"scope": 612,
									"src": "10366:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "11439:2:1",
										"statements": []
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "10742:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11329:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11367:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "11359:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11389:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "11381:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11409:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "11401:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11349:72:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11439:0:1"
									},
									"scope": 612,
									"src": "11320:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "12147:2:1",
										"statements": []
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "11447:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12038:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12075:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "12067:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12097:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "12089:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12089:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12117:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "12109:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12057:72:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12147:0:1"
									},
									"scope": 612,
									"src": "12029:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "12220:123:1",
										"statements": [
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 606,
														"name": "approvedTransferor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "12308:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 607,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "12329:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12308:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "12308:28:1"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovedTokenTransferor",
									"nameLocation": "12165:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12201:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "12193:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12193:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12192:17:1"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12220:0:1"
									},
									"scope": 612,
									"src": "12156:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 613,
							"src": "1367:10979:1",
							"usedErrors": []
						}
					],
					"src": "90:12257:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 614,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 615,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "250:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "addrTo",
												"nameLocation": "263:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "255:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "279:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "271:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:32:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:0:2"
									},
									"scope": 697,
									"src": "241:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "547:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "627:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:2"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "664:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:9:2"
									},
									"scope": 697,
									"src": "618:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "679:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 636,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "765:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "783:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "775:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:17:2"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "815:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:9:2"
									},
									"scope": 697,
									"src": "756:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "830:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1053:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1070:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1062:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1089:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1081:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:35:2"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1115:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1115:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:6:2"
									},
									"scope": 697,
									"src": "1044:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "1127:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1405:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1423:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1415:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1438:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1430:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:32:2"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1470:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:9:2"
									},
									"scope": 697,
									"src": "1396:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1485:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2141:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2157:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2149:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2174:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2166:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:33:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2200:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2200:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2199:6:2"
									},
									"scope": 697,
									"src": "2132:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "2212:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2522:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2552:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2544:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2576:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2568:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2603:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2595:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:81:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "2634:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 675,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2634:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:6:2"
									},
									"scope": 697,
									"src": "2513:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "2646:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 687,
									"name": "Transfer",
									"nameLocation": "2815:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2840:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2824:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2862:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2846:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2874:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "2866:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:57:2"
									},
									"src": "2809:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "2887:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 696,
									"name": "Approval",
									"nameLocation": "3046:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3055:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3055:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3094:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3078:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "3103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3103:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3054:63:2"
									},
									"src": "3040:78:2"
								}
							],
							"scope": 698,
							"src": "187:2933:2",
							"usedErrors": []
						}
					],
					"src": "91:3030:2"
				},
				"id": 2
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							697
						],
						"IERC20Metadata": [
							722
						]
					},
					"id": 723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 723,
							"sourceUnit": 698,
							"src": "135:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 702,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 697,
										"src": "304:6:3"
									},
									"id": 703,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 701,
								"nodeType": "StructuredDocumentation",
								"src": "159:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 722,
							"linearizedBaseContracts": [
								722,
								697
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:3"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "415:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:3"
									},
									"scope": 722,
									"src": "376:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "538:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:3"
									},
									"scope": 722,
									"src": "497:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:3"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "672:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 718,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:3"
									},
									"scope": 722,
									"src": "629:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 723,
							"src": "276:405:3",
							"usedErrors": []
						}
					],
					"src": "110:572:3"
				},
				"id": 3
			}
		}
	}
}