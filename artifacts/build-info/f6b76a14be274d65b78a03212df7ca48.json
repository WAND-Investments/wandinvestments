{
	"id": "f6b76a14be274d65b78a03212df7ca48",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1367:11783  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1942:2055  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":2016:2021  name_ */\n  dup2\n    /* \"ERC20.sol\":2008:2013  _name */\n  0x03\n    /* \"ERC20.sol\":2008:2021  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20.sol\":2041:2048  symbol_ */\n  dup1\n    /* \"ERC20.sol\":2031:2038  _symbol */\n  0x04\n    /* \"ERC20.sol\":2031:2048  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":1942:2055  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1367:11783  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:361   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:264   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":303:304   */\n  0x00\n    /* \"#utility.yul\":300:301   */\n  dup1\n    /* \"#utility.yul\":293:305   */\n  revert\n    /* \"#utility.yul\":262:264   */\ntag_28:\n    /* \"#utility.yul\":316:355   */\n  tag_29\n    /* \"#utility.yul\":348:354   */\n  dup5\n    /* \"#utility.yul\":343:346   */\n  dup3\n    /* \"#utility.yul\":338:341   */\n  dup6\n    /* \"#utility.yul\":316:355   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":102:361   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":381:669   */\ntag_31:\n    /* \"#utility.yul\":448:453   */\n  0x00\n    /* \"#utility.yul\":497:500   */\n  dup3\n    /* \"#utility.yul\":490:494   */\n  0x1f\n    /* \"#utility.yul\":482:488   */\n  dup4\n    /* \"#utility.yul\":478:495   */\n  add\n    /* \"#utility.yul\":474:501   */\n  slt\n    /* \"#utility.yul\":464:466   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":515:516   */\n  0x00\n    /* \"#utility.yul\":512:513   */\n  dup1\n    /* \"#utility.yul\":505:517   */\n  revert\n    /* \"#utility.yul\":464:466   */\ntag_33:\n    /* \"#utility.yul\":548:554   */\n  dup2\n    /* \"#utility.yul\":542:555   */\n  mload\n    /* \"#utility.yul\":573:663   */\n  tag_34\n    /* \"#utility.yul\":659:662   */\n  dup5\n    /* \"#utility.yul\":651:657   */\n  dup3\n    /* \"#utility.yul\":644:648   */\n  0x20\n    /* \"#utility.yul\":636:642   */\n  dup7\n    /* \"#utility.yul\":632:649   */\n  add\n    /* \"#utility.yul\":573:663   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":564:663   */\n  swap2\n  pop\n    /* \"#utility.yul\":454:669   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":675:1327   */\ntag_3:\n    /* \"#utility.yul\":774:780   */\n  0x00\n    /* \"#utility.yul\":782:788   */\n  dup1\n    /* \"#utility.yul\":831:833   */\n  0x40\n    /* \"#utility.yul\":819:828   */\n  dup4\n    /* \"#utility.yul\":810:817   */\n  dup6\n    /* \"#utility.yul\":806:829   */\n  sub\n    /* \"#utility.yul\":802:834   */\n  slt\n    /* \"#utility.yul\":799:801   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":847:848   */\n  0x00\n    /* \"#utility.yul\":844:845   */\n  dup1\n    /* \"#utility.yul\":837:849   */\n  revert\n    /* \"#utility.yul\":799:801   */\ntag_36:\n    /* \"#utility.yul\":911:912   */\n  0x00\n    /* \"#utility.yul\":900:909   */\n  dup4\n    /* \"#utility.yul\":896:913   */\n  add\n    /* \"#utility.yul\":890:914   */\n  mload\n    /* \"#utility.yul\":941:959   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":933:939   */\n  dup2\n    /* \"#utility.yul\":930:960   */\n  gt\n    /* \"#utility.yul\":927:929   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":973:974   */\n  0x00\n    /* \"#utility.yul\":970:971   */\n  dup1\n    /* \"#utility.yul\":963:975   */\n  revert\n    /* \"#utility.yul\":927:929   */\ntag_37:\n    /* \"#utility.yul\":1001:1075   */\n  tag_38\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1058:1064   */\n  dup3\n    /* \"#utility.yul\":1047:1056   */\n  dup7\n    /* \"#utility.yul\":1043:1065   */\n  add\n    /* \"#utility.yul\":1001:1075   */\n  tag_31\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":991:1075   */\n  swap3\n  pop\n    /* \"#utility.yul\":861:1085   */\n  pop\n    /* \"#utility.yul\":1145:1147   */\n  0x20\n    /* \"#utility.yul\":1134:1143   */\n  dup4\n    /* \"#utility.yul\":1130:1148   */\n  add\n    /* \"#utility.yul\":1124:1149   */\n  mload\n    /* \"#utility.yul\":1176:1194   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1168:1174   */\n  dup2\n    /* \"#utility.yul\":1165:1195   */\n  gt\n    /* \"#utility.yul\":1162:1164   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1208:1209   */\n  0x00\n    /* \"#utility.yul\":1205:1206   */\n  dup1\n    /* \"#utility.yul\":1198:1210   */\n  revert\n    /* \"#utility.yul\":1162:1164   */\ntag_39:\n    /* \"#utility.yul\":1236:1310   */\n  tag_40\n    /* \"#utility.yul\":1302:1309   */\n  dup6\n    /* \"#utility.yul\":1293:1299   */\n  dup3\n    /* \"#utility.yul\":1282:1291   */\n  dup7\n    /* \"#utility.yul\":1278:1300   */\n  add\n    /* \"#utility.yul\":1236:1310   */\n  tag_31\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1226:1310   */\n  swap2\n  pop\n    /* \"#utility.yul\":1095:1320   */\n  pop\n    /* \"#utility.yul\":789:1327   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1333:1462   */\ntag_27:\n    /* \"#utility.yul\":1367:1373   */\n  0x00\n    /* \"#utility.yul\":1394:1414   */\n  tag_42\n  tag_43\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1384:1414   */\n  swap1\n  pop\n    /* \"#utility.yul\":1423:1456   */\n  tag_44\n    /* \"#utility.yul\":1451:1455   */\n  dup3\n    /* \"#utility.yul\":1443:1449   */\n  dup3\n    /* \"#utility.yul\":1423:1456   */\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1374:1462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1468:1543   */\ntag_43:\n    /* \"#utility.yul\":1501:1507   */\n  0x00\n    /* \"#utility.yul\":1534:1536   */\n  0x40\n    /* \"#utility.yul\":1528:1537   */\n  mload\n    /* \"#utility.yul\":1518:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1508:1543   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1549:1857   */\ntag_26:\n    /* \"#utility.yul\":1611:1615   */\n  0x00\n    /* \"#utility.yul\":1701:1719   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1693:1699   */\n  dup3\n    /* \"#utility.yul\":1690:1720   */\n  gt\n    /* \"#utility.yul\":1687:1689   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":1723:1741   */\n  tag_49\n  tag_50\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1687:1689   */\ntag_48:\n    /* \"#utility.yul\":1761:1790   */\n  tag_51\n    /* \"#utility.yul\":1783:1789   */\n  dup3\n    /* \"#utility.yul\":1761:1790   */\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1753:1790   */\n  swap1\n  pop\n    /* \"#utility.yul\":1845:1849   */\n  0x20\n    /* \"#utility.yul\":1839:1843   */\n  dup2\n    /* \"#utility.yul\":1835:1850   */\n  add\n    /* \"#utility.yul\":1827:1850   */\n  swap1\n  pop\n    /* \"#utility.yul\":1616:1857   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1863:2170   */\ntag_30:\n    /* \"#utility.yul\":1931:1932   */\n  0x00\n    /* \"#utility.yul\":1941:2054   */\ntag_54:\n    /* \"#utility.yul\":1955:1961   */\n  dup4\n    /* \"#utility.yul\":1952:1953   */\n  dup2\n    /* \"#utility.yul\":1949:1962   */\n  lt\n    /* \"#utility.yul\":1941:2054   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2040:2041   */\n  dup1\n    /* \"#utility.yul\":2035:2038   */\n  dup3\n    /* \"#utility.yul\":2031:2042   */\n  add\n    /* \"#utility.yul\":2025:2043   */\n  mload\n    /* \"#utility.yul\":2021:2022   */\n  dup2\n    /* \"#utility.yul\":2016:2019   */\n  dup5\n    /* \"#utility.yul\":2012:2023   */\n  add\n    /* \"#utility.yul\":2005:2044   */\n  mstore\n    /* \"#utility.yul\":1977:1979   */\n  0x20\n    /* \"#utility.yul\":1974:1975   */\n  dup2\n    /* \"#utility.yul\":1970:1980   */\n  add\n    /* \"#utility.yul\":1965:1980   */\n  swap1\n  pop\n    /* \"#utility.yul\":1941:2054   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":2072:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2070   */\n  dup2\n    /* \"#utility.yul\":2066:2079   */\n  gt\n    /* \"#utility.yul\":2063:2065   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2152:2153   */\n  0x00\n    /* \"#utility.yul\":2143:2149   */\n  dup5\n    /* \"#utility.yul\":2138:2141   */\n  dup5\n    /* \"#utility.yul\":2134:2150   */\n  add\n    /* \"#utility.yul\":2127:2154   */\n  mstore\n    /* \"#utility.yul\":2063:2065   */\ntag_57:\n    /* \"#utility.yul\":1912:2170   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2176:2496   */\ntag_11:\n    /* \"#utility.yul\":2220:2226   */\n  0x00\n    /* \"#utility.yul\":2257:2258   */\n  0x02\n    /* \"#utility.yul\":2251:2255   */\n  dup3\n    /* \"#utility.yul\":2247:2259   */\n  div\n    /* \"#utility.yul\":2237:2259   */\n  swap1\n  pop\n    /* \"#utility.yul\":2304:2305   */\n  0x01\n    /* \"#utility.yul\":2298:2302   */\n  dup3\n    /* \"#utility.yul\":2294:2306   */\n  and\n    /* \"#utility.yul\":2325:2343   */\n  dup1\n    /* \"#utility.yul\":2315:2317   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2381:2385   */\n  0x7f\n    /* \"#utility.yul\":2373:2379   */\n  dup3\n    /* \"#utility.yul\":2369:2386   */\n  and\n    /* \"#utility.yul\":2359:2386   */\n  swap2\n  pop\n    /* \"#utility.yul\":2315:2317   */\ntag_59:\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2435:2441   */\n  dup3\n    /* \"#utility.yul\":2432:2446   */\n  lt\n    /* \"#utility.yul\":2412:2430   */\n  dup2\n    /* \"#utility.yul\":2409:2447   */\n  eq\n    /* \"#utility.yul\":2406:2408   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2462:2480   */\n  tag_61\n  tag_62\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2406:2408   */\ntag_60:\n    /* \"#utility.yul\":2227:2496   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2502:2783   */\ntag_45:\n    /* \"#utility.yul\":2585:2612   */\n  tag_64\n    /* \"#utility.yul\":2607:2611   */\n  dup3\n    /* \"#utility.yul\":2585:2612   */\n  tag_52\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2577:2583   */\n  dup2\n    /* \"#utility.yul\":2573:2613   */\n  add\n    /* \"#utility.yul\":2715:2721   */\n  dup2\n    /* \"#utility.yul\":2703:2713   */\n  dup2\n    /* \"#utility.yul\":2700:2722   */\n  lt\n    /* \"#utility.yul\":2679:2697   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2667:2677   */\n  dup3\n    /* \"#utility.yul\":2664:2698   */\n  gt\n    /* \"#utility.yul\":2661:2723   */\n  or\n    /* \"#utility.yul\":2658:2660   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2726:2744   */\n  tag_66\n  tag_50\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2658:2660   */\ntag_65:\n    /* \"#utility.yul\":2766:2776   */\n  dup1\n    /* \"#utility.yul\":2762:2764   */\n  0x40\n    /* \"#utility.yul\":2755:2777   */\n  mstore\n    /* \"#utility.yul\":2545:2783   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2789:2969   */\ntag_62:\n    /* \"#utility.yul\":2837:2914   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2834:2835   */\n  0x00\n    /* \"#utility.yul\":2827:2915   */\n  mstore\n    /* \"#utility.yul\":2934:2938   */\n  0x22\n    /* \"#utility.yul\":2931:2932   */\n  0x04\n    /* \"#utility.yul\":2924:2939   */\n  mstore\n    /* \"#utility.yul\":2958:2962   */\n  0x24\n    /* \"#utility.yul\":2955:2956   */\n  0x00\n    /* \"#utility.yul\":2948:2963   */\n  revert\n    /* \"#utility.yul\":2975:3155   */\ntag_50:\n    /* \"#utility.yul\":3023:3100   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3020:3021   */\n  0x00\n    /* \"#utility.yul\":3013:3101   */\n  mstore\n    /* \"#utility.yul\":3120:3124   */\n  0x41\n    /* \"#utility.yul\":3117:3118   */\n  0x04\n    /* \"#utility.yul\":3110:3125   */\n  mstore\n    /* \"#utility.yul\":3144:3148   */\n  0x24\n    /* \"#utility.yul\":3141:3142   */\n  0x00\n    /* \"#utility.yul\":3134:3149   */\n  revert\n    /* \"#utility.yul\":3161:3263   */\ntag_52:\n    /* \"#utility.yul\":3202:3208   */\n  0x00\n    /* \"#utility.yul\":3253:3255   */\n  0x1f\n    /* \"#utility.yul\":3249:3256   */\n  not\n    /* \"#utility.yul\":3244:3246   */\n  0x1f\n    /* \"#utility.yul\":3237:3242   */\n  dup4\n    /* \"#utility.yul\":3233:3247   */\n  add\n    /* \"#utility.yul\":3229:3257   */\n  and\n    /* \"#utility.yul\":3219:3257   */\n  swap1\n  pop\n    /* \"#utility.yul\":3209:3263   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":1367:11783  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1367:11783  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2120:2218  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4217:4383  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3208:3314  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4850:5328  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3057:3148  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5723:5935  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3372:3497  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2331:2433  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":6422:6827  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3700:3872  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3930:4079  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2120:2218  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2174:2187  string memory */\n      0x60\n        /* \"ERC20.sol\":2206:2211  _name */\n      0x03\n        /* \"ERC20.sol\":2199:2211  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2120:2218  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4217:4383  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"ERC20.sol\":4300:4304  bool */\n      0x00\n        /* \"ERC20.sol\":4316:4355  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"ERC20.sol\":4325:4337  _msgSender() */\n      tag_72\n        /* \"ERC20.sol\":4325:4335  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":4325:4337  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"ERC20.sol\":4339:4346  spender */\n      dup5\n        /* \"ERC20.sol\":4348:4354  amount */\n      dup5\n        /* \"ERC20.sol\":4316:4324  _approve */\n      tag_74\n        /* \"ERC20.sol\":4316:4355  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n        /* \"ERC20.sol\":4372:4376  true */\n      0x01\n        /* \"ERC20.sol\":4365:4376  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":4217:4383  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3208:3314  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"ERC20.sol\":3269:3276  uint256 */\n      0x00\n        /* \"ERC20.sol\":3295:3307  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3288:3307  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":3208:3314  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4850:5328  function transferFrom(... */\n    tag_32:\n        /* \"ERC20.sol\":4986:4990  bool */\n      0x00\n        /* \"ERC20.sol\":5002:5038  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"ERC20.sol\":5012:5018  sender */\n      dup5\n        /* \"ERC20.sol\":5020:5029  recipient */\n      dup5\n        /* \"ERC20.sol\":5031:5037  amount */\n      dup5\n        /* \"ERC20.sol\":5002:5011  _transfer */\n      tag_78\n        /* \"ERC20.sol\":5002:5038  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n        /* \"ERC20.sol\":5049:5073  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"ERC20.sol\":5088:5094  sender */\n      dup7\n        /* \"ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5096:5108  _msgSender() */\n      tag_79\n        /* \"ERC20.sol\":5096:5106  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":5049:5109  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"ERC20.sol\":5147:5153  amount */\n      dup3\n        /* \"ERC20.sol\":5127:5143  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":5127:5153  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":5119:5198  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"ERC20.sol\":5232:5289  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"ERC20.sol\":5241:5247  sender */\n      dup6\n        /* \"ERC20.sol\":5249:5261  _msgSender() */\n      tag_84\n        /* \"ERC20.sol\":5249:5259  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":5249:5261  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"ERC20.sol\":5282:5288  amount */\n      dup6\n        /* \"ERC20.sol\":5263:5279  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":5263:5288  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":5232:5240  _approve */\n      tag_74\n        /* \"ERC20.sol\":5232:5289  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n        /* \"ERC20.sol\":5317:5321  true */\n      0x01\n        /* \"ERC20.sol\":5310:5321  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":4850:5328  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3057:3148  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"ERC20.sol\":3115:3120  uint8 */\n      0x00\n        /* \"ERC20.sol\":3139:3141  18 */\n      0x12\n        /* \"ERC20.sol\":3132:3141  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":3057:3148  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5723:5935  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"ERC20.sol\":5811:5815  bool */\n      0x00\n        /* \"ERC20.sol\":5827:5907  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_87\n        /* \"ERC20.sol\":5836:5848  _msgSender() */\n      tag_88\n        /* \"ERC20.sol\":5836:5846  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":5836:5848  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"ERC20.sol\":5850:5857  spender */\n      dup5\n        /* \"ERC20.sol\":5896:5906  addedValue */\n      dup5\n        /* \"ERC20.sol\":5859:5870  _allowances */\n      0x01\n        /* \"ERC20.sol\":5859:5884  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5871:5883  _msgSender() */\n      tag_89\n        /* \"ERC20.sol\":5871:5881  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":5871:5883  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"ERC20.sol\":5859:5884  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5859:5893  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":5885:5892  spender */\n      dup9\n        /* \"ERC20.sol\":5859:5893  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":5859:5906  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"ERC20.sol\":5827:5835  _approve */\n      tag_74\n        /* \"ERC20.sol\":5827:5907  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_87:\n        /* \"ERC20.sol\":5924:5928  true */\n      0x01\n        /* \"ERC20.sol\":5917:5928  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":5723:5935  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3372:3497  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"ERC20.sol\":3446:3453  uint256 */\n      0x00\n        /* \"ERC20.sol\":3472:3481  _balances */\n      dup1\n        /* \"ERC20.sol\":3472:3490  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3482:3489  account */\n      dup4\n        /* \"ERC20.sol\":3472:3490  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3465:3490  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3372:3497  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2331:2433  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20.sol\":2387:2400  string memory */\n      0x60\n        /* \"ERC20.sol\":2419:2426  _symbol */\n      0x04\n        /* \"ERC20.sol\":2412:2426  return _symbol */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_65\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_65\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2331:2433  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":6422:6827  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"ERC20.sol\":6515:6519  bool */\n      0x00\n        /* \"ERC20.sol\":6531:6555  uint256 currentAllowance */\n      dup1\n        /* \"ERC20.sol\":6558:6569  _allowances */\n      0x01\n        /* \"ERC20.sol\":6558:6583  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6570:6582  _msgSender() */\n      tag_100\n        /* \"ERC20.sol\":6570:6580  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":6570:6582  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"ERC20.sol\":6558:6583  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6558:6592  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":6584:6591  spender */\n      dup6\n        /* \"ERC20.sol\":6558:6592  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6531:6592  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":6630:6645  subtractedValue */\n      dup3\n        /* \"ERC20.sol\":6610:6626  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6610:6645  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":6602:6687  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"ERC20.sol\":6721:6788  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"ERC20.sol\":6730:6742  _msgSender() */\n      tag_105\n        /* \"ERC20.sol\":6730:6740  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":6730:6742  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"ERC20.sol\":6744:6751  spender */\n      dup6\n        /* \"ERC20.sol\":6772:6787  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6753:6769  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":6753:6787  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":6721:6729  _approve */\n      tag_74\n        /* \"ERC20.sol\":6721:6788  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":6816:6820  true */\n      0x01\n        /* \"ERC20.sol\":6809:6820  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":6422:6827  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3700:3872  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"ERC20.sol\":3786:3790  bool */\n      0x00\n        /* \"ERC20.sol\":3802:3844  _transfer(_msgSender(), recipient, amount) */\n      tag_107\n        /* \"ERC20.sol\":3812:3824  _msgSender() */\n      tag_108\n        /* \"ERC20.sol\":3812:3822  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":3812:3824  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":3826:3835  recipient */\n      dup5\n        /* \"ERC20.sol\":3837:3843  amount */\n      dup5\n        /* \"ERC20.sol\":3802:3811  _transfer */\n      tag_78\n        /* \"ERC20.sol\":3802:3844  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_107:\n        /* \"ERC20.sol\":3861:3865  true */\n      0x01\n        /* \"ERC20.sol\":3854:3865  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":3700:3872  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3930:4079  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"ERC20.sol\":4019:4026  uint256 */\n      0x00\n        /* \"ERC20.sol\":4045:4056  _allowances */\n      0x01\n        /* \"ERC20.sol\":4045:4063  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":4057:4062  owner */\n      dup5\n        /* \"ERC20.sol\":4045:4063  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":4045:4072  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":4064:4071  spender */\n      dup4\n        /* \"ERC20.sol\":4045:4072  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":4038:4072  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3930:4079  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":9998:10368  function _approve(... */\n    tag_74:\n        /* \"ERC20.sol\":10146:10147  0 */\n      0x00\n        /* \"ERC20.sol\":10129:10148  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10129:10134  owner */\n      dup4\n        /* \"ERC20.sol\":10129:10148  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":10121:10189  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"ERC20.sol\":10226:10227  0 */\n      0x00\n        /* \"ERC20.sol\":10207:10228  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10207:10214  spender */\n      dup3\n        /* \"ERC20.sol\":10207:10228  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":10199:10267  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"ERC20.sol\":10308:10314  amount */\n      dup1\n        /* \"ERC20.sol\":10278:10289  _allowances */\n      0x01\n        /* \"ERC20.sol\":10278:10296  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":10290:10295  owner */\n      dup6\n        /* \"ERC20.sol\":10278:10296  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10278:10305  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":10297:10304  spender */\n      dup5\n        /* \"ERC20.sol\":10278:10305  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10278:10314  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":10345:10352  spender */\n      dup2\n        /* \"ERC20.sol\":10329:10361  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10338:10343  owner */\n      dup4\n        /* \"ERC20.sol\":10329:10361  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":10354:10360  amount */\n      dup4\n        /* \"ERC20.sol\":10329:10361  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":9998:10368  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7301:8014  function _transfer(... */\n    tag_78:\n        /* \"ERC20.sol\":7454:7455  0 */\n      0x00\n        /* \"ERC20.sol\":7436:7456  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7436:7442  sender */\n      dup4\n        /* \"ERC20.sol\":7436:7456  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7428:7498  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"ERC20.sol\":7537:7538  0 */\n      0x00\n        /* \"ERC20.sol\":7516:7539  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7516:7525  recipient */\n      dup3\n        /* \"ERC20.sol\":7516:7539  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7508:7579  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"ERC20.sol\":7590:7637  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_126\n        /* \"ERC20.sol\":7611:7617  sender */\n      dup4\n        /* \"ERC20.sol\":7619:7628  recipient */\n      dup4\n        /* \"ERC20.sol\":7630:7636  amount */\n      dup4\n        /* \"ERC20.sol\":7590:7610  _beforeTokenTransfer */\n      tag_127\n        /* \"ERC20.sol\":7590:7637  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_126:\n        /* \"ERC20.sol\":7648:7669  uint256 senderBalance */\n      0x00\n        /* \"ERC20.sol\":7672:7681  _balances */\n      dup1\n        /* \"ERC20.sol\":7672:7689  _balances[sender] */\n      0x00\n        /* \"ERC20.sol\":7682:7688  sender */\n      dup6\n        /* \"ERC20.sol\":7672:7689  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":7648:7689  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":7724:7730  amount */\n      dup2\n        /* \"ERC20.sol\":7707:7720  senderBalance */\n      dup2\n        /* \"ERC20.sol\":7707:7730  senderBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":7699:7773  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"ERC20.sol\":7843:7849  amount */\n      dup2\n        /* \"ERC20.sol\":7827:7840  senderBalance */\n      dup2\n        /* \"ERC20.sol\":7827:7849  senderBalance - amount */\n      sub\n        /* \"ERC20.sol\":7807:7816  _balances */\n      0x00\n        /* \"ERC20.sol\":7807:7824  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":7817:7823  sender */\n      dup7\n        /* \"ERC20.sol\":7807:7824  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":7807:7849  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":7893:7899  amount */\n      dup2\n        /* \"ERC20.sol\":7869:7878  _balances */\n      0x00\n        /* \"ERC20.sol\":7869:7889  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":7879:7888  recipient */\n      dup6\n        /* \"ERC20.sol\":7869:7889  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":7869:7899  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":7932:7941  recipient */\n      dup3\n        /* \"ERC20.sol\":7915:7950  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7924:7930  sender */\n      dup5\n        /* \"ERC20.sol\":7915:7950  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":7943:7949  amount */\n      dup5\n        /* \"ERC20.sol\":7915:7950  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":7961:8007  _afterTokenTransfer(sender, recipient, amount) */\n      tag_133\n        /* \"ERC20.sol\":7981:7987  sender */\n      dup5\n        /* \"ERC20.sol\":7989:7998  recipient */\n      dup5\n        /* \"ERC20.sol\":8000:8006  amount */\n      dup5\n        /* \"ERC20.sol\":7961:7980  _afterTokenTransfer */\n      tag_134\n        /* \"ERC20.sol\":7961:8007  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"ERC20.sol\":7301:8014  function _transfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":10952:11073  function _beforeTokenTransfer(... */\n    tag_127:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11661:11781  function _afterTokenTransfer(... */\n    tag_134:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_138:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_140\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_142:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_144\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_147:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_148\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_138\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_60:\n        /* \"#utility.yul\":633:639   */\n      0x00\n        /* \"#utility.yul\":641:647   */\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_150:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_151\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_152\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_138\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_31:\n        /* \"#utility.yul\":1055:1061   */\n      0x00\n        /* \"#utility.yul\":1063:1069   */\n      dup1\n        /* \"#utility.yul\":1071:1077   */\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_154:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_155\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_156\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_138\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_157\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_142\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_21:\n        /* \"#utility.yul\":1604:1610   */\n      0x00\n        /* \"#utility.yul\":1612:1618   */\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_159:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_160\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_138\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_161\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_142\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2058   */\n    tag_162:\n        /* \"#utility.yul\":2030:2051   */\n      tag_164\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2030:2051   */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2052   */\n      mstore\n        /* \"#utility.yul\":2008:2058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2428   */\n    tag_166:\n        /* \"#utility.yul\":2152:2155   */\n      0x00\n        /* \"#utility.yul\":2180:2219   */\n      tag_168\n        /* \"#utility.yul\":2213:2218   */\n      dup3\n        /* \"#utility.yul\":2180:2219   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2235:2306   */\n      tag_170\n        /* \"#utility.yul\":2299:2305   */\n      dup2\n        /* \"#utility.yul\":2294:2297   */\n      dup6\n        /* \"#utility.yul\":2235:2306   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2228:2306   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2367   */\n      tag_172\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2315:2367   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2392:2421   */\n      tag_174\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2156:2428   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2800   */\n    tag_176:\n        /* \"#utility.yul\":2576:2579   */\n      0x00\n        /* \"#utility.yul\":2597:2664   */\n      tag_178\n        /* \"#utility.yul\":2661:2663   */\n      0x23\n        /* \"#utility.yul\":2656:2659   */\n      dup4\n        /* \"#utility.yul\":2597:2664   */\n      tag_171\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2590:2664   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2766   */\n      tag_179\n        /* \"#utility.yul\":2762:2765   */\n      dup3\n        /* \"#utility.yul\":2673:2766   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2791:2793   */\n      0x40\n        /* \"#utility.yul\":2786:2789   */\n      dup3\n        /* \"#utility.yul\":2782:2794   */\n      add\n        /* \"#utility.yul\":2775:2794   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2806:3172   */\n    tag_181:\n        /* \"#utility.yul\":2948:2951   */\n      0x00\n        /* \"#utility.yul\":2969:3036   */\n      tag_183\n        /* \"#utility.yul\":3033:3035   */\n      0x22\n        /* \"#utility.yul\":3028:3031   */\n      dup4\n        /* \"#utility.yul\":2969:3036   */\n      tag_171\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2962:3036   */\n      swap2\n      pop\n        /* \"#utility.yul\":3045:3138   */\n      tag_184\n        /* \"#utility.yul\":3134:3137   */\n      dup3\n        /* \"#utility.yul\":3045:3138   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3163:3165   */\n      0x40\n        /* \"#utility.yul\":3158:3161   */\n      dup3\n        /* \"#utility.yul\":3154:3166   */\n      add\n        /* \"#utility.yul\":3147:3166   */\n      swap1\n      pop\n        /* \"#utility.yul\":2952:3172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3544   */\n    tag_186:\n        /* \"#utility.yul\":3320:3323   */\n      0x00\n        /* \"#utility.yul\":3341:3408   */\n      tag_188\n        /* \"#utility.yul\":3405:3407   */\n      0x26\n        /* \"#utility.yul\":3400:3403   */\n      dup4\n        /* \"#utility.yul\":3341:3408   */\n      tag_171\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3334:3408   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3510   */\n      tag_189\n        /* \"#utility.yul\":3506:3509   */\n      dup3\n        /* \"#utility.yul\":3417:3510   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3535:3537   */\n      0x40\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3526:3538   */\n      add\n        /* \"#utility.yul\":3519:3538   */\n      swap1\n      pop\n        /* \"#utility.yul\":3324:3544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3550:3916   */\n    tag_191:\n        /* \"#utility.yul\":3692:3695   */\n      0x00\n        /* \"#utility.yul\":3713:3780   */\n      tag_193\n        /* \"#utility.yul\":3777:3779   */\n      0x28\n        /* \"#utility.yul\":3772:3775   */\n      dup4\n        /* \"#utility.yul\":3713:3780   */\n      tag_171\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3706:3780   */\n      swap2\n      pop\n        /* \"#utility.yul\":3789:3882   */\n      tag_194\n        /* \"#utility.yul\":3878:3881   */\n      dup3\n        /* \"#utility.yul\":3789:3882   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3907:3909   */\n      0x40\n        /* \"#utility.yul\":3902:3905   */\n      dup3\n        /* \"#utility.yul\":3898:3910   */\n      add\n        /* \"#utility.yul\":3891:3910   */\n      swap1\n      pop\n        /* \"#utility.yul\":3696:3916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4288   */\n    tag_196:\n        /* \"#utility.yul\":4064:4067   */\n      0x00\n        /* \"#utility.yul\":4085:4152   */\n      tag_198\n        /* \"#utility.yul\":4149:4151   */\n      0x25\n        /* \"#utility.yul\":4144:4147   */\n      dup4\n        /* \"#utility.yul\":4085:4152   */\n      tag_171\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4078:4152   */\n      swap2\n      pop\n        /* \"#utility.yul\":4161:4254   */\n      tag_199\n        /* \"#utility.yul\":4250:4253   */\n      dup3\n        /* \"#utility.yul\":4161:4254   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":4279:4281   */\n      0x40\n        /* \"#utility.yul\":4274:4277   */\n      dup3\n        /* \"#utility.yul\":4270:4282   */\n      add\n        /* \"#utility.yul\":4263:4282   */\n      swap1\n      pop\n        /* \"#utility.yul\":4068:4288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4294:4660   */\n    tag_201:\n        /* \"#utility.yul\":4436:4439   */\n      0x00\n        /* \"#utility.yul\":4457:4524   */\n      tag_203\n        /* \"#utility.yul\":4521:4523   */\n      0x24\n        /* \"#utility.yul\":4516:4519   */\n      dup4\n        /* \"#utility.yul\":4457:4524   */\n      tag_171\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4450:4524   */\n      swap2\n      pop\n        /* \"#utility.yul\":4533:4626   */\n      tag_204\n        /* \"#utility.yul\":4622:4625   */\n      dup3\n        /* \"#utility.yul\":4533:4626   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4651:4653   */\n      0x40\n        /* \"#utility.yul\":4646:4649   */\n      dup3\n        /* \"#utility.yul\":4642:4654   */\n      add\n        /* \"#utility.yul\":4635:4654   */\n      swap1\n      pop\n        /* \"#utility.yul\":4440:4660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4666:5032   */\n    tag_206:\n        /* \"#utility.yul\":4808:4811   */\n      0x00\n        /* \"#utility.yul\":4829:4896   */\n      tag_208\n        /* \"#utility.yul\":4893:4895   */\n      0x25\n        /* \"#utility.yul\":4888:4891   */\n      dup4\n        /* \"#utility.yul\":4829:4896   */\n      tag_171\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4822:4896   */\n      swap2\n      pop\n        /* \"#utility.yul\":4905:4998   */\n      tag_209\n        /* \"#utility.yul\":4994:4997   */\n      dup3\n        /* \"#utility.yul\":4905:4998   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5023:5025   */\n      0x40\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5014:5026   */\n      add\n        /* \"#utility.yul\":5007:5026   */\n      swap1\n      pop\n        /* \"#utility.yul\":4812:5032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5038:5156   */\n    tag_211:\n        /* \"#utility.yul\":5125:5149   */\n      tag_213\n        /* \"#utility.yul\":5143:5148   */\n      dup2\n        /* \"#utility.yul\":5125:5149   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5120:5123   */\n      dup3\n        /* \"#utility.yul\":5113:5150   */\n      mstore\n        /* \"#utility.yul\":5103:5156   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5162:5274   */\n    tag_215:\n        /* \"#utility.yul\":5245:5267   */\n      tag_217\n        /* \"#utility.yul\":5261:5266   */\n      dup2\n        /* \"#utility.yul\":5245:5267   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5240:5243   */\n      dup3\n        /* \"#utility.yul\":5233:5268   */\n      mstore\n        /* \"#utility.yul\":5223:5274   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5280:5490   */\n    tag_24:\n        /* \"#utility.yul\":5367:5371   */\n      0x00\n        /* \"#utility.yul\":5405:5407   */\n      0x20\n        /* \"#utility.yul\":5394:5403   */\n      dup3\n        /* \"#utility.yul\":5390:5408   */\n      add\n        /* \"#utility.yul\":5382:5408   */\n      swap1\n      pop\n        /* \"#utility.yul\":5418:5483   */\n      tag_220\n        /* \"#utility.yul\":5480:5481   */\n      0x00\n        /* \"#utility.yul\":5469:5478   */\n      dup4\n        /* \"#utility.yul\":5465:5482   */\n      add\n        /* \"#utility.yul\":5456:5462   */\n      dup5\n        /* \"#utility.yul\":5418:5483   */\n      tag_162\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5372:5490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5496:5809   */\n    tag_18:\n        /* \"#utility.yul\":5609:5613   */\n      0x00\n        /* \"#utility.yul\":5647:5649   */\n      0x20\n        /* \"#utility.yul\":5636:5645   */\n      dup3\n        /* \"#utility.yul\":5632:5650   */\n      add\n        /* \"#utility.yul\":5624:5650   */\n      swap1\n      pop\n        /* \"#utility.yul\":5696:5705   */\n      dup2\n        /* \"#utility.yul\":5690:5694   */\n      dup2\n        /* \"#utility.yul\":5686:5706   */\n      sub\n        /* \"#utility.yul\":5682:5683   */\n      0x00\n        /* \"#utility.yul\":5671:5680   */\n      dup4\n        /* \"#utility.yul\":5667:5684   */\n      add\n        /* \"#utility.yul\":5660:5707   */\n      mstore\n        /* \"#utility.yul\":5724:5802   */\n      tag_222\n        /* \"#utility.yul\":5797:5801   */\n      dup2\n        /* \"#utility.yul\":5788:5794   */\n      dup5\n        /* \"#utility.yul\":5724:5802   */\n      tag_166\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5716:5802   */\n      swap1\n      pop\n        /* \"#utility.yul\":5614:5809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5815:6234   */\n    tag_125:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6068:6077   */\n      dup2\n        /* \"#utility.yul\":6062:6066   */\n      dup2\n        /* \"#utility.yul\":6058:6078   */\n      sub\n        /* \"#utility.yul\":6054:6055   */\n      0x00\n        /* \"#utility.yul\":6043:6052   */\n      dup4\n        /* \"#utility.yul\":6039:6056   */\n      add\n        /* \"#utility.yul\":6032:6079   */\n      mstore\n        /* \"#utility.yul\":6096:6227   */\n      tag_224\n        /* \"#utility.yul\":6222:6226   */\n      dup2\n        /* \"#utility.yul\":6096:6227   */\n      tag_176\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6088:6227   */\n      swap1\n      pop\n        /* \"#utility.yul\":5986:6234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6240:6659   */\n    tag_117:\n        /* \"#utility.yul\":6406:6410   */\n      0x00\n        /* \"#utility.yul\":6444:6446   */\n      0x20\n        /* \"#utility.yul\":6433:6442   */\n      dup3\n        /* \"#utility.yul\":6429:6447   */\n      add\n        /* \"#utility.yul\":6421:6447   */\n      swap1\n      pop\n        /* \"#utility.yul\":6493:6502   */\n      dup2\n        /* \"#utility.yul\":6487:6491   */\n      dup2\n        /* \"#utility.yul\":6483:6503   */\n      sub\n        /* \"#utility.yul\":6479:6480   */\n      0x00\n        /* \"#utility.yul\":6468:6477   */\n      dup4\n        /* \"#utility.yul\":6464:6481   */\n      add\n        /* \"#utility.yul\":6457:6504   */\n      mstore\n        /* \"#utility.yul\":6521:6652   */\n      tag_226\n        /* \"#utility.yul\":6647:6651   */\n      dup2\n        /* \"#utility.yul\":6521:6652   */\n      tag_181\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6513:6652   */\n      swap1\n      pop\n        /* \"#utility.yul\":6411:6659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6665:7084   */\n    tag_130:\n        /* \"#utility.yul\":6831:6835   */\n      0x00\n        /* \"#utility.yul\":6869:6871   */\n      0x20\n        /* \"#utility.yul\":6858:6867   */\n      dup3\n        /* \"#utility.yul\":6854:6872   */\n      add\n        /* \"#utility.yul\":6846:6872   */\n      swap1\n      pop\n        /* \"#utility.yul\":6918:6927   */\n      dup2\n        /* \"#utility.yul\":6912:6916   */\n      dup2\n        /* \"#utility.yul\":6908:6928   */\n      sub\n        /* \"#utility.yul\":6904:6905   */\n      0x00\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6889:6906   */\n      add\n        /* \"#utility.yul\":6882:6929   */\n      mstore\n        /* \"#utility.yul\":6946:7077   */\n      tag_228\n        /* \"#utility.yul\":7072:7076   */\n      dup2\n        /* \"#utility.yul\":6946:7077   */\n      tag_186\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6938:7077   */\n      swap1\n      pop\n        /* \"#utility.yul\":6836:7084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7090:7509   */\n    tag_82:\n        /* \"#utility.yul\":7256:7260   */\n      0x00\n        /* \"#utility.yul\":7294:7296   */\n      0x20\n        /* \"#utility.yul\":7283:7292   */\n      dup3\n        /* \"#utility.yul\":7279:7297   */\n      add\n        /* \"#utility.yul\":7271:7297   */\n      swap1\n      pop\n        /* \"#utility.yul\":7343:7352   */\n      dup2\n        /* \"#utility.yul\":7337:7341   */\n      dup2\n        /* \"#utility.yul\":7333:7353   */\n      sub\n        /* \"#utility.yul\":7329:7330   */\n      0x00\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7314:7331   */\n      add\n        /* \"#utility.yul\":7307:7354   */\n      mstore\n        /* \"#utility.yul\":7371:7502   */\n      tag_230\n        /* \"#utility.yul\":7497:7501   */\n      dup2\n        /* \"#utility.yul\":7371:7502   */\n      tag_191\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":7363:7502   */\n      swap1\n      pop\n        /* \"#utility.yul\":7261:7509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7515:7934   */\n    tag_122:\n        /* \"#utility.yul\":7681:7685   */\n      0x00\n        /* \"#utility.yul\":7719:7721   */\n      0x20\n        /* \"#utility.yul\":7708:7717   */\n      dup3\n        /* \"#utility.yul\":7704:7722   */\n      add\n        /* \"#utility.yul\":7696:7722   */\n      swap1\n      pop\n        /* \"#utility.yul\":7768:7777   */\n      dup2\n        /* \"#utility.yul\":7762:7766   */\n      dup2\n        /* \"#utility.yul\":7758:7778   */\n      sub\n        /* \"#utility.yul\":7754:7755   */\n      0x00\n        /* \"#utility.yul\":7743:7752   */\n      dup4\n        /* \"#utility.yul\":7739:7756   */\n      add\n        /* \"#utility.yul\":7732:7779   */\n      mstore\n        /* \"#utility.yul\":7796:7927   */\n      tag_232\n        /* \"#utility.yul\":7922:7926   */\n      dup2\n        /* \"#utility.yul\":7796:7927   */\n      tag_196\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7788:7927   */\n      swap1\n      pop\n        /* \"#utility.yul\":7686:7934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7940:8359   */\n    tag_114:\n        /* \"#utility.yul\":8106:8110   */\n      0x00\n        /* \"#utility.yul\":8144:8146   */\n      0x20\n        /* \"#utility.yul\":8133:8142   */\n      dup3\n        /* \"#utility.yul\":8129:8147   */\n      add\n        /* \"#utility.yul\":8121:8147   */\n      swap1\n      pop\n        /* \"#utility.yul\":8193:8202   */\n      dup2\n        /* \"#utility.yul\":8187:8191   */\n      dup2\n        /* \"#utility.yul\":8183:8203   */\n      sub\n        /* \"#utility.yul\":8179:8180   */\n      0x00\n        /* \"#utility.yul\":8168:8177   */\n      dup4\n        /* \"#utility.yul\":8164:8181   */\n      add\n        /* \"#utility.yul\":8157:8204   */\n      mstore\n        /* \"#utility.yul\":8221:8352   */\n      tag_234\n        /* \"#utility.yul\":8347:8351   */\n      dup2\n        /* \"#utility.yul\":8221:8352   */\n      tag_201\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8213:8352   */\n      swap1\n      pop\n        /* \"#utility.yul\":8111:8359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8784   */\n    tag_103:\n        /* \"#utility.yul\":8531:8535   */\n      0x00\n        /* \"#utility.yul\":8569:8571   */\n      0x20\n        /* \"#utility.yul\":8558:8567   */\n      dup3\n        /* \"#utility.yul\":8554:8572   */\n      add\n        /* \"#utility.yul\":8546:8572   */\n      swap1\n      pop\n        /* \"#utility.yul\":8618:8627   */\n      dup2\n        /* \"#utility.yul\":8612:8616   */\n      dup2\n        /* \"#utility.yul\":8608:8628   */\n      sub\n        /* \"#utility.yul\":8604:8605   */\n      0x00\n        /* \"#utility.yul\":8593:8602   */\n      dup4\n        /* \"#utility.yul\":8589:8606   */\n      add\n        /* \"#utility.yul\":8582:8629   */\n      mstore\n        /* \"#utility.yul\":8646:8777   */\n      tag_236\n        /* \"#utility.yul\":8772:8776   */\n      dup2\n        /* \"#utility.yul\":8646:8777   */\n      tag_206\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":8638:8777   */\n      swap1\n      pop\n        /* \"#utility.yul\":8536:8784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8790:9012   */\n    tag_28:\n        /* \"#utility.yul\":8883:8887   */\n      0x00\n        /* \"#utility.yul\":8921:8923   */\n      0x20\n        /* \"#utility.yul\":8910:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8924   */\n      add\n        /* \"#utility.yul\":8898:8924   */\n      swap1\n      pop\n        /* \"#utility.yul\":8934:9005   */\n      tag_238\n        /* \"#utility.yul\":9002:9003   */\n      0x00\n        /* \"#utility.yul\":8991:9000   */\n      dup4\n        /* \"#utility.yul\":8987:9004   */\n      add\n        /* \"#utility.yul\":8978:8984   */\n      dup5\n        /* \"#utility.yul\":8934:9005   */\n      tag_211\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8888:9012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9018:9232   */\n    tag_37:\n        /* \"#utility.yul\":9107:9111   */\n      0x00\n        /* \"#utility.yul\":9145:9147   */\n      0x20\n        /* \"#utility.yul\":9134:9143   */\n      dup3\n        /* \"#utility.yul\":9130:9148   */\n      add\n        /* \"#utility.yul\":9122:9148   */\n      swap1\n      pop\n        /* \"#utility.yul\":9158:9225   */\n      tag_240\n        /* \"#utility.yul\":9222:9223   */\n      0x00\n        /* \"#utility.yul\":9211:9220   */\n      dup4\n        /* \"#utility.yul\":9207:9224   */\n      add\n        /* \"#utility.yul\":9198:9204   */\n      dup5\n        /* \"#utility.yul\":9158:9225   */\n      tag_215\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9112:9232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9238:9337   */\n    tag_169:\n        /* \"#utility.yul\":9290:9296   */\n      0x00\n        /* \"#utility.yul\":9324:9329   */\n      dup2\n        /* \"#utility.yul\":9318:9330   */\n      mload\n        /* \"#utility.yul\":9308:9330   */\n      swap1\n      pop\n        /* \"#utility.yul\":9297:9337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9343:9512   */\n    tag_171:\n        /* \"#utility.yul\":9427:9438   */\n      0x00\n        /* \"#utility.yul\":9461:9467   */\n      dup3\n        /* \"#utility.yul\":9456:9459   */\n      dup3\n        /* \"#utility.yul\":9449:9468   */\n      mstore\n        /* \"#utility.yul\":9501:9505   */\n      0x20\n        /* \"#utility.yul\":9496:9499   */\n      dup3\n        /* \"#utility.yul\":9492:9506   */\n      add\n        /* \"#utility.yul\":9477:9506   */\n      swap1\n      pop\n        /* \"#utility.yul\":9439:9512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9518:9823   */\n    tag_91:\n        /* \"#utility.yul\":9558:9561   */\n      0x00\n        /* \"#utility.yul\":9577:9597   */\n      tag_244\n        /* \"#utility.yul\":9595:9596   */\n      dup3\n        /* \"#utility.yul\":9577:9597   */\n      tag_214\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9572:9597   */\n      swap2\n      pop\n        /* \"#utility.yul\":9611:9631   */\n      tag_245\n        /* \"#utility.yul\":9629:9630   */\n      dup4\n        /* \"#utility.yul\":9611:9631   */\n      tag_214\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9606:9631   */\n      swap3\n      pop\n        /* \"#utility.yul\":9765:9766   */\n      dup3\n        /* \"#utility.yul\":9697:9763   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9693:9767   */\n      sub\n        /* \"#utility.yul\":9690:9691   */\n      dup3\n        /* \"#utility.yul\":9687:9768   */\n      gt\n        /* \"#utility.yul\":9684:9686   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":9771:9789   */\n      tag_247\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9684:9686   */\n    tag_246:\n        /* \"#utility.yul\":9815:9816   */\n      dup3\n        /* \"#utility.yul\":9812:9813   */\n      dup3\n        /* \"#utility.yul\":9808:9817   */\n      add\n        /* \"#utility.yul\":9801:9817   */\n      swap1\n      pop\n        /* \"#utility.yul\":9562:9823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9829:9925   */\n    tag_249:\n        /* \"#utility.yul\":9866:9873   */\n      0x00\n        /* \"#utility.yul\":9895:9919   */\n      tag_251\n        /* \"#utility.yul\":9913:9918   */\n      dup3\n        /* \"#utility.yul\":9895:9919   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9884:9919   */\n      swap1\n      pop\n        /* \"#utility.yul\":9874:9925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9931:10021   */\n    tag_165:\n        /* \"#utility.yul\":9965:9972   */\n      0x00\n        /* \"#utility.yul\":10008:10013   */\n      dup2\n        /* \"#utility.yul\":10001:10014   */\n      iszero\n        /* \"#utility.yul\":9994:10015   */\n      iszero\n        /* \"#utility.yul\":9983:10015   */\n      swap1\n      pop\n        /* \"#utility.yul\":9973:10021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10153   */\n    tag_252:\n        /* \"#utility.yul\":10064:10071   */\n      0x00\n        /* \"#utility.yul\":10104:10146   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10097:10102   */\n      dup3\n        /* \"#utility.yul\":10093:10147   */\n      and\n        /* \"#utility.yul\":10082:10147   */\n      swap1\n      pop\n        /* \"#utility.yul\":10072:10153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10159:10236   */\n    tag_214:\n        /* \"#utility.yul\":10196:10203   */\n      0x00\n        /* \"#utility.yul\":10225:10230   */\n      dup2\n        /* \"#utility.yul\":10214:10230   */\n      swap1\n      pop\n        /* \"#utility.yul\":10204:10236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10242:10328   */\n    tag_218:\n        /* \"#utility.yul\":10277:10284   */\n      0x00\n        /* \"#utility.yul\":10317:10321   */\n      0xff\n        /* \"#utility.yul\":10310:10315   */\n      dup3\n        /* \"#utility.yul\":10306:10322   */\n      and\n        /* \"#utility.yul\":10295:10322   */\n      swap1\n      pop\n        /* \"#utility.yul\":10285:10328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10334:10641   */\n    tag_173:\n        /* \"#utility.yul\":10402:10403   */\n      0x00\n        /* \"#utility.yul\":10412:10525   */\n    tag_258:\n        /* \"#utility.yul\":10426:10432   */\n      dup4\n        /* \"#utility.yul\":10423:10424   */\n      dup2\n        /* \"#utility.yul\":10420:10433   */\n      lt\n        /* \"#utility.yul\":10412:10525   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":10511:10512   */\n      dup1\n        /* \"#utility.yul\":10506:10509   */\n      dup3\n        /* \"#utility.yul\":10502:10513   */\n      add\n        /* \"#utility.yul\":10496:10514   */\n      mload\n        /* \"#utility.yul\":10492:10493   */\n      dup2\n        /* \"#utility.yul\":10487:10490   */\n      dup5\n        /* \"#utility.yul\":10483:10494   */\n      add\n        /* \"#utility.yul\":10476:10515   */\n      mstore\n        /* \"#utility.yul\":10448:10450   */\n      0x20\n        /* \"#utility.yul\":10445:10446   */\n      dup2\n        /* \"#utility.yul\":10441:10451   */\n      add\n        /* \"#utility.yul\":10436:10451   */\n      swap1\n      pop\n        /* \"#utility.yul\":10412:10525   */\n      jump(tag_258)\n    tag_260:\n        /* \"#utility.yul\":10543:10549   */\n      dup4\n        /* \"#utility.yul\":10540:10541   */\n      dup2\n        /* \"#utility.yul\":10537:10550   */\n      gt\n        /* \"#utility.yul\":10534:10536   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":10623:10624   */\n      0x00\n        /* \"#utility.yul\":10614:10620   */\n      dup5\n        /* \"#utility.yul\":10609:10612   */\n      dup5\n        /* \"#utility.yul\":10605:10621   */\n      add\n        /* \"#utility.yul\":10598:10625   */\n      mstore\n        /* \"#utility.yul\":10534:10536   */\n    tag_261:\n        /* \"#utility.yul\":10383:10641   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10647:10967   */\n    tag_65:\n        /* \"#utility.yul\":10691:10697   */\n      0x00\n        /* \"#utility.yul\":10728:10729   */\n      0x02\n        /* \"#utility.yul\":10722:10726   */\n      dup3\n        /* \"#utility.yul\":10718:10730   */\n      div\n        /* \"#utility.yul\":10708:10730   */\n      swap1\n      pop\n        /* \"#utility.yul\":10775:10776   */\n      0x01\n        /* \"#utility.yul\":10769:10773   */\n      dup3\n        /* \"#utility.yul\":10765:10777   */\n      and\n        /* \"#utility.yul\":10796:10814   */\n      dup1\n        /* \"#utility.yul\":10786:10788   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":10852:10856   */\n      0x7f\n        /* \"#utility.yul\":10844:10850   */\n      dup3\n        /* \"#utility.yul\":10840:10857   */\n      and\n        /* \"#utility.yul\":10830:10857   */\n      swap2\n      pop\n        /* \"#utility.yul\":10786:10788   */\n    tag_263:\n        /* \"#utility.yul\":10914:10916   */\n      0x20\n        /* \"#utility.yul\":10906:10912   */\n      dup3\n        /* \"#utility.yul\":10903:10917   */\n      lt\n        /* \"#utility.yul\":10883:10901   */\n      dup2\n        /* \"#utility.yul\":10880:10918   */\n      eq\n        /* \"#utility.yul\":10877:10879   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":10933:10951   */\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10877:10879   */\n    tag_264:\n        /* \"#utility.yul\":10698:10967   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10973:11153   */\n    tag_248:\n        /* \"#utility.yul\":11021:11098   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11018:11019   */\n      0x00\n        /* \"#utility.yul\":11011:11099   */\n      mstore\n        /* \"#utility.yul\":11118:11122   */\n      0x11\n        /* \"#utility.yul\":11115:11116   */\n      0x04\n        /* \"#utility.yul\":11108:11123   */\n      mstore\n        /* \"#utility.yul\":11142:11146   */\n      0x24\n        /* \"#utility.yul\":11139:11140   */\n      0x00\n        /* \"#utility.yul\":11132:11147   */\n      revert\n        /* \"#utility.yul\":11159:11339   */\n    tag_266:\n        /* \"#utility.yul\":11207:11284   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11204:11205   */\n      0x00\n        /* \"#utility.yul\":11197:11285   */\n      mstore\n        /* \"#utility.yul\":11304:11308   */\n      0x22\n        /* \"#utility.yul\":11301:11302   */\n      0x04\n        /* \"#utility.yul\":11294:11309   */\n      mstore\n        /* \"#utility.yul\":11328:11332   */\n      0x24\n        /* \"#utility.yul\":11325:11326   */\n      0x00\n        /* \"#utility.yul\":11318:11333   */\n      revert\n        /* \"#utility.yul\":11345:11447   */\n    tag_175:\n        /* \"#utility.yul\":11386:11392   */\n      0x00\n        /* \"#utility.yul\":11437:11439   */\n      0x1f\n        /* \"#utility.yul\":11433:11440   */\n      not\n        /* \"#utility.yul\":11428:11430   */\n      0x1f\n        /* \"#utility.yul\":11421:11426   */\n      dup4\n        /* \"#utility.yul\":11417:11431   */\n      add\n        /* \"#utility.yul\":11413:11441   */\n      and\n        /* \"#utility.yul\":11403:11441   */\n      swap1\n      pop\n        /* \"#utility.yul\":11393:11447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11453:11675   */\n    tag_180:\n        /* \"#utility.yul\":11593:11627   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11589:11590   */\n      0x00\n        /* \"#utility.yul\":11581:11587   */\n      dup3\n        /* \"#utility.yul\":11577:11591   */\n      add\n        /* \"#utility.yul\":11570:11628   */\n      mstore\n        /* \"#utility.yul\":11662:11667   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11657:11659   */\n      0x20\n        /* \"#utility.yul\":11649:11655   */\n      dup3\n        /* \"#utility.yul\":11645:11660   */\n      add\n        /* \"#utility.yul\":11638:11668   */\n      mstore\n        /* \"#utility.yul\":11559:11675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11681:11902   */\n    tag_185:\n        /* \"#utility.yul\":11821:11855   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11817:11818   */\n      0x00\n        /* \"#utility.yul\":11809:11815   */\n      dup3\n        /* \"#utility.yul\":11805:11819   */\n      add\n        /* \"#utility.yul\":11798:11856   */\n      mstore\n        /* \"#utility.yul\":11890:11894   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11885:11887   */\n      0x20\n        /* \"#utility.yul\":11877:11883   */\n      dup3\n        /* \"#utility.yul\":11873:11888   */\n      add\n        /* \"#utility.yul\":11866:11895   */\n      mstore\n        /* \"#utility.yul\":11787:11902   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11908:12133   */\n    tag_190:\n        /* \"#utility.yul\":12048:12082   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12044:12045   */\n      0x00\n        /* \"#utility.yul\":12036:12042   */\n      dup3\n        /* \"#utility.yul\":12032:12046   */\n      add\n        /* \"#utility.yul\":12025:12083   */\n      mstore\n        /* \"#utility.yul\":12117:12125   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12112:12114   */\n      0x20\n        /* \"#utility.yul\":12104:12110   */\n      dup3\n        /* \"#utility.yul\":12100:12115   */\n      add\n        /* \"#utility.yul\":12093:12126   */\n      mstore\n        /* \"#utility.yul\":12014:12133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12139:12366   */\n    tag_195:\n        /* \"#utility.yul\":12279:12313   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":12275:12276   */\n      0x00\n        /* \"#utility.yul\":12267:12273   */\n      dup3\n        /* \"#utility.yul\":12263:12277   */\n      add\n        /* \"#utility.yul\":12256:12314   */\n      mstore\n        /* \"#utility.yul\":12348:12358   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12343:12345   */\n      0x20\n        /* \"#utility.yul\":12335:12341   */\n      dup3\n        /* \"#utility.yul\":12331:12346   */\n      add\n        /* \"#utility.yul\":12324:12359   */\n      mstore\n        /* \"#utility.yul\":12245:12366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12372:12596   */\n    tag_200:\n        /* \"#utility.yul\":12512:12546   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12508:12509   */\n      0x00\n        /* \"#utility.yul\":12500:12506   */\n      dup3\n        /* \"#utility.yul\":12496:12510   */\n      add\n        /* \"#utility.yul\":12489:12547   */\n      mstore\n        /* \"#utility.yul\":12581:12588   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12576:12578   */\n      0x20\n        /* \"#utility.yul\":12568:12574   */\n      dup3\n        /* \"#utility.yul\":12564:12579   */\n      add\n        /* \"#utility.yul\":12557:12589   */\n      mstore\n        /* \"#utility.yul\":12478:12596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12602:12825   */\n    tag_205:\n        /* \"#utility.yul\":12742:12776   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":12738:12739   */\n      0x00\n        /* \"#utility.yul\":12730:12736   */\n      dup3\n        /* \"#utility.yul\":12726:12740   */\n      add\n        /* \"#utility.yul\":12719:12777   */\n      mstore\n        /* \"#utility.yul\":12811:12817   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12806:12808   */\n      0x20\n        /* \"#utility.yul\":12798:12804   */\n      dup3\n        /* \"#utility.yul\":12794:12809   */\n      add\n        /* \"#utility.yul\":12787:12818   */\n      mstore\n        /* \"#utility.yul\":12708:12825   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12831:13055   */\n    tag_210:\n        /* \"#utility.yul\":12971:13005   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":12967:12968   */\n      0x00\n        /* \"#utility.yul\":12959:12965   */\n      dup3\n        /* \"#utility.yul\":12955:12969   */\n      add\n        /* \"#utility.yul\":12948:13006   */\n      mstore\n        /* \"#utility.yul\":13040:13047   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13035:13037   */\n      0x20\n        /* \"#utility.yul\":13027:13033   */\n      dup3\n        /* \"#utility.yul\":13023:13038   */\n      add\n        /* \"#utility.yul\":13016:13048   */\n      mstore\n        /* \"#utility.yul\":12937:13055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13061:13183   */\n    tag_141:\n        /* \"#utility.yul\":13134:13158   */\n      tag_278\n        /* \"#utility.yul\":13152:13157   */\n      dup2\n        /* \"#utility.yul\":13134:13158   */\n      tag_249\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":13127:13132   */\n      dup2\n        /* \"#utility.yul\":13124:13159   */\n      eq\n        /* \"#utility.yul\":13114:13116   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":13173:13174   */\n      0x00\n        /* \"#utility.yul\":13170:13171   */\n      dup1\n        /* \"#utility.yul\":13163:13175   */\n      revert\n        /* \"#utility.yul\":13114:13116   */\n    tag_279:\n        /* \"#utility.yul\":13104:13183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13189:13311   */\n    tag_145:\n        /* \"#utility.yul\":13262:13286   */\n      tag_281\n        /* \"#utility.yul\":13280:13285   */\n      dup2\n        /* \"#utility.yul\":13262:13286   */\n      tag_214\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":13255:13260   */\n      dup2\n        /* \"#utility.yul\":13252:13287   */\n      eq\n        /* \"#utility.yul\":13242:13244   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":13301:13302   */\n      0x00\n        /* \"#utility.yul\":13298:13299   */\n      dup1\n        /* \"#utility.yul\":13291:13303   */\n      revert\n        /* \"#utility.yul\":13242:13244   */\n    tag_282:\n        /* \"#utility.yul\":13232:13311   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d68572f0fd21a1544c3084b4bf245d407cdb96c831841f58654be01e4c5cc3e64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3266:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:259:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "300:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "293:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:4"
															},
															"nodeType": "YulIf",
															"src": "262:2:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "338:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "343:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "348:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "316:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:354:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:215:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "503:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "512:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "515:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "505:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "505:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "482:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "490:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "478:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "478:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "497:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "474:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:35:4"
															},
															"nodeType": "YulIf",
															"src": "464:2:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "528:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "548:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "542:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "532:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "636:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "644:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "632:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "659:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "573:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "564:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "432:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "440:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "448:5:4",
														"type": ""
													}
												],
												"src": "381:288:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "789:538:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "835:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "844:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "847:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "837:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "837:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "837:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "810:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "819:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "806:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "806:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "831:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "802:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "802:32:4"
															},
															"nodeType": "YulIf",
															"src": "799:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "861:224:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "876:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "900:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "911:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "896:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "896:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "890:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "890:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "880:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "961:16:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "970:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "973:1:4",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "963:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:12:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "963:12:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "933:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "930:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "927:2:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "991:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1047:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1058:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1043:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1043:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1001:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1001:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "991:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1095:225:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1134:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1145:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1130:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1130:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1124:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1124:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1196:16:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1205:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1208:1:4",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1198:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1198:12:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1198:12:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1176:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1165:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1165:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1162:2:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1226:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1282:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1293:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1278:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1278:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1236:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1226:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "751:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "762:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "774:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "782:6:4",
														"type": ""
													}
												],
												"src": "675:652:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1374:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1384:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1394:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1443:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1451:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1423:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1423:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1367:6:4",
														"type": ""
													}
												],
												"src": "1333:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1508:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1518:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1528:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1501:6:4",
														"type": ""
													}
												],
												"src": "1468:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1721:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1723:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1723:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1723:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1701:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1690:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:30:4"
															},
															"nodeType": "YulIf",
															"src": "1687:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1753:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1761:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1753:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1827:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1839:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1835:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1827:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1600:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1611:4:4",
														"type": ""
													}
												],
												"src": "1549:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1922:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1931:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1926:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1991:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2016:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2021:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2012:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2012:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2035:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2040:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2031:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2031:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2025:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2025:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2005:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2005:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2005:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1952:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1955:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1949:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1963:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1965:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1974:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1977:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1970:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1970:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1965:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1945:3:4",
																"statements": []
															},
															"src": "1941:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2088:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2138:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2143:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2134:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2134:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2152:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2127:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2127:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2127:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2069:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2072:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2066:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:13:4"
															},
															"nodeType": "YulIf",
															"src": "2063:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1894:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1899:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1904:6:4",
														"type": ""
													}
												],
												"src": "1863:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2237:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2251:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2247:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2268:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2298:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2294:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2272:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2345:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2359:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2373:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2381:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2369:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2369:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2359:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2325:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:26:4"
															},
															"nodeType": "YulIf",
															"src": "2315:2:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2448:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2462:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2412:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2443:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2432:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2409:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:38:4"
															},
															"nodeType": "YulIf",
															"src": "2406:2:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2211:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2220:6:4",
														"type": ""
													}
												],
												"src": "2176:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2555:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2577:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2607:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2585:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2573:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2573:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2559:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2724:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2726:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2667:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2679:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2664:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2664:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2703:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2715:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2661:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:62:4"
															},
															"nodeType": "YulIf",
															"src": "2658:2:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2762:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2766:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2755:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2755:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2531:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2539:4:4",
														"type": ""
													}
												],
												"src": "2502:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2817:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2834:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2837:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2924:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2955:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2958:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2948:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2948:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2789:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3020:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3013:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3013:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3117:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3120:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3110:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3141:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3144:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2975:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3209:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3219:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3244:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3233:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3233:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3253:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3229:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3219:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3192:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3202:6:4",
														"type": ""
													}
												],
												"src": "3161:102:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200171b3803806200171b833981810160405281019062000037919062000193565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b50505062000376565b8280546200007f906200029b565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200022f565b62000206565b9050828152602081018484840111156200015157600080fd5b6200015e84828562000265565b509392505050565b600082601f8301126200017857600080fd5b81516200018a84826020860162000121565b91505092915050565b60008060408385031215620001a757600080fd5b600083015167ffffffffffffffff811115620001c257600080fd5b620001d08582860162000166565b925050602083015167ffffffffffffffff811115620001ee57600080fd5b620001fc8582860162000166565b9150509250929050565b60006200021262000225565b9050620002208282620002d1565b919050565b6000604051905090565b600067ffffffffffffffff8211156200024d576200024c62000336565b5b620002588262000365565b9050602081019050919050565b60005b838110156200028557808201518184015260208101905062000268565b8381111562000295576000848401525b50505050565b60006002820490506001821680620002b457607f821691505b60208210811415620002cb57620002ca62000307565b5b50919050565b620002dc8262000365565b810181811067ffffffffffffffff82111715620002fe57620002fd62000336565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61139580620003866000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea26469706673582212204d68572f0fd21a1544c3084b4bf245d407cdb96c831841f58654be01e4c5cc3e64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x171B CODESIZE SUB DUP1 PUSH3 0x171B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x193 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x376 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x29B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x22F JUMP JUMPDEST PUSH3 0x206 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15E DUP5 DUP3 DUP6 PUSH3 0x265 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x18A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D0 DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FC DUP6 DUP3 DUP7 ADD PUSH3 0x166 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x212 PUSH3 0x225 JUMP JUMPDEST SWAP1 POP PUSH3 0x220 DUP3 DUP3 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x24D JUMPI PUSH3 0x24C PUSH3 0x336 JUMP JUMPDEST JUMPDEST PUSH3 0x258 DUP3 PUSH3 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x268 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x295 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CA PUSH3 0x307 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2DC DUP3 PUSH3 0x365 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2FE JUMPI PUSH3 0x2FD PUSH3 0x336 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1395 DUP1 PUSH3 0x386 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C DUP6 PUSH2 0x414 PUSH2 0x747 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x43E PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x44C PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x534 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x582 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x590 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C6 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x697 PUSH2 0x68E PUSH2 0x747 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x6AF PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB95 DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC9 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC19 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC2A DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC57 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC68 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC79 DUP7 DUP3 DUP8 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB5 DUP6 DUP3 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD9 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xCE3 DUP2 DUP6 PUSH2 0xF78 JUMP JUMPDEST SWAP4 POP PUSH2 0xCF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1034 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH2 0x10F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH1 0x23 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD1F DUP3 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 PUSH1 0x22 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD42 DUP3 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5A PUSH1 0x26 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD65 DUP3 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7D PUSH1 0x28 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD88 DUP3 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA0 PUSH1 0x25 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAB DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 PUSH1 0x24 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCE DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE6 PUSH1 0x25 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xDF1 DUP3 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE05 DUP2 PUSH2 0x101D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE14 DUP2 PUSH2 0x1027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE4F DUP2 DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE70 DUP2 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE90 DUP2 PUSH2 0xD2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 PUSH2 0xD4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED0 DUP2 PUSH2 0xD70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEF0 DUP2 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF10 DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF30 DUP2 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF4C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF67 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 DUP3 PUSH2 0x101D JUMP JUMPDEST SWAP2 POP PUSH2 0xF9F DUP4 PUSH2 0x101D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0x1099 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEA DUP3 PUSH2 0xFFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1052 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1037 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x107F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1092 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1351 DUP2 PUSH2 0x101D JUMP JUMPDEST DUP2 EQ PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH9 0x572F0FD21A1544C308 0x4B 0x4B CALLCODE GASLIMIT 0xD4 SMOD 0xCD 0xB9 PUSH13 0x831841F58654BE01E4C5CC3E64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "1367:10416:1:-:0;;;1942:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2016:5;2008;:13;;;;;;;;;;;;:::i;:::-;;2041:7;2031;:17;;;;;;;;;;;;:::i;:::-;;1942:113;;1367:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:354:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;303:1;300;293:12;262:2;316:39;348:6;343:3;338;316:39;:::i;:::-;102:259;;;;;;:::o;381:288::-;448:5;497:3;490:4;482:6;478:17;474:27;464:2;;515:1;512;505:12;464:2;548:6;542:13;573:90;659:3;651:6;644:4;636:6;632:17;573:90;:::i;:::-;564:99;;454:215;;;;;:::o;675:652::-;774:6;782;831:2;819:9;810:7;806:23;802:32;799:2;;;847:1;844;837:12;799:2;911:1;900:9;896:17;890:24;941:18;933:6;930:30;927:2;;;973:1;970;963:12;927:2;1001:74;1067:7;1058:6;1047:9;1043:22;1001:74;:::i;:::-;991:84;;861:224;1145:2;1134:9;1130:18;1124:25;1176:18;1168:6;1165:30;1162:2;;;1208:1;1205;1198:12;1162:2;1236:74;1302:7;1293:6;1282:9;1278:22;1236:74;:::i;:::-;1226:84;;1095:225;789:538;;;;;:::o;1333:129::-;1367:6;1394:20;;:::i;:::-;1384:30;;1423:33;1451:4;1443:6;1423:33;:::i;:::-;1374:88;;;:::o;1468:75::-;1501:6;1534:2;1528:9;1518:19;;1508:35;:::o;1549:308::-;1611:4;1701:18;1693:6;1690:30;1687:2;;;1723:18;;:::i;:::-;1687:2;1761:29;1783:6;1761:29;:::i;:::-;1753:37;;1845:4;1839;1835:15;1827:23;;1616:241;;;:::o;1863:307::-;1931:1;1941:113;1955:6;1952:1;1949:13;1941:113;;;2040:1;2035:3;2031:11;2025:18;2021:1;2016:3;2012:11;2005:39;1977:2;1974:1;1970:10;1965:15;;1941:113;;;2072:6;2069:1;2066:13;2063:2;;;2152:1;2143:6;2138:3;2134:16;2127:27;2063:2;1912:258;;;;:::o;2176:320::-;2220:6;2257:1;2251:4;2247:12;2237:22;;2304:1;2298:4;2294:12;2325:18;2315:2;;2381:4;2373:6;2369:17;2359:27;;2315:2;2443;2435:6;2432:14;2412:18;2409:38;2406:2;;;2462:18;;:::i;:::-;2406:2;2227:269;;;;:::o;2502:281::-;2585:27;2607:4;2585:27;:::i;:::-;2577:6;2573:40;2715:6;2703:10;2700:22;2679:18;2667:10;2664:34;2661:62;2658:2;;;2726:18;;:::i;:::-;2658:2;2766:10;2762:2;2755:22;2545:238;;;:::o;2789:180::-;2837:77;2834:1;2827:88;2934:4;2931:1;2924:15;2958:4;2955:1;2948:15;2975:180;3023:77;3020:1;3013:88;3120:4;3117:1;3110:15;3144:4;3141:1;3134:15;3161:102;3202:6;3253:2;3249:7;3244:2;3237:5;3233:14;3229:28;3219:38;;3209:54;;;:::o;1367:10416:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13314:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:262:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:4"
															},
															"nodeType": "YulIf",
															"src": "658:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:4",
														"type": ""
													}
												],
												"src": "565:407:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:4"
															},
															"nodeType": "YulIf",
															"src": "1088:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:4",
														"type": ""
													}
												],
												"src": "978:552:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:4"
															},
															"nodeType": "YulIf",
															"src": "1629:2:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:4",
														"type": ""
													}
												],
												"src": "1536:407:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2030:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2003:3:4",
														"type": ""
													}
												],
												"src": "1949:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2180:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2235:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2315:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2144:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2152:3:4",
														"type": ""
													}
												],
												"src": "2064:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2590:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2656:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2762:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2673:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2673:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2775:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2782:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2775:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2568:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2576:3:4",
														"type": ""
													}
												],
												"src": "2434:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2952:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2962:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3028:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2969:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2962:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3134:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3045:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3147:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3158:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3154:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2940:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2948:3:4",
														"type": ""
													}
												],
												"src": "2806:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3334:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3400:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3405:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3341:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3334:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3506:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "3417:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3417:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3519:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3526:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3519:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3312:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3320:3:4",
														"type": ""
													}
												],
												"src": "3178:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3696:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3706:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3772:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3713:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3878:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "3789:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3789:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3891:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3902:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3907:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3891:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3684:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3692:3:4",
														"type": ""
													}
												],
												"src": "3550:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4068:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4078:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4144:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4085:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4078:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4250:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4161:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4161:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4161:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4263:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4274:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4270:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4263:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4056:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4064:3:4",
														"type": ""
													}
												],
												"src": "3922:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4440:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4450:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4516:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4457:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4450:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4622:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "4533:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4533:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4635:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4646:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4642:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4635:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4428:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4436:3:4",
														"type": ""
													}
												],
												"src": "4294:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4812:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4822:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4888:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4893:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4829:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4822:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "4905:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4905:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4905:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5007:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5014:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5007:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4800:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4808:3:4",
														"type": ""
													}
												],
												"src": "4666:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5103:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5120:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5143:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5125:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5113:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5113:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5091:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5098:3:4",
														"type": ""
													}
												],
												"src": "5038:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5240:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5261:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5245:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5211:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5218:3:4",
														"type": ""
													}
												],
												"src": "5162:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5372:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5382:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5394:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5390:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5382:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5456:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5469:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5480:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5465:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5465:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5418:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5356:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5367:4:4",
														"type": ""
													}
												],
												"src": "5280:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5614:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5624:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5636:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5624:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5671:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5682:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5667:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5690:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5696:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5660:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5660:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5716:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5788:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5797:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5724:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5716:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5586:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5598:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5609:4:4",
														"type": ""
													}
												],
												"src": "5496:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5986:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5996:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6043:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6054:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6039:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6039:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6062:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6032:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6032:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6088:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6222:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6096:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6096:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6088:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5966:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5981:4:4",
														"type": ""
													}
												],
												"src": "5815:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6411:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6421:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6433:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6429:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6429:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6421:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6479:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6464:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6464:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6487:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6493:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6457:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6457:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6457:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6513:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6647:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6521:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6513:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6391:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6406:4:4",
														"type": ""
													}
												],
												"src": "6240:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6836:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6846:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6858:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6869:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6854:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6854:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6846:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6904:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6889:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6912:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6918:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6882:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6938:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7072:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6946:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6938:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6816:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6831:4:4",
														"type": ""
													}
												],
												"src": "6665:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7261:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7271:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7283:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7294:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7271:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7318:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7329:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7314:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7314:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7337:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7343:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7333:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7333:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7307:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7307:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7363:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7497:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7371:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7371:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7363:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7241:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7256:4:4",
														"type": ""
													}
												],
												"src": "7090:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7686:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7696:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7708:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7719:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7704:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7704:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7743:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7754:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7739:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7739:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7762:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7768:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7758:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7758:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7732:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7732:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7788:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7922:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7796:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7796:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7788:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7666:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7681:4:4",
														"type": ""
													}
												],
												"src": "7515:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8111:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8121:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8133:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8144:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8129:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8129:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8121:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8168:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8179:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8164:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8187:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8193:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8183:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8157:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8157:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8213:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8347:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8221:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8213:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8091:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8106:4:4",
														"type": ""
													}
												],
												"src": "7940:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8536:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8546:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8558:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8569:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8554:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8554:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8546:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8593:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8604:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8589:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8589:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8612:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8618:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8582:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8582:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8582:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8638:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8772:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8646:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8638:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8516:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8531:4:4",
														"type": ""
													}
												],
												"src": "8365:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8888:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8898:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8910:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8921:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8906:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8906:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8898:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8978:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8991:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9002:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8987:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8987:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8934:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8934:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8934:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8860:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8872:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8883:4:4",
														"type": ""
													}
												],
												"src": "8790:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9112:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9122:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9134:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9145:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9130:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9130:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9122:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9198:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9211:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9222:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9207:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9158:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9158:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9084:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9096:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9107:4:4",
														"type": ""
													}
												],
												"src": "9018:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9297:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9308:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9324:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9318:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9308:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9280:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9290:6:4",
														"type": ""
													}
												],
												"src": "9238:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9439:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9456:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9461:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9449:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9449:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9449:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9477:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9496:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9501:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9492:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9492:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9477:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9411:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9416:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9427:11:4",
														"type": ""
													}
												],
												"src": "9343:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9562:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9572:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9595:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9577:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9572:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9606:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9629:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9611:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9611:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9606:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9769:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9771:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9771:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9771:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9690:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9697:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9765:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9693:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9693:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9687:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9687:81:4"
															},
															"nodeType": "YulIf",
															"src": "9684:2:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9801:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9812:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9815:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9808:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9808:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9801:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9549:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9552:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9558:3:4",
														"type": ""
													}
												],
												"src": "9518:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9874:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9884:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9913:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9895:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9895:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9884:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9856:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9866:7:4",
														"type": ""
													}
												],
												"src": "9829:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9973:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9983:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10008:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10001:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10001:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9994:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9994:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9983:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9955:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9965:7:4",
														"type": ""
													}
												],
												"src": "9931:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10072:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10082:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10097:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10104:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10093:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10093:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10082:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10054:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10064:7:4",
														"type": ""
													}
												],
												"src": "10027:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10204:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10214:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10225:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10214:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10186:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10196:7:4",
														"type": ""
													}
												],
												"src": "10159:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10285:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10295:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10310:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10317:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10306:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10306:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10295:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10267:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10277:7:4",
														"type": ""
													}
												],
												"src": "10242:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10383:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10393:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10402:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10397:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10462:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10487:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10492:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10483:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10483:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10506:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10511:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10502:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10502:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10496:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10496:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10476:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10476:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10476:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10423:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10426:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10420:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10420:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10434:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10436:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10445:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10448:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10441:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10441:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10436:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10416:3:4",
																"statements": []
															},
															"src": "10412:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10559:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10609:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10614:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10605:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10605:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10623:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10598:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10598:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10598:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10540:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10543:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10537:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10537:13:4"
															},
															"nodeType": "YulIf",
															"src": "10534:2:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10365:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10370:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10375:6:4",
														"type": ""
													}
												],
												"src": "10334:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10698:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10708:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10722:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10728:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10718:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10718:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10708:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10739:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10769:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10775:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10765:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10765:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10743:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10816:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10830:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10844:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10852:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10840:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10840:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10830:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10796:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10789:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10789:26:4"
															},
															"nodeType": "YulIf",
															"src": "10786:2:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10919:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10933:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10933:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10933:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10883:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10906:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10914:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10903:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10903:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10880:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10880:38:4"
															},
															"nodeType": "YulIf",
															"src": "10877:2:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10682:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10691:6:4",
														"type": ""
													}
												],
												"src": "10647:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11001:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11018:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11021:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11011:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11011:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11115:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11118:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11108:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11108:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11108:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11139:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11142:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11132:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11132:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11132:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10973:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11187:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11204:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11207:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11197:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11197:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11301:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11304:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11294:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11294:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11294:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11325:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11328:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11318:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11318:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11318:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11159:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11393:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11403:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11421:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11428:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11417:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11417:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11437:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11433:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11433:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11403:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11376:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11386:6:4",
														"type": ""
													}
												],
												"src": "11345:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11559:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11581:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11589:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11577:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11577:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11593:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11570:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11570:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11570:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11649:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11645:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11645:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11638:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11638:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11638:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11551:6:4",
														"type": ""
													}
												],
												"src": "11453:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11787:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11809:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11817:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11821:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11798:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11798:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11877:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11885:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11873:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11873:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11890:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11866:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11866:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11866:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11779:6:4",
														"type": ""
													}
												],
												"src": "11681:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12014:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12036:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12044:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12032:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12032:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12048:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12025:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12025:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12025:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12104:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12112:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12100:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12100:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12117:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12093:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12093:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12093:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12006:6:4",
														"type": ""
													}
												],
												"src": "11908:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12245:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12267:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12263:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12263:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12279:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12256:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12256:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12256:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12335:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12343:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12331:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12331:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12348:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12324:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12324:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12324:35:4"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12237:6:4",
														"type": ""
													}
												],
												"src": "12139:227:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12478:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12500:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12508:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12496:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12496:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12512:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12489:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12489:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12489:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12568:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12576:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12564:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12564:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12581:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12557:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12557:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12470:6:4",
														"type": ""
													}
												],
												"src": "12372:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12708:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12730:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12738:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12726:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12726:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12742:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12719:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12719:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12719:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12798:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12806:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12794:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12794:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12811:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12787:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12787:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12787:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12700:6:4",
														"type": ""
													}
												],
												"src": "12602:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12937:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12959:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12967:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12955:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12955:14:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12971:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12948:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12948:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12948:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13027:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13035:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13023:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13023:15:4"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13040:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13016:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13016:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13016:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12929:6:4",
														"type": ""
													}
												],
												"src": "12831:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13104:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13161:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13170:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13173:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13163:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13163:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13163:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13127:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13152:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13134:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13134:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13124:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13124:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13117:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13117:43:4"
															},
															"nodeType": "YulIf",
															"src": "13114:2:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13097:5:4",
														"type": ""
													}
												],
												"src": "13061:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13232:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13289:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13298:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13301:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13291:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13291:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13291:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13255:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13280:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13262:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13262:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13252:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13252:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13245:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13245:43:4"
															},
															"nodeType": "YulIf",
															"src": "13242:2:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13225:5:4",
														"type": ""
													}
												],
												"src": "13189:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e35565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610e1a565b60405180910390f35b610104610326565b6040516101119190610f37565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610e1a565b60405180910390f35b610152610428565b60405161015f9190610f52565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610e1a565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf9190610f37565b60405180910390f35b6101d0610525565b6040516101dd9190610e35565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610e1a565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610e1a565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d9190610f37565b60405180910390f35b60606003805461028590611067565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190611067565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff90610eb7565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce9190610f89565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461053490611067565b80601f016020809104026020016040519081016040528092919081815260200182805461056090611067565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a90610f17565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b690610ef7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082690610e77565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d9190610f37565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098190610ed7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f190610e57565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8290610e97565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e9190610f89565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b829190610f37565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb481611331565b92915050565b600081359050610bc981611348565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc881610ff1565b82525050565b6000610cd982610f6d565b610ce38185610f78565b9350610cf3818560208601611034565b610cfc816110f7565b840191505092915050565b6000610d14602383610f78565b9150610d1f82611108565b604082019050919050565b6000610d37602283610f78565b9150610d4282611157565b604082019050919050565b6000610d5a602683610f78565b9150610d65826111a6565b604082019050919050565b6000610d7d602883610f78565b9150610d88826111f5565b604082019050919050565b6000610da0602583610f78565b9150610dab82611244565b604082019050919050565b6000610dc3602483610f78565b9150610dce82611293565b604082019050919050565b6000610de6602583610f78565b9150610df1826112e2565b604082019050919050565b610e058161101d565b82525050565b610e1481611027565b82525050565b6000602082019050610e2f6000830184610cbf565b92915050565b60006020820190508181036000830152610e4f8184610cce565b905092915050565b60006020820190508181036000830152610e7081610d07565b9050919050565b60006020820190508181036000830152610e9081610d2a565b9050919050565b60006020820190508181036000830152610eb081610d4d565b9050919050565b60006020820190508181036000830152610ed081610d70565b9050919050565b60006020820190508181036000830152610ef081610d93565b9050919050565b60006020820190508181036000830152610f1081610db6565b9050919050565b60006020820190508181036000830152610f3081610dd9565b9050919050565b6000602082019050610f4c6000830184610dfc565b92915050565b6000602082019050610f676000830184610e0b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f948261101d565b9150610f9f8361101d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fd457610fd3611099565b5b828201905092915050565b6000610fea82610ffd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611052578082015181840152602081019050611037565b83811115611061576000848401525b50505050565b6000600282049050600182168061107f57607f821691505b60208210811415611093576110926110c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61133a81610fdf565b811461134557600080fd5b50565b6113518161101d565b811461135c57600080fd5b5056fea26469706673582212204d68572f0fd21a1544c3084b4bf245d407cdb96c831841f58654be01e4c5cc3e64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C DUP6 PUSH2 0x414 PUSH2 0x747 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x43E PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x44C PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x534 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x1067 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x582 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x590 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C6 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x697 PUSH2 0x68E PUSH2 0x747 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x6AF PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP1 PUSH2 0xED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0xF89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0xF37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB95 DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0x1331 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC9 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC19 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC2A DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC57 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC68 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC79 DUP7 DUP3 DUP8 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB5 DUP6 DUP3 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0xFF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD9 DUP3 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xCE3 DUP2 DUP6 PUSH2 0xF78 JUMP JUMPDEST SWAP4 POP PUSH2 0xCF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1034 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH2 0x10F7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH1 0x23 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD1F DUP3 PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD37 PUSH1 0x22 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD42 DUP3 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5A PUSH1 0x26 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD65 DUP3 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7D PUSH1 0x28 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xD88 DUP3 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA0 PUSH1 0x25 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAB DUP3 PUSH2 0x1244 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC3 PUSH1 0x24 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCE DUP3 PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE6 PUSH1 0x25 DUP4 PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP PUSH2 0xDF1 DUP3 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE05 DUP2 PUSH2 0x101D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE14 DUP2 PUSH2 0x1027 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE4F DUP2 DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE70 DUP2 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE90 DUP2 PUSH2 0xD2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 PUSH2 0xD4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED0 DUP2 PUSH2 0xD70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEF0 DUP2 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF10 DUP2 PUSH2 0xDB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF30 DUP2 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF4C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF67 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 DUP3 PUSH2 0x101D JUMP JUMPDEST SWAP2 POP PUSH2 0xF9F DUP4 PUSH2 0x101D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0x1099 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEA DUP3 PUSH2 0xFFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1052 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1037 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x107F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1093 JUMPI PUSH2 0x1092 PUSH2 0x10C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x133A DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP2 EQ PUSH2 0x1345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1351 DUP2 PUSH2 0x101D JUMP JUMPDEST DUP2 EQ PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D PUSH9 0x572F0FD21A1544C308 0x4B 0x4B CALLCODE GASLIMIT 0xD4 SMOD 0xCD 0xB9 PUSH13 0x831841F58654BE01E4C5CC3E64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "1367:10416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2120:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4217:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3208:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4850:478;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3057:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5723:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3372:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2331:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6422:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3700:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3930:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2120:98;2174:13;2206:5;2199:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2120:98;:::o;4217:166::-;4300:4;4316:39;4325:12;:10;:12::i;:::-;4339:7;4348:6;4316:8;:39::i;:::-;4372:4;4365:11;;4217:166;;;;:::o;3208:106::-;3269:7;3295:12;;3288:19;;3208:106;:::o;4850:478::-;4986:4;5002:36;5012:6;5020:9;5031:6;5002:9;:36::i;:::-;5049:24;5076:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;5049:60;;5147:6;5127:16;:26;;5119:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5232:57;5241:6;5249:12;:10;:12::i;:::-;5282:6;5263:16;:25;5232:8;:57::i;:::-;5317:4;5310:11;;;4850:478;;;;;:::o;3057:91::-;3115:5;3139:2;3132:9;;3057:91;:::o;5723:212::-;5811:4;5827:80;5836:12;:10;:12::i;:::-;5850:7;5896:10;5859:11;:25;5871:12;:10;:12::i;:::-;5859:25;;;;;;;;;;;;;;;:34;5885:7;5859:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5827:8;:80::i;:::-;5924:4;5917:11;;5723:212;;;;:::o;3372:125::-;3446:7;3472:9;:18;3482:7;3472:18;;;;;;;;;;;;;;;;3465:25;;3372:125;;;:::o;2331:102::-;2387:13;2419:7;2412:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:102;:::o;6422:405::-;6515:4;6531:24;6558:11;:25;6570:12;:10;:12::i;:::-;6558:25;;;;;;;;;;;;;;;:34;6584:7;6558:34;;;;;;;;;;;;;;;;6531:61;;6630:15;6610:16;:35;;6602:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6721:67;6730:12;:10;:12::i;:::-;6744:7;6772:15;6753:16;:34;6721:8;:67::i;:::-;6816:4;6809:11;;;6422:405;;;;:::o;3700:172::-;3786:4;3802:42;3812:12;:10;:12::i;:::-;3826:9;3837:6;3802:9;:42::i;:::-;3861:4;3854:11;;3700:172;;;;:::o;3930:149::-;4019:7;4045:11;:18;4057:5;4045:18;;;;;;;;;;;;;;;:27;4064:7;4045:27;;;;;;;;;;;;;;;;4038:34;;3930:149;;;;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;9998:370:1:-;10146:1;10129:19;;:5;:19;;;;10121:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10226:1;10207:21;;:7;:21;;;;10199:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10308:6;10278:11;:18;10290:5;10278:18;;;;;;;;;;;;;;;:27;10297:7;10278:27;;;;;;;;;;;;;;;:36;;;;10345:7;10329:32;;10338:5;10329:32;;;10354:6;10329:32;;;;;;:::i;:::-;;;;;;;;9998:370;;;:::o;7301:713::-;7454:1;7436:20;;:6;:20;;;;7428:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7537:1;7516:23;;:9;:23;;;;7508:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7590:47;7611:6;7619:9;7630:6;7590:20;:47::i;:::-;7648:21;7672:9;:17;7682:6;7672:17;;;;;;;;;;;;;;;;7648:41;;7724:6;7707:13;:23;;7699:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7843:6;7827:13;:22;7807:9;:17;7817:6;7807:17;;;;;;;;;;;;;;;:42;;;;7893:6;7869:9;:20;7879:9;7869:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7932:9;7915:35;;7924:6;7915:35;;;7943:6;7915:35;;;;;;:::i;:::-;;;;;;;;7961:46;7981:6;7989:9;8000:6;7961:19;:46::i;:::-;7301:713;;;;:::o;10952:121::-;;;;:::o;11661:120::-;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;2152:3;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:366::-;2576:3;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2673:93;2762:3;2673:93;:::i;:::-;2791:2;2786:3;2782:12;2775:19;;2580:220;;;:::o;2806:366::-;2948:3;2969:67;3033:2;3028:3;2969:67;:::i;:::-;2962:74;;3045:93;3134:3;3045:93;:::i;:::-;3163:2;3158:3;3154:12;3147:19;;2952:220;;;:::o;3178:366::-;3320:3;3341:67;3405:2;3400:3;3341:67;:::i;:::-;3334:74;;3417:93;3506:3;3417:93;:::i;:::-;3535:2;3530:3;3526:12;3519:19;;3324:220;;;:::o;3550:366::-;3692:3;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3696:220;;;:::o;3922:366::-;4064:3;4085:67;4149:2;4144:3;4085:67;:::i;:::-;4078:74;;4161:93;4250:3;4161:93;:::i;:::-;4279:2;4274:3;4270:12;4263:19;;4068:220;;;:::o;4294:366::-;4436:3;4457:67;4521:2;4516:3;4457:67;:::i;:::-;4450:74;;4533:93;4622:3;4533:93;:::i;:::-;4651:2;4646:3;4642:12;4635:19;;4440:220;;;:::o;4666:366::-;4808:3;4829:67;4893:2;4888:3;4829:67;:::i;:::-;4822:74;;4905:93;4994:3;4905:93;:::i;:::-;5023:2;5018:3;5014:12;5007:19;;4812:220;;;:::o;5038:118::-;5125:24;5143:5;5125:24;:::i;:::-;5120:3;5113:37;5103:53;;:::o;5162:112::-;5245:22;5261:5;5245:22;:::i;:::-;5240:3;5233:35;5223:51;;:::o;5280:210::-;5367:4;5405:2;5394:9;5390:18;5382:26;;5418:65;5480:1;5469:9;5465:17;5456:6;5418:65;:::i;:::-;5372:118;;;;:::o;5496:313::-;5609:4;5647:2;5636:9;5632:18;5624:26;;5696:9;5690:4;5686:20;5682:1;5671:9;5667:17;5660:47;5724:78;5797:4;5788:6;5724:78;:::i;:::-;5716:86;;5614:195;;;;:::o;5815:419::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6068:9;6062:4;6058:20;6054:1;6043:9;6039:17;6032:47;6096:131;6222:4;6096:131;:::i;:::-;6088:139;;5986:248;;;:::o;6240:419::-;6406:4;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6411:248;;;:::o;6665:419::-;6831:4;6869:2;6858:9;6854:18;6846:26;;6918:9;6912:4;6908:20;6904:1;6893:9;6889:17;6882:47;6946:131;7072:4;6946:131;:::i;:::-;6938:139;;6836:248;;;:::o;7090:419::-;7256:4;7294:2;7283:9;7279:18;7271:26;;7343:9;7337:4;7333:20;7329:1;7318:9;7314:17;7307:47;7371:131;7497:4;7371:131;:::i;:::-;7363:139;;7261:248;;;:::o;7515:419::-;7681:4;7719:2;7708:9;7704:18;7696:26;;7768:9;7762:4;7758:20;7754:1;7743:9;7739:17;7732:47;7796:131;7922:4;7796:131;:::i;:::-;7788:139;;7686:248;;;:::o;7940:419::-;8106:4;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;8111:248;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8536:248;;;:::o;8790:222::-;8883:4;8921:2;8910:9;8906:18;8898:26;;8934:71;9002:1;8991:9;8987:17;8978:6;8934:71;:::i;:::-;8888:124;;;;:::o;9018:214::-;9107:4;9145:2;9134:9;9130:18;9122:26;;9158:67;9222:1;9211:9;9207:17;9198:6;9158:67;:::i;:::-;9112:120;;;;:::o;9238:99::-;9290:6;9324:5;9318:12;9308:22;;9297:40;;;:::o;9343:169::-;9427:11;9461:6;9456:3;9449:19;9501:4;9496:3;9492:14;9477:29;;9439:73;;;;:::o;9518:305::-;9558:3;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9611:20;9629:1;9611:20;:::i;:::-;9606:25;;9765:1;9697:66;9693:74;9690:1;9687:81;9684:2;;;9771:18;;:::i;:::-;9684:2;9815:1;9812;9808:9;9801:16;;9562:261;;;;:::o;9829:96::-;9866:7;9895:24;9913:5;9895:24;:::i;:::-;9884:35;;9874:51;;;:::o;9931:90::-;9965:7;10008:5;10001:13;9994:21;9983:32;;9973:48;;;:::o;10027:126::-;10064:7;10104:42;10097:5;10093:54;10082:65;;10072:81;;;:::o;10159:77::-;10196:7;10225:5;10214:16;;10204:32;;;:::o;10242:86::-;10277:7;10317:4;10310:5;10306:16;10295:27;;10285:43;;;:::o;10334:307::-;10402:1;10412:113;10426:6;10423:1;10420:13;10412:113;;;10511:1;10506:3;10502:11;10496:18;10492:1;10487:3;10483:11;10476:39;10448:2;10445:1;10441:10;10436:15;;10412:113;;;10543:6;10540:1;10537:13;10534:2;;;10623:1;10614:6;10609:3;10605:16;10598:27;10534:2;10383:258;;;;:::o;10647:320::-;10691:6;10728:1;10722:4;10718:12;10708:22;;10775:1;10769:4;10765:12;10796:18;10786:2;;10852:4;10844:6;10840:17;10830:27;;10786:2;10914;10906:6;10903:14;10883:18;10880:38;10877:2;;;10933:18;;:::i;:::-;10877:2;10698:269;;;;:::o;10973:180::-;11021:77;11018:1;11011:88;11118:4;11115:1;11108:15;11142:4;11139:1;11132:15;11159:180;11207:77;11204:1;11197:88;11304:4;11301:1;11294:15;11328:4;11325:1;11318:15;11345:102;11386:6;11437:2;11433:7;11428:2;11421:5;11417:14;11413:28;11403:38;;11393:54;;;:::o;11453:222::-;11593:34;11589:1;11581:6;11577:14;11570:58;11662:5;11657:2;11649:6;11645:15;11638:30;11559:116;:::o;11681:221::-;11821:34;11817:1;11809:6;11805:14;11798:58;11890:4;11885:2;11877:6;11873:15;11866:29;11787:115;:::o;11908:225::-;12048:34;12044:1;12036:6;12032:14;12025:58;12117:8;12112:2;12104:6;12100:15;12093:33;12014:119;:::o;12139:227::-;12279:34;12275:1;12267:6;12263:14;12256:58;12348:10;12343:2;12335:6;12331:15;12324:35;12245:121;:::o;12372:224::-;12512:34;12508:1;12500:6;12496:14;12489:58;12581:7;12576:2;12568:6;12564:15;12557:32;12478:118;:::o;12602:223::-;12742:34;12738:1;12730:6;12726:14;12719:58;12811:6;12806:2;12798:6;12794:15;12787:31;12708:117;:::o;12831:224::-;12971:34;12967:1;12959:6;12955:14;12948:58;13040:7;13035:2;13027:6;13023:15;13016:32;12937:118;:::o;13061:122::-;13134:24;13152:5;13134:24;:::i;:::-;13127:5;13124:35;13114:2;;13173:1;13170;13163:12;13114:2;13104:79;:::o;13189:122::-;13262:24;13280:5;13262:24;:::i;:::-;13255:5;13252:35;13242:2;;13301:1;13298;13291:12;13242:2;13232:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1002600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1563",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1182",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2021,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2013,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2008,
									"end": 2021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2048,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2038,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2031,
									"end": 2048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1942,
									"end": 2055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 361,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 264,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 303,
									"end": 304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 301,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 293,
									"end": 305,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 264,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 348,
									"end": 354,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 343,
									"end": 346,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 338,
									"end": 341,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 316,
									"end": 355,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 316,
									"end": 355,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 102,
									"end": 361,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 381,
									"end": 669,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 448,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 500,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 490,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 482,
									"end": 488,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 478,
									"end": 495,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 474,
									"end": 501,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 464,
									"end": 466,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 515,
									"end": 516,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 513,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 505,
									"end": 517,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 464,
									"end": 466,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 464,
									"end": 466,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 548,
									"end": 554,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 542,
									"end": 555,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 662,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 651,
									"end": 657,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 644,
									"end": 648,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 632,
									"end": 649,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 573,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 573,
									"end": 663,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 564,
									"end": 663,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 564,
									"end": 663,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 454,
									"end": 669,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 454,
									"end": 669,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 454,
									"end": 669,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 675,
									"end": 1327,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 675,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 774,
									"end": 780,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 831,
									"end": 833,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 819,
									"end": 828,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 810,
									"end": 817,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 806,
									"end": 829,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 802,
									"end": 834,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 799,
									"end": 801,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 799,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 799,
									"end": 801,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 847,
									"end": 848,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 845,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 837,
									"end": 849,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 799,
									"end": 801,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 799,
									"end": 801,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 911,
									"end": 912,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 909,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 896,
									"end": 913,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 890,
									"end": 914,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 941,
									"end": 959,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 933,
									"end": 939,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 930,
									"end": 960,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 927,
									"end": 929,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 927,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 927,
									"end": 929,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 971,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 963,
									"end": 975,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 927,
									"end": 929,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 927,
									"end": 929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1058,
									"end": 1064,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1047,
									"end": 1056,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1065,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1001,
									"end": 1075,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1075,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1075,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 861,
									"end": 1085,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1134,
									"end": 1143,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1130,
									"end": 1148,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1149,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1176,
									"end": 1194,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1168,
									"end": 1174,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1165,
									"end": 1195,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1208,
									"end": 1209,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1206,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1302,
									"end": 1309,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1282,
									"end": 1291,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1278,
									"end": 1300,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1236,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1226,
									"end": 1310,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1226,
									"end": 1310,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 789,
									"end": 1327,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1333,
									"end": 1462,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1333,
									"end": 1462,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1367,
									"end": 1373,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1394,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1384,
									"end": 1414,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1384,
									"end": 1414,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1451,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1443,
									"end": 1449,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1423,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1374,
									"end": 1462,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1468,
									"end": 1543,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1468,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1507,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1534,
									"end": 1536,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1518,
									"end": 1537,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1518,
									"end": 1537,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1543,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1543,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1549,
									"end": 1857,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1549,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1611,
									"end": 1615,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1719,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1693,
									"end": 1699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1723,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1687,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1783,
									"end": 1789,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1761,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1790,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1753,
									"end": 1790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1839,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1835,
									"end": 1850,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1827,
									"end": 1850,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1827,
									"end": 1850,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1616,
									"end": 1857,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1863,
									"end": 2170,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1863,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1955,
									"end": 1961,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1952,
									"end": 1953,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1949,
									"end": 1962,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2040,
									"end": 2041,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2035,
									"end": 2038,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2031,
									"end": 2042,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2043,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2016,
									"end": 2019,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2012,
									"end": 2023,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2005,
									"end": 2044,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1977,
									"end": 1979,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1974,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1980,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1965,
									"end": 1980,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1965,
									"end": 1980,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1941,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2072,
									"end": 2078,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2069,
									"end": 2070,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2066,
									"end": 2079,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2153,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2143,
									"end": 2149,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2138,
									"end": 2141,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2134,
									"end": 2150,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2127,
									"end": 2154,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2063,
									"end": 2065,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1912,
									"end": 2170,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2176,
									"end": 2496,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2176,
									"end": 2496,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2220,
									"end": 2226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2257,
									"end": 2258,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2251,
									"end": 2255,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2247,
									"end": 2259,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2237,
									"end": 2259,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2237,
									"end": 2259,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2304,
									"end": 2305,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2298,
									"end": 2302,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2294,
									"end": 2306,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2325,
									"end": 2343,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2381,
									"end": 2385,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 2373,
									"end": 2379,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2369,
									"end": 2386,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2359,
									"end": 2386,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2359,
									"end": 2386,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2315,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2435,
									"end": 2441,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2432,
									"end": 2446,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2412,
									"end": 2430,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2409,
									"end": 2447,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2462,
									"end": 2480,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2406,
									"end": 2408,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2227,
									"end": 2496,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2502,
									"end": 2783,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 2502,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2607,
									"end": 2611,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2585,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2577,
									"end": 2583,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2715,
									"end": 2721,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2703,
									"end": 2713,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2700,
									"end": 2722,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2679,
									"end": 2697,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2667,
									"end": 2677,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2664,
									"end": 2698,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2661,
									"end": 2723,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2726,
									"end": 2744,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2658,
									"end": 2660,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2766,
									"end": 2776,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2762,
									"end": 2764,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2755,
									"end": 2777,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2545,
									"end": 2783,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2789,
									"end": 2969,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 2789,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 2914,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2834,
									"end": 2835,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2827,
									"end": 2915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2934,
									"end": 2938,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2931,
									"end": 2932,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2924,
									"end": 2939,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2958,
									"end": 2962,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2955,
									"end": 2956,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2948,
									"end": 2963,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2975,
									"end": 3155,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2975,
									"end": 3155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3023,
									"end": 3100,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3020,
									"end": 3021,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3013,
									"end": 3101,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3120,
									"end": 3124,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3117,
									"end": 3118,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3110,
									"end": 3125,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3144,
									"end": 3148,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3141,
									"end": 3142,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3134,
									"end": 3149,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3161,
									"end": 3263,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 3161,
									"end": 3263,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3202,
									"end": 3208,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3253,
									"end": 3255,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3249,
									"end": 3256,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3244,
									"end": 3246,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3237,
									"end": 3242,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3233,
									"end": 3247,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3229,
									"end": 3257,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3219,
									"end": 3257,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3219,
									"end": 3257,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3209,
									"end": 3263,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 11783,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d68572f0fd21a1544c3084b4bf245d407cdb96c831841f58654be01e4c5cc3e64736f6c63430008040033",
									".code": [
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 11783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2120,
											"end": 2218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4325,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4325,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4339,
											"end": 4346,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4354,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4316,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4376,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4365,
											"end": 4376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4383,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3314,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5002,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5153,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5153,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5241,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5249,
											"end": 5259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5232,
											"end": 5289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5232,
											"end": 5289,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5232,
											"end": 5289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5321,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5310,
											"end": 5321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 5328,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3141,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3132,
											"end": 3141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3148,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5836,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5836,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5836,
											"end": 5848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5848,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5836,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5906,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5870,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5871,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5859,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5827,
											"end": 5907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5827,
											"end": 5907,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5827,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 5928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5917,
											"end": 5928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5723,
											"end": 5935,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3372,
											"end": 3497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2400,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2419,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2433,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6570,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6570,
											"end": 6582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6570,
											"end": 6582,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6570,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6583,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6592,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6610,
											"end": 6626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6610,
											"end": 6645,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6610,
											"end": 6645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6602,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6721,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6730,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6730,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6730,
											"end": 6742,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6730,
											"end": 6742,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6730,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6751,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6721,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6721,
											"end": 6788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6721,
											"end": 6788,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6721,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6816,
											"end": 6820,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6809,
											"end": 6820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3812,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 3843,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3802,
											"end": 3844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3802,
											"end": 3844,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3802,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3861,
											"end": 3865,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3854,
											"end": 3865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4064,
											"end": 4071,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4045,
											"end": 4072,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 4079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9998,
											"end": 10368,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9998,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10146,
											"end": 10147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10121,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10207,
											"end": 10228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10199,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10308,
											"end": 10314,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10289,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10296,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10297,
											"end": 10304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10278,
											"end": 10305,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10314,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10338,
											"end": 10343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10354,
											"end": 10360,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10361,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10368,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7428,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7516,
											"end": 7539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7516,
											"end": 7539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7539,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7508,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7611,
											"end": 7617,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7590,
											"end": 7637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7590,
											"end": 7637,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7590,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7688,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7730,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7730,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7699,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7823,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7824,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7849,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7879,
											"end": 7888,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7869,
											"end": 7899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7932,
											"end": 7941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7930,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7943,
											"end": 7949,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7915,
											"end": 7950,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7981,
											"end": 7987,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8000,
											"end": 8006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7961,
											"end": 8007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7961,
											"end": 8007,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7961,
											"end": 8007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 8014,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10952,
											"end": 11073,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 10952,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10952,
											"end": 11073,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11661,
											"end": 11781,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 11661,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11661,
											"end": 11781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11661,
											"end": 11781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11661,
											"end": 11781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11661,
											"end": 11781,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1071,
											"end": 1077,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2800,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2434,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2762,
											"end": 2765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2673,
											"end": 2766,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2673,
											"end": 2766,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2673,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2794,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2794,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2800,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2800,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2800,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2806,
											"end": 3172,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2806,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 2951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3036,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2962,
											"end": 3036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3134,
											"end": 3137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3045,
											"end": 3138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3138,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3045,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 3172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 3172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 3172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2952,
											"end": 3172,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3178,
											"end": 3544,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3178,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3400,
											"end": 3403,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3506,
											"end": 3509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3417,
											"end": 3510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3417,
											"end": 3510,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3417,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3544,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3544,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3550,
											"end": 3916,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3550,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3692,
											"end": 3695,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3777,
											"end": 3779,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3772,
											"end": 3775,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3713,
											"end": 3780,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3713,
											"end": 3780,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3713,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3878,
											"end": 3881,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3789,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3902,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3910,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3910,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3916,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3922,
											"end": 4288,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3922,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4144,
											"end": 4147,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4085,
											"end": 4152,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4085,
											"end": 4152,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4085,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4078,
											"end": 4152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4250,
											"end": 4253,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4161,
											"end": 4254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4161,
											"end": 4254,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4161,
											"end": 4254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4270,
											"end": 4282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4263,
											"end": 4282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4288,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4294,
											"end": 4660,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4294,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4521,
											"end": 4523,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4516,
											"end": 4519,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4457,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4457,
											"end": 4524,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4524,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4457,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4622,
											"end": 4625,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4533,
											"end": 4626,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4533,
											"end": 4626,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4533,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4653,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4646,
											"end": 4649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4635,
											"end": 4654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4635,
											"end": 4654,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4660,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4666,
											"end": 5032,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4666,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4808,
											"end": 4811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4893,
											"end": 4895,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4888,
											"end": 4891,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4829,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4829,
											"end": 4896,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4829,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4829,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4822,
											"end": 4896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4905,
											"end": 4998,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4905,
											"end": 4998,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4905,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5014,
											"end": 5026,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5026,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4812,
											"end": 5032,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5038,
											"end": 5156,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5038,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5143,
											"end": 5148,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5125,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5125,
											"end": 5149,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5125,
											"end": 5149,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 5125,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5113,
											"end": 5150,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5156,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 5162,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 5261,
											"end": 5266,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5233,
											"end": 5268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5223,
											"end": 5274,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5280,
											"end": 5490,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5280,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5480,
											"end": 5481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5465,
											"end": 5482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5418,
											"end": 5483,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5418,
											"end": 5483,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5418,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5490,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5372,
											"end": 5490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5496,
											"end": 5809,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5496,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5649,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5632,
											"end": 5650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5624,
											"end": 5650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5696,
											"end": 5705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5686,
											"end": 5706,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5667,
											"end": 5684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5660,
											"end": 5707,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5797,
											"end": 5801,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5788,
											"end": 5794,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 5724,
											"end": 5802,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5802,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5724,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5802,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5716,
											"end": 5802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5809,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5809,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5809,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5815,
											"end": 6234,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5815,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6062,
											"end": 6066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6039,
											"end": 6056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6079,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6222,
											"end": 6226,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6096,
											"end": 6227,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6096,
											"end": 6227,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6096,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5986,
											"end": 6234,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 6240,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6406,
											"end": 6410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6433,
											"end": 6442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6503,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6647,
											"end": 6651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6521,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6513,
											"end": 6652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6659,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6665,
											"end": 7084,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6665,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6871,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6858,
											"end": 6867,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 6872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6846,
											"end": 6872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 6927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6908,
											"end": 6928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6889,
											"end": 6906,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6882,
											"end": 6929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6946,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 7072,
											"end": 7076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6946,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6946,
											"end": 7077,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6946,
											"end": 7077,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6946,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 7077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6938,
											"end": 7077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 7084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 7084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 7084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6836,
											"end": 7084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7090,
											"end": 7509,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7090,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7256,
											"end": 7260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7271,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7271,
											"end": 7297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7337,
											"end": 7341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7353,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7314,
											"end": 7331,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7497,
											"end": 7501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7371,
											"end": 7502,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7371,
											"end": 7502,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7371,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7363,
											"end": 7502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7363,
											"end": 7502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7509,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7509,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7509,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7509,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7515,
											"end": 7934,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7515,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7719,
											"end": 7721,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7778,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7754,
											"end": 7755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7743,
											"end": 7752,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7739,
											"end": 7756,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7732,
											"end": 7779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7796,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7796,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7796,
											"end": 7927,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7796,
											"end": 7927,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7796,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7934,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7940,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8106,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8133,
											"end": 8142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8147,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8121,
											"end": 8147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8187,
											"end": 8191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8203,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8168,
											"end": 8177,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8164,
											"end": 8181,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8157,
											"end": 8204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 8221,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8213,
											"end": 8352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8213,
											"end": 8352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8359,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8365,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8531,
											"end": 8535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8571,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8618,
											"end": 8627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8608,
											"end": 8628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8604,
											"end": 8605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8593,
											"end": 8602,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8589,
											"end": 8606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8772,
											"end": 8776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8646,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8784,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8784,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8790,
											"end": 9012,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 8790,
											"end": 9012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8883,
											"end": 8887,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8921,
											"end": 8923,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 8924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 8924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8934,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9000,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8987,
											"end": 9004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8978,
											"end": 8984,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8934,
											"end": 9005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8934,
											"end": 9005,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8934,
											"end": 9005,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 8934,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 9012,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 9012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 9012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 9012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8888,
											"end": 9012,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9018,
											"end": 9232,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 9018,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9107,
											"end": 9111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9147,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9130,
											"end": 9148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9122,
											"end": 9148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9122,
											"end": 9148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9220,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9207,
											"end": 9224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9198,
											"end": 9204,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 9158,
											"end": 9225,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9158,
											"end": 9225,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 9158,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9232,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9238,
											"end": 9337,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 9238,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9290,
											"end": 9296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9324,
											"end": 9329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9318,
											"end": 9330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9308,
											"end": 9330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9308,
											"end": 9330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9337,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9337,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 9337,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9343,
											"end": 9512,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 9343,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9449,
											"end": 9468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9501,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9496,
											"end": 9499,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9492,
											"end": 9506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9477,
											"end": 9506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9477,
											"end": 9506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9439,
											"end": 9512,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9518,
											"end": 9823,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 9518,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9595,
											"end": 9596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9577,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9572,
											"end": 9597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9572,
											"end": 9597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9611,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9629,
											"end": 9630,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9611,
											"end": 9631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9611,
											"end": 9631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9611,
											"end": 9631,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9611,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9631,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9606,
											"end": 9631,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9697,
											"end": 9763,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9693,
											"end": 9767,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9690,
											"end": 9691,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9687,
											"end": 9768,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9771,
											"end": 9789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9812,
											"end": 9813,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9808,
											"end": 9817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9562,
											"end": 9823,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9562,
											"end": 9823,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9562,
											"end": 9823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9562,
											"end": 9823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9562,
											"end": 9823,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9829,
											"end": 9925,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9829,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9866,
											"end": 9873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9913,
											"end": 9918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9895,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9874,
											"end": 9925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9874,
											"end": 9925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9874,
											"end": 9925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9874,
											"end": 9925,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9931,
											"end": 10021,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9931,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 9972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10014,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9994,
											"end": 10015,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 10015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 10015,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9973,
											"end": 10021,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10027,
											"end": 10153,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10027,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10104,
											"end": 10146,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10093,
											"end": 10147,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10082,
											"end": 10147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10082,
											"end": 10147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10072,
											"end": 10153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10072,
											"end": 10153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10072,
											"end": 10153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10072,
											"end": 10153,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10159,
											"end": 10236,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10159,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10196,
											"end": 10203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10214,
											"end": 10230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10214,
											"end": 10230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 10236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 10236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 10236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10204,
											"end": 10236,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10242,
											"end": 10328,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10242,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10277,
											"end": 10284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10321,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10310,
											"end": 10315,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10306,
											"end": 10322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10295,
											"end": 10322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10295,
											"end": 10322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10285,
											"end": 10328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10285,
											"end": 10328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10285,
											"end": 10328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10285,
											"end": 10328,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10334,
											"end": 10641,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 10334,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10402,
											"end": 10403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10426,
											"end": 10432,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10433,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10502,
											"end": 10513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10496,
											"end": 10514,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10492,
											"end": 10493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 10490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10483,
											"end": 10494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10476,
											"end": 10515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10450,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10445,
											"end": 10446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10441,
											"end": 10451,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10451,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10412,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10543,
											"end": 10549,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10537,
											"end": 10550,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 10536,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 10534,
											"end": 10536,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10620,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10609,
											"end": 10612,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10598,
											"end": 10625,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 10536,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 10534,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10383,
											"end": 10641,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10647,
											"end": 10967,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 10647,
											"end": 10967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10691,
											"end": 10697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10722,
											"end": 10726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10718,
											"end": 10730,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10708,
											"end": 10730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10708,
											"end": 10730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10775,
											"end": 10776,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10769,
											"end": 10773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10765,
											"end": 10777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10796,
											"end": 10814,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10852,
											"end": 10856,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 10844,
											"end": 10850,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10840,
											"end": 10857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10830,
											"end": 10857,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10830,
											"end": 10857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10786,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10914,
											"end": 10916,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10903,
											"end": 10917,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10883,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10918,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10933,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10877,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10698,
											"end": 10967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10698,
											"end": 10967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10698,
											"end": 10967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10698,
											"end": 10967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10698,
											"end": 10967,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10973,
											"end": 11153,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 10973,
											"end": 11153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11021,
											"end": 11098,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11018,
											"end": 11019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11011,
											"end": 11099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 11115,
											"end": 11116,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11108,
											"end": 11123,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11142,
											"end": 11146,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11132,
											"end": 11147,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11159,
											"end": 11339,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 11159,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11207,
											"end": 11284,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11285,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11304,
											"end": 11308,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 11301,
											"end": 11302,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11294,
											"end": 11309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11328,
											"end": 11332,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11325,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11333,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11345,
											"end": 11447,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 11345,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11386,
											"end": 11392,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11439,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11433,
											"end": 11440,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11421,
											"end": 11426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11417,
											"end": 11431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11413,
											"end": 11441,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11403,
											"end": 11441,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11403,
											"end": 11441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11393,
											"end": 11447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11393,
											"end": 11447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11393,
											"end": 11447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11393,
											"end": 11447,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11593,
											"end": 11627,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11589,
											"end": 11590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11577,
											"end": 11591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11570,
											"end": 11628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11662,
											"end": 11667,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11649,
											"end": 11655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11645,
											"end": 11660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11638,
											"end": 11668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11675,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11681,
											"end": 11902,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 11681,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11821,
											"end": 11855,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11817,
											"end": 11818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 11819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11798,
											"end": 11856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11890,
											"end": 11894,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11885,
											"end": 11887,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11877,
											"end": 11883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11873,
											"end": 11888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11866,
											"end": 11895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11787,
											"end": 11902,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11908,
											"end": 12133,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 11908,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12048,
											"end": 12082,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12044,
											"end": 12045,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12036,
											"end": 12042,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12032,
											"end": 12046,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12025,
											"end": 12083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12117,
											"end": 12125,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12104,
											"end": 12110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12100,
											"end": 12115,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12093,
											"end": 12126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12014,
											"end": 12133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12014,
											"end": 12133,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12139,
											"end": 12366,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 12139,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12279,
											"end": 12313,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 12275,
											"end": 12276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12263,
											"end": 12277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12256,
											"end": 12314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12348,
											"end": 12358,
											"name": "PUSH",
											"source": 4,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12343,
											"end": 12345,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12335,
											"end": 12341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12331,
											"end": 12346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12324,
											"end": 12359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12245,
											"end": 12366,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12372,
											"end": 12596,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 12372,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12512,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12508,
											"end": 12509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12496,
											"end": 12510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12489,
											"end": 12547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12581,
											"end": 12588,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12576,
											"end": 12578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12568,
											"end": 12574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12564,
											"end": 12579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12557,
											"end": 12589,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12478,
											"end": 12596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12478,
											"end": 12596,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12602,
											"end": 12825,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 12602,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12742,
											"end": 12776,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12738,
											"end": 12739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12726,
											"end": 12740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12719,
											"end": 12777,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12811,
											"end": 12817,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12806,
											"end": 12808,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12798,
											"end": 12804,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12794,
											"end": 12809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12787,
											"end": 12818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12708,
											"end": 12825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12708,
											"end": 12825,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12831,
											"end": 13055,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 12831,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12971,
											"end": 13005,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 12967,
											"end": 12968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12959,
											"end": 12965,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12955,
											"end": 12969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12948,
											"end": 13006,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13040,
											"end": 13047,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13035,
											"end": 13037,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13027,
											"end": 13033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13023,
											"end": 13038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13016,
											"end": 13048,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12937,
											"end": 13055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12937,
											"end": 13055,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13061,
											"end": 13183,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 13061,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13134,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 13152,
											"end": 13157,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13134,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 13134,
											"end": 13158,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13134,
											"end": 13158,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 13134,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13127,
											"end": 13132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13124,
											"end": 13159,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13114,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 13114,
											"end": 13116,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13173,
											"end": 13174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13170,
											"end": 13171,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13163,
											"end": 13175,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13114,
											"end": 13116,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 13114,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13104,
											"end": 13183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13104,
											"end": 13183,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13189,
											"end": 13311,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 13189,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 13280,
											"end": 13285,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13255,
											"end": 13260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13252,
											"end": 13287,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13301,
											"end": 13302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13298,
											"end": 13299,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 13291,
											"end": 13303,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 13242,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13232,
											"end": 13311,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13232,
											"end": 13311,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ERC20.sol\":{\"keccak256\":\"0x1a33683c5e1d947c82146c9c14143766ff098d222b5107a3688ba751054550d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8316ad8e0dc39cdc52392ca0841d9fb84cb3c996c06339db3c2ee517965ccbec\",\"dweb:/ipfs/QmWqRRmAncgfEagdQyLuA5ETJXXzyUgJ6tzn5AwNBQpuK1\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							567
						],
						"IERC20": [
							645
						],
						"IERC20Metadata": [
							670
						]
					},
					"id": 568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 568,
							"sourceUnit": 646,
							"src": "115:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 568,
							"sourceUnit": 671,
							"src": "138:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 568,
							"sourceUnit": 22,
							"src": "169:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1385:7:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "1385:7:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "1394:6:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1394:6:1"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 670,
										"src": "1402:14:1"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1402:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "194:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 567,
							"linearizedBaseContracts": [
								567,
								670,
								645,
								21
							],
							"name": "ERC20",
							"nameLocation": "1376:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1459:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 567,
									"src": "1423:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1431:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1423:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1442:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1531:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 567,
									"src": "1475:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1483:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1475:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 41,
											"keyType": {
												"id": 39,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1494:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 40,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1513:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1565:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 567,
									"src": "1549:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1549:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1599:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 567,
									"src": "1584:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 46,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1625:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 567,
									"src": "1610:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 48,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1610:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1998:57:1",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2008:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2016:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2008:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "2008:13:1"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2031:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2041:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2031:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "2031:17:1"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1639:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 66,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1968:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1954:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1954:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1989:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1975:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1975:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:44:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:0:1"
									},
									"scope": 567,
									"src": "1942:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										657
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "2189:29:1",
										"statements": [
											{
												"expression": {
													"id": 73,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "2206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 72,
												"id": 74,
												"nodeType": "Return",
												"src": "2199:12:1"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2061:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2129:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2156:8:1"
									},
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:2:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2174:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 70,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2174:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:15:1"
									},
									"scope": 567,
									"src": "2120:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2402:31:1",
										"statements": [
											{
												"expression": {
													"id": 83,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "2419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "2412:14:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2224:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2340:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 79,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2369:8:1"
									},
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2346:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2387:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 80,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2387:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2386:15:1"
									},
									"scope": 567,
									"src": "2331:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										669
									],
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "3122:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3139:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 92,
												"id": 94,
												"nodeType": "Return",
												"src": "3132:9:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2439:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3066:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3097:8:1"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3074:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "3115:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:7:1"
									},
									"scope": 567,
									"src": "3057:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										576
									],
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "3278:36:1",
										"statements": [
											{
												"expression": {
													"id": 103,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "3295:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 102,
												"id": 104,
												"nodeType": "Return",
												"src": "3288:19:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "3154:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3217:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 99,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3251:8:1"
									},
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3228:2:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3269:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:9:1"
									},
									"scope": 567,
									"src": "3208:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3455:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 115,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3472:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 117,
													"indexExpression": {
														"id": 116,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "3482:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3472:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 118,
												"nodeType": "Return",
												"src": "3465:25:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3320:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3381:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3428:8:1"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3399:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3391:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:17:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3446:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:9:1"
									},
									"scope": 567,
									"src": "3372:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										594
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "3792:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 132,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "3812:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3812:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3826:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 135,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3837:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 131,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "3802:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3802:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "3802:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3861:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 130,
												"id": 139,
												"nodeType": "Return",
												"src": "3854:11:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3503:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3709:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3768:8:1"
									},
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3726:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3718:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3745:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3737:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3717:35:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3786:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3786:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3785:6:1"
									},
									"scope": 567,
									"src": "3700:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "4028:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 152,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4045:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 154,
														"indexExpression": {
															"id": 153,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4057:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4045:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 156,
													"indexExpression": {
														"id": 155,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4064:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4045:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 151,
												"id": 157,
												"nodeType": "Return",
												"src": "4038:34:1"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "3878:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3939:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4001:8:1"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3957:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3949:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3949:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3972:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3964:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3948:32:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4019:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:9:1"
									},
									"scope": 567,
									"src": "3930:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										614
									],
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "4306:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 171,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4325:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4325:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4339:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "4348:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 170,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4316:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4316:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "4316:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4372:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 169,
												"id": 178,
												"nodeType": "Return",
												"src": "4365:11:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4085:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4226:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 166,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4282:8:1"
									},
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4242:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4234:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4234:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4233:33:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "4300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4299:6:1"
									},
									"scope": 567,
									"src": "4217:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										626
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "4992:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "5012:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5020:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 196,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 193,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "5002:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5002:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "5002:36:1"
											},
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5057:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5049:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5049:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 201,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "5076:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 203,
														"indexExpression": {
															"id": 202,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "5088:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5076:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 206,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 204,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "5096:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5096:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5076:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5049:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5127:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 210,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "5147:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5127:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5155:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5119:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5119:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "5119:79:1"
											},
											{
												"id": 224,
												"nodeType": "UncheckedBlock",
												"src": "5208:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 216,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "5241:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 217,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "5249:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5249:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 219,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 200,
																		"src": "5263:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 220,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "5282:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5263:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 215,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "5232:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5232:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 223,
														"nodeType": "ExpressionStatement",
														"src": "5232:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5317:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 192,
												"id": 226,
												"nodeType": "Return",
												"src": "5310:11:1"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "4389:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4859:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4968:8:1"
									},
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4889:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4881:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4913:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4905:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4905:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4940:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4932:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4871:81:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4986:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4986:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4985:6:1"
									},
									"scope": 567,
									"src": "4850:478:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "5817:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 239,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "5836:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5836:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5850:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 242,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "5859:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 245,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 243,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "5871:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5871:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5859:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 247,
																"indexExpression": {
																	"id": 246,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "5885:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5859:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 248,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "5896:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5859:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 238,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "5827:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "5827:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5924:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 253,
												"nodeType": "Return",
												"src": "5917:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5334:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5732:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5775:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5767:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5767:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5749:37:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5811:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5811:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5810:6:1"
									},
									"scope": 567,
									"src": "5723:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6521:306:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6539:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "6531:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6531:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 267,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6558:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 270,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 268,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6570:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6570:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6558:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 272,
													"indexExpression": {
														"id": 271,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "6584:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6558:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6531:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "6610:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 276,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "6630:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6610:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6647:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6602:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "6602:85:1"
											},
											{
												"id": 290,
												"nodeType": "UncheckedBlock",
												"src": "6697:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 282,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "6730:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6730:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 284,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "6744:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 285,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "6753:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 286,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6772:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6753:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 281,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "6721:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6721:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 289,
														"nodeType": "ExpressionStatement",
														"src": "6721:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6816:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 292,
												"nodeType": "Return",
												"src": "6809:11:1"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "5941:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6431:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6457:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6449:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6474:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6466:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:42:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6515:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6515:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:6:1"
									},
									"scope": 567,
									"src": "6422:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "7418:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "7436:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7454:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7446:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 306,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7446:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7446:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7436:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7458:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7428:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7428:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "7428:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 315,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "7516:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7537:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7529:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 316,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7529:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7529:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7516:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7541:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7508:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7508:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "7508:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "7611:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7619:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7630:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 324,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "7590:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7590:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7590:47:1"
											},
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7656:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "7648:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 330,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7648:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"baseExpression": {
														"id": 332,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "7672:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 334,
													"indexExpression": {
														"id": 333,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "7682:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7672:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7648:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "7707:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 338,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "7724:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7707:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7732:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7699:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7699:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "7699:74:1"
											},
											{
												"id": 351,
												"nodeType": "UncheckedBlock",
												"src": "7783:77:1",
												"statements": [
													{
														"expression": {
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 343,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "7807:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 345,
																"indexExpression": {
																	"id": 344,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 297,
																	"src": "7817:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7807:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 346,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "7827:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 347,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "7843:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7827:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7807:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 350,
														"nodeType": "ExpressionStatement",
														"src": "7807:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 352,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "7869:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7879:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7869:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 355,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "7893:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7869:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "7869:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 359,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "7924:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7932:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "7943:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "7915:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7915:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "EmitStatement",
												"src": "7910:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "7981:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "7989:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8000:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "7961:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7961:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "7961:46:1"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "6833:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7310:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7337:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7329:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7329:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7361:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7353:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7388:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "7380:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7380:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7319:81:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 567,
									"src": "7301:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8355:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "8373:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8392:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8384:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 381,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8384:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8384:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8373:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8396:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8365:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8365:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "8365:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8470:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8462:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8462:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8462:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "8474:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 395,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "8483:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "8441:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8441:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "8441:49:1"
											},
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 398,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "8501:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 399,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "8517:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8501:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "8501:22:1"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 402,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8533:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 404,
														"indexExpression": {
															"id": 403,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "8543:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8533:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 405,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "8555:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8533:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "8533:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8593:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8585:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 409,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8585:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8585:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "8597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "8606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "8576:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8576:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "EmitStatement",
												"src": "8571:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8652:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8644:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8644:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8644:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "8656:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "8665:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "8624:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8624:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "8624:48:1"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "8020:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8299:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8313:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8305:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8305:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8330:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8322:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8322:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8304:33:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8355:0:1"
									},
									"scope": 567,
									"src": "8290:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "9064:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9082:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9101:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9093:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 437,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9093:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9093:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9082:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9074:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9074:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "9074:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9173:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9190:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9182:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 447,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9182:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9182:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9194:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "9152:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9152:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "9152:49:1"
											},
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9220:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "9212:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 454,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9212:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"baseExpression": {
														"id": 456,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "9237:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 458,
													"indexExpression": {
														"id": 457,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "9247:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9237:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9212:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 461,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "9273:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 462,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "9291:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9273:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9299:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9265:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9265:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "9265:71:1"
											},
											{
												"id": 475,
												"nodeType": "UncheckedBlock",
												"src": "9346:79:1",
												"statements": [
													{
														"expression": {
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 467,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "9370:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 469,
																"indexExpression": {
																	"id": 468,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9380:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9370:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 470,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "9391:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 471,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "9408:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9391:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9370:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 474,
														"nodeType": "ExpressionStatement",
														"src": "9370:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "9434:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 477,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "9450:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9434:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "9434:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 481,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9498:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9490:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9490:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9490:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9502:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 480,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "9472:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9472:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "EmitStatement",
												"src": "9467:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9557:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9549:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 491,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9549:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9549:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9561:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "9520:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9520:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "9520:48:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8685:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9008:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9022:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "9014:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9014:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9039:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "9031:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9031:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9013:33:1"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9064:0:1"
									},
									"scope": 567,
									"src": "8999:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "10111:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 510,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "10129:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10146:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10138:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 511,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10138:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10138:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10129:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10150:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10121:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "10121:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "10207:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10226:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10218:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 521,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10218:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10218:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10207:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10230:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10199:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10199:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "10199:68:1"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 529,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "10278:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 532,
															"indexExpression": {
																"id": 530,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "10290:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10278:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 533,
														"indexExpression": {
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "10297:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10278:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 534,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "10308:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10278:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "10278:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 538,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "10338:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "10345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "10354:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 537,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "10329:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10329:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "10324:37:1"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "9581:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10007:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10033:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "10025:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10056:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "10048:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10048:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10081:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "10073:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10015:78:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10111:0:1"
									},
									"scope": 567,
									"src": "9998:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "11071:2:1",
										"statements": []
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "10374:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10961:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10999:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "10991:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10991:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11021:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "11013:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11013:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11041:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "11033:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10981:72:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11071:0:1"
									},
									"scope": 567,
									"src": "10952:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "11779:2:1",
										"statements": []
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "11079:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11670:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11707:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "11699:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11729:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "11721:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11721:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11749:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "11741:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11689:72:1"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11779:0:1"
									},
									"scope": 567,
									"src": "11661:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 568,
							"src": "1367:10416:1",
							"usedErrors": []
						}
					],
					"src": "90:11694:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 645,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 645,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 645,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 645,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 614,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 645,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 645,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 635,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 644,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 646,
							"src": "187:2596:2",
							"usedErrors": []
						}
					],
					"src": "91:2693:2"
				},
				"id": 2
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							645
						],
						"IERC20Metadata": [
							670
						]
					},
					"id": 671,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 646,
							"src": "135:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 650,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "304:6:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "159:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 670,
							"linearizedBaseContracts": [
								670,
								645
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:3"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "415:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:3"
									},
									"scope": 670,
									"src": "376:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "538:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:3"
									},
									"scope": 670,
									"src": "497:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 669,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "672:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 666,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:3"
									},
									"scope": 670,
									"src": "629:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 671,
							"src": "276:405:3",
							"usedErrors": []
						}
					],
					"src": "110:572:3"
				},
				"id": 3
			}
		}
	}
}