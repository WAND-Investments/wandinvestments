{
	"id": "fe5af8e965f7d70e5e3ba0305a7ded53",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"w-ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    address private  approvedTransferor;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        \n    }\n\n    modifier onlyApproved {\n      require(msg.sender == approvedTransferor, \"Not Approved to do so\");\n      _;\n    }\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n    /**\n     * @dev See {IERC20-mint}.\n     */\n    function mint(address to, uint256 amount) public virtual  onlyApproved {\n       \n         _mint(to, amount);\n    }\n    /**\n     * @dev See {IERC20-burn}.\n     */\n    function burn(address from, uint256 amount) public virtual  onlyApproved {\n       \n         _burn(from, amount);\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override onlyApproved returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n\n    function _setApprovedTokenTransferor(address account) internal  {\n        //require(account != address(0), \"ERC20: mint to the zero address\");\n\n        approvedTransferor = account;\n    }\n\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x22859cd4d66846c6d076fb1dac43c6affc9477b88e5e8bce75d5bf4d792de125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25760bd6fa560b82e0f1c277c0a721f71c1bfd214d618cb9a65757d74fd3f2e0\",\"dweb:/ipfs/QmU5UZjPV3gzWbc5ndK5fQj9Ca8tasj3n34YqbGCuAjR6c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x22859cd4d66846c6d076fb1dac43c6affc9477b88e5e8bce75d5bf4d792de125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25760bd6fa560b82e0f1c277c0a721f71c1bfd214d618cb9a65757d74fd3f2e0\",\"dweb:/ipfs/QmU5UZjPV3gzWbc5ndK5fQj9Ca8tasj3n34YqbGCuAjR6c\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"w-ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(address,uint256)": {
								"details": "See {IERC20-burn}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "See {IERC20-mint}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"w-ERC20.sol\":1367:12508  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"w-ERC20.sol\":1984:2106  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"w-ERC20.sol\":2058:2063  name_ */\n  dup2\n    /* \"w-ERC20.sol\":2050:2055  _name */\n  0x03\n    /* \"w-ERC20.sol\":2050:2063  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"w-ERC20.sol\":2083:2090  symbol_ */\n  dup1\n    /* \"w-ERC20.sol\":2073:2080  _symbol */\n  0x04\n    /* \"w-ERC20.sol\":2073:2090  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"w-ERC20.sol\":1984:2106  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"w-ERC20.sol\":1367:12508  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_33:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":531:653   */\ntag_35:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_38\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":933:1052   */\ntag_40:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1128:1245   */\ntag_43:\n    /* \"#utility.yul\":1269:1343   */\n  tag_46\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_48\n  tag_45\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1430:1547   */\ntag_47:\n    /* \"#utility.yul\":1571:1645   */\n  tag_49\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_27:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_53\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_52:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_26:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2022:2078   */\ntag_57:\n    /* \"#utility.yul\":2096:2125   */\n  tag_60\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_32:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_63:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_66:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_11:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_68:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2741:2825   */\ntag_69:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_54:\n    /* \"#utility.yul\":2920:2947   */\n  tag_73\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_61\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2993:3081   */\ntag_74:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_71:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_59:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_37:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_30:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_45:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_42:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_61:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"w-ERC20.sol\":1367:12508  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"w-ERC20.sol\":1367:12508  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"w-ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":4734:4900  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":5367:5858  function transferFrom(... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":6253:6465  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":3534:3648  function mint(address to, uint256 amount) public virtual  onlyApproved {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"w-ERC20.sol\":3876:4001  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":3700:3818  function burn(address from, uint256 amount) public virtual  onlyApproved {... */\n    tag_12:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"w-ERC20.sol\":6952:7357  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_13:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":4204:4389  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":4447:4596  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w-ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n    tag_19:\n        /* \"w-ERC20.sol\":2342:2355  string memory */\n      0x60\n        /* \"w-ERC20.sol\":2374:2379  _name */\n      0x03\n        /* \"w-ERC20.sol\":2367:2379  return _name */\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_74\n      jump\t// in\n    tag_75:\n      dup1\n      iszero\n      tag_76\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_77\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_76)\n    tag_77:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_78:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_78\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"w-ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"w-ERC20.sol\":4734:4900  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_25:\n        /* \"w-ERC20.sol\":4817:4821  bool */\n      0x00\n        /* \"w-ERC20.sol\":4833:4872  _approve(_msgSender(), spender, amount) */\n      tag_80\n        /* \"w-ERC20.sol\":4842:4854  _msgSender() */\n      tag_81\n        /* \"w-ERC20.sol\":4842:4852  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":4842:4854  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"w-ERC20.sol\":4856:4863  spender */\n      dup5\n        /* \"w-ERC20.sol\":4865:4871  amount */\n      dup5\n        /* \"w-ERC20.sol\":4833:4841  _approve */\n      tag_83\n        /* \"w-ERC20.sol\":4833:4872  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_80:\n        /* \"w-ERC20.sol\":4889:4893  true */\n      0x01\n        /* \"w-ERC20.sol\":4882:4893  return true */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":4734:4900  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_29:\n        /* \"w-ERC20.sol\":3437:3444  uint256 */\n      0x00\n        /* \"w-ERC20.sol\":3463:3475  _totalSupply */\n      sload(0x02)\n        /* \"w-ERC20.sol\":3456:3475  return _totalSupply */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"w-ERC20.sol\":5367:5858  function transferFrom(... */\n    tag_35:\n        /* \"w-ERC20.sol\":5516:5520  bool */\n      0x00\n        /* \"w-ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"w-ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"w-ERC20.sol\":5532:5568  _transfer(sender, recipient, amount) */\n      tag_90\n        /* \"w-ERC20.sol\":5542:5548  sender */\n      dup5\n        /* \"w-ERC20.sol\":5550:5559  recipient */\n      dup5\n        /* \"w-ERC20.sol\":5561:5567  amount */\n      dup5\n        /* \"w-ERC20.sol\":5532:5541  _transfer */\n      tag_91\n        /* \"w-ERC20.sol\":5532:5568  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_90:\n        /* \"w-ERC20.sol\":5579:5603  uint256 currentAllowance */\n      0x00\n        /* \"w-ERC20.sol\":5606:5617  _allowances */\n      0x01\n        /* \"w-ERC20.sol\":5606:5625  _allowances[sender] */\n      0x00\n        /* \"w-ERC20.sol\":5618:5624  sender */\n      dup7\n        /* \"w-ERC20.sol\":5606:5625  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":5606:5639  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"w-ERC20.sol\":5626:5638  _msgSender() */\n      tag_92\n        /* \"w-ERC20.sol\":5626:5636  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":5626:5638  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"w-ERC20.sol\":5606:5639  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":5579:5639  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":5677:5683  amount */\n      dup3\n        /* \"w-ERC20.sol\":5657:5673  currentAllowance */\n      dup2\n        /* \"w-ERC20.sol\":5657:5683  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"w-ERC20.sol\":5649:5728  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"w-ERC20.sol\":5762:5819  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_96\n        /* \"w-ERC20.sol\":5771:5777  sender */\n      dup6\n        /* \"w-ERC20.sol\":5779:5791  _msgSender() */\n      tag_97\n        /* \"w-ERC20.sol\":5779:5789  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":5779:5791  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"w-ERC20.sol\":5812:5818  amount */\n      dup6\n        /* \"w-ERC20.sol\":5793:5809  currentAllowance */\n      dup5\n        /* \"w-ERC20.sol\":5793:5818  currentAllowance - amount */\n      sub\n        /* \"w-ERC20.sol\":5762:5770  _approve */\n      tag_83\n        /* \"w-ERC20.sol\":5762:5819  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_96:\n        /* \"w-ERC20.sol\":5847:5851  true */\n      0x01\n        /* \"w-ERC20.sol\":5840:5851  return true */\n      swap2\n      pop\n      pop\n        /* \"w-ERC20.sol\":5367:5858  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n    tag_38:\n        /* \"w-ERC20.sol\":3283:3288  uint8 */\n      0x00\n        /* \"w-ERC20.sol\":3307:3309  18 */\n      0x12\n        /* \"w-ERC20.sol\":3300:3309  return 18 */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"w-ERC20.sol\":6253:6465  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_43:\n        /* \"w-ERC20.sol\":6341:6345  bool */\n      0x00\n        /* \"w-ERC20.sol\":6357:6437  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_100\n        /* \"w-ERC20.sol\":6366:6378  _msgSender() */\n      tag_101\n        /* \"w-ERC20.sol\":6366:6376  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":6366:6378  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"w-ERC20.sol\":6380:6387  spender */\n      dup5\n        /* \"w-ERC20.sol\":6426:6436  addedValue */\n      dup5\n        /* \"w-ERC20.sol\":6389:6400  _allowances */\n      0x01\n        /* \"w-ERC20.sol\":6389:6414  _allowances[_msgSender()] */\n      0x00\n        /* \"w-ERC20.sol\":6401:6413  _msgSender() */\n      tag_102\n        /* \"w-ERC20.sol\":6401:6411  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":6401:6413  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"w-ERC20.sol\":6389:6414  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":6389:6423  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"w-ERC20.sol\":6415:6422  spender */\n      dup9\n        /* \"w-ERC20.sol\":6389:6423  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":6389:6436  _allowances[_msgSender()][spender] + addedValue */\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"w-ERC20.sol\":6357:6365  _approve */\n      tag_83\n        /* \"w-ERC20.sol\":6357:6437  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_100:\n        /* \"w-ERC20.sol\":6454:6458  true */\n      0x01\n        /* \"w-ERC20.sol\":6447:6458  return true */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":6253:6465  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":3534:3648  function mint(address to, uint256 amount) public virtual  onlyApproved {... */\n    tag_47:\n        /* \"w-ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"w-ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_88\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"w-ERC20.sol\":3624:3641  _mint(to, amount) */\n      tag_109\n        /* \"w-ERC20.sol\":3630:3632  to */\n      dup3\n        /* \"w-ERC20.sol\":3634:3640  amount */\n      dup3\n        /* \"w-ERC20.sol\":3624:3629  _mint */\n      tag_110\n        /* \"w-ERC20.sol\":3624:3641  _mint(to, amount) */\n      jump\t// in\n    tag_109:\n        /* \"w-ERC20.sol\":3534:3648  function mint(address to, uint256 amount) public virtual  onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":3876:4001  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"w-ERC20.sol\":3950:3957  uint256 */\n      0x00\n        /* \"w-ERC20.sol\":3976:3985  _balances */\n      dup1\n        /* \"w-ERC20.sol\":3976:3994  _balances[account] */\n      0x00\n        /* \"w-ERC20.sol\":3986:3993  account */\n      dup4\n        /* \"w-ERC20.sol\":3976:3994  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":3969:3994  return _balances[account] */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":3876:4001  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n    tag_54:\n        /* \"w-ERC20.sol\":2555:2568  string memory */\n      0x60\n        /* \"w-ERC20.sol\":2587:2594  _symbol */\n      0x04\n        /* \"w-ERC20.sol\":2580:2594  return _symbol */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_74\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_114\n      swap1\n      tag_74\n      jump\t// in\n    tag_114:\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_116\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_115)\n    tag_116:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_117:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_117\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"w-ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"w-ERC20.sol\":3700:3818  function burn(address from, uint256 amount) public virtual  onlyApproved {... */\n    tag_58:\n        /* \"w-ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"w-ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_88\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"w-ERC20.sol\":3792:3811  _burn(from, amount) */\n      tag_122\n        /* \"w-ERC20.sol\":3798:3802  from */\n      dup3\n        /* \"w-ERC20.sol\":3804:3810  amount */\n      dup3\n        /* \"w-ERC20.sol\":3792:3797  _burn */\n      tag_123\n        /* \"w-ERC20.sol\":3792:3811  _burn(from, amount) */\n      jump\t// in\n    tag_122:\n        /* \"w-ERC20.sol\":3700:3818  function burn(address from, uint256 amount) public virtual  onlyApproved {... */\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":6952:7357  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_61:\n        /* \"w-ERC20.sol\":7045:7049  bool */\n      0x00\n        /* \"w-ERC20.sol\":7061:7085  uint256 currentAllowance */\n      dup1\n        /* \"w-ERC20.sol\":7088:7099  _allowances */\n      0x01\n        /* \"w-ERC20.sol\":7088:7113  _allowances[_msgSender()] */\n      0x00\n        /* \"w-ERC20.sol\":7100:7112  _msgSender() */\n      tag_125\n        /* \"w-ERC20.sol\":7100:7110  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":7100:7112  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"w-ERC20.sol\":7088:7113  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":7088:7122  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"w-ERC20.sol\":7114:7121  spender */\n      dup6\n        /* \"w-ERC20.sol\":7088:7122  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":7061:7122  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":7160:7175  subtractedValue */\n      dup3\n        /* \"w-ERC20.sol\":7140:7156  currentAllowance */\n      dup2\n        /* \"w-ERC20.sol\":7140:7175  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"w-ERC20.sol\":7132:7217  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"w-ERC20.sol\":7251:7318  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_129\n        /* \"w-ERC20.sol\":7260:7272  _msgSender() */\n      tag_130\n        /* \"w-ERC20.sol\":7260:7270  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":7260:7272  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"w-ERC20.sol\":7274:7281  spender */\n      dup6\n        /* \"w-ERC20.sol\":7302:7317  subtractedValue */\n      dup6\n        /* \"w-ERC20.sol\":7283:7299  currentAllowance */\n      dup5\n        /* \"w-ERC20.sol\":7283:7317  currentAllowance - subtractedValue */\n      sub\n        /* \"w-ERC20.sol\":7251:7259  _approve */\n      tag_83\n        /* \"w-ERC20.sol\":7251:7318  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_129:\n        /* \"w-ERC20.sol\":7346:7350  true */\n      0x01\n        /* \"w-ERC20.sol\":7339:7350  return true */\n      swap2\n      pop\n      pop\n        /* \"w-ERC20.sol\":6952:7357  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":4204:4389  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n    tag_65:\n        /* \"w-ERC20.sol\":4303:4307  bool */\n      0x00\n        /* \"w-ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"w-ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"w-ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_88\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"w-ERC20.sol\":4319:4361  _transfer(_msgSender(), recipient, amount) */\n      tag_135\n        /* \"w-ERC20.sol\":4329:4341  _msgSender() */\n      tag_136\n        /* \"w-ERC20.sol\":4329:4339  _msgSender */\n      tag_82\n        /* \"w-ERC20.sol\":4329:4341  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"w-ERC20.sol\":4343:4352  recipient */\n      dup5\n        /* \"w-ERC20.sol\":4354:4360  amount */\n      dup5\n        /* \"w-ERC20.sol\":4319:4328  _transfer */\n      tag_91\n        /* \"w-ERC20.sol\":4319:4361  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_135:\n        /* \"w-ERC20.sol\":4378:4382  true */\n      0x01\n        /* \"w-ERC20.sol\":4371:4382  return true */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":4204:4389  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":4447:4596  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_70:\n        /* \"w-ERC20.sol\":4536:4543  uint256 */\n      0x00\n        /* \"w-ERC20.sol\":4562:4573  _allowances */\n      0x01\n        /* \"w-ERC20.sol\":4562:4580  _allowances[owner] */\n      0x00\n        /* \"w-ERC20.sol\":4574:4579  owner */\n      dup5\n        /* \"w-ERC20.sol\":4562:4580  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":4562:4589  _allowances[owner][spender] */\n      0x00\n        /* \"w-ERC20.sol\":4581:4588  spender */\n      dup4\n        /* \"w-ERC20.sol\":4562:4589  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":4555:4589  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":4447:4596  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_82:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"w-ERC20.sol\":10528:10898  function _approve(... */\n    tag_83:\n        /* \"w-ERC20.sol\":10676:10677  0 */\n      0x00\n        /* \"w-ERC20.sol\":10659:10678  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":10659:10664  owner */\n      dup4\n        /* \"w-ERC20.sol\":10659:10678  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"w-ERC20.sol\":10651:10719  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"w-ERC20.sol\":10756:10757  0 */\n      0x00\n        /* \"w-ERC20.sol\":10737:10758  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":10737:10744  spender */\n      dup3\n        /* \"w-ERC20.sol\":10737:10758  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"w-ERC20.sol\":10729:10797  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"w-ERC20.sol\":10838:10844  amount */\n      dup1\n        /* \"w-ERC20.sol\":10808:10819  _allowances */\n      0x01\n        /* \"w-ERC20.sol\":10808:10826  _allowances[owner] */\n      0x00\n        /* \"w-ERC20.sol\":10820:10825  owner */\n      dup6\n        /* \"w-ERC20.sol\":10808:10826  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":10808:10835  _allowances[owner][spender] */\n      0x00\n        /* \"w-ERC20.sol\":10827:10834  spender */\n      dup5\n        /* \"w-ERC20.sol\":10808:10835  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":10808:10844  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":10875:10882  spender */\n      dup2\n        /* \"w-ERC20.sol\":10859:10891  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":10868:10873  owner */\n      dup4\n        /* \"w-ERC20.sol\":10859:10891  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"w-ERC20.sol\":10884:10890  amount */\n      dup4\n        /* \"w-ERC20.sol\":10859:10891  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"w-ERC20.sol\":10528:10898  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":7831:8544  function _transfer(... */\n    tag_91:\n        /* \"w-ERC20.sol\":7984:7985  0 */\n      0x00\n        /* \"w-ERC20.sol\":7966:7986  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":7966:7972  sender */\n      dup4\n        /* \"w-ERC20.sol\":7966:7986  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"w-ERC20.sol\":7958:8028  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"w-ERC20.sol\":8067:8068  0 */\n      0x00\n        /* \"w-ERC20.sol\":8046:8069  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":8046:8055  recipient */\n      dup3\n        /* \"w-ERC20.sol\":8046:8069  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"w-ERC20.sol\":8038:8109  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"w-ERC20.sol\":8120:8167  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_154\n        /* \"w-ERC20.sol\":8141:8147  sender */\n      dup4\n        /* \"w-ERC20.sol\":8149:8158  recipient */\n      dup4\n        /* \"w-ERC20.sol\":8160:8166  amount */\n      dup4\n        /* \"w-ERC20.sol\":8120:8140  _beforeTokenTransfer */\n      tag_155\n        /* \"w-ERC20.sol\":8120:8167  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_154:\n        /* \"w-ERC20.sol\":8178:8199  uint256 senderBalance */\n      0x00\n        /* \"w-ERC20.sol\":8202:8211  _balances */\n      dup1\n        /* \"w-ERC20.sol\":8202:8219  _balances[sender] */\n      0x00\n        /* \"w-ERC20.sol\":8212:8218  sender */\n      dup6\n        /* \"w-ERC20.sol\":8202:8219  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":8178:8219  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":8254:8260  amount */\n      dup2\n        /* \"w-ERC20.sol\":8237:8250  senderBalance */\n      dup2\n        /* \"w-ERC20.sol\":8237:8260  senderBalance >= amount */\n      lt\n      iszero\n        /* \"w-ERC20.sol\":8229:8303  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"w-ERC20.sol\":8373:8379  amount */\n      dup2\n        /* \"w-ERC20.sol\":8357:8370  senderBalance */\n      dup2\n        /* \"w-ERC20.sol\":8357:8379  senderBalance - amount */\n      sub\n        /* \"w-ERC20.sol\":8337:8346  _balances */\n      0x00\n        /* \"w-ERC20.sol\":8337:8354  _balances[sender] */\n      dup1\n        /* \"w-ERC20.sol\":8347:8353  sender */\n      dup7\n        /* \"w-ERC20.sol\":8337:8354  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":8337:8379  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":8423:8429  amount */\n      dup2\n        /* \"w-ERC20.sol\":8399:8408  _balances */\n      0x00\n        /* \"w-ERC20.sol\":8399:8419  _balances[recipient] */\n      dup1\n        /* \"w-ERC20.sol\":8409:8418  recipient */\n      dup6\n        /* \"w-ERC20.sol\":8399:8419  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"w-ERC20.sol\":8399:8429  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_159\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":8462:8471  recipient */\n      dup3\n        /* \"w-ERC20.sol\":8445:8480  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":8454:8460  sender */\n      dup5\n        /* \"w-ERC20.sol\":8445:8480  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"w-ERC20.sol\":8473:8479  amount */\n      dup5\n        /* \"w-ERC20.sol\":8445:8480  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"w-ERC20.sol\":8491:8537  _afterTokenTransfer(sender, recipient, amount) */\n      tag_161\n        /* \"w-ERC20.sol\":8511:8517  sender */\n      dup5\n        /* \"w-ERC20.sol\":8519:8528  recipient */\n      dup5\n        /* \"w-ERC20.sol\":8530:8536  amount */\n      dup5\n        /* \"w-ERC20.sol\":8491:8510  _afterTokenTransfer */\n      tag_162\n        /* \"w-ERC20.sol\":8491:8537  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_161:\n        /* \"w-ERC20.sol\":7948:8544  {... */\n      pop\n        /* \"w-ERC20.sol\":7831:8544  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":8820:9209  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_110:\n        /* \"w-ERC20.sol\":8922:8923  0 */\n      0x00\n        /* \"w-ERC20.sol\":8903:8924  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":8903:8910  account */\n      dup3\n        /* \"w-ERC20.sol\":8903:8924  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"w-ERC20.sol\":8895:8960  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"w-ERC20.sol\":8971:9020  _beforeTokenTransfer(address(0), account, amount) */\n      tag_167\n        /* \"w-ERC20.sol\":9000:9001  0 */\n      0x00\n        /* \"w-ERC20.sol\":9004:9011  account */\n      dup4\n        /* \"w-ERC20.sol\":9013:9019  amount */\n      dup4\n        /* \"w-ERC20.sol\":8971:8991  _beforeTokenTransfer */\n      tag_155\n        /* \"w-ERC20.sol\":8971:9020  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_167:\n        /* \"w-ERC20.sol\":9047:9053  amount */\n      dup1\n        /* \"w-ERC20.sol\":9031:9043  _totalSupply */\n      0x02\n      0x00\n        /* \"w-ERC20.sol\":9031:9053  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_168\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_168:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":9085:9091  amount */\n      dup1\n        /* \"w-ERC20.sol\":9063:9072  _balances */\n      0x00\n        /* \"w-ERC20.sol\":9063:9081  _balances[account] */\n      dup1\n        /* \"w-ERC20.sol\":9073:9080  account */\n      dup5\n        /* \"w-ERC20.sol\":9063:9081  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"w-ERC20.sol\":9063:9091  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_169\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_169:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":9127:9134  account */\n      dup2\n        /* \"w-ERC20.sol\":9106:9143  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":9123:9124  0 */\n      0x00\n        /* \"w-ERC20.sol\":9106:9143  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"w-ERC20.sol\":9136:9142  amount */\n      dup4\n        /* \"w-ERC20.sol\":9106:9143  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"w-ERC20.sol\":9154:9202  _afterTokenTransfer(address(0), account, amount) */\n      tag_171\n        /* \"w-ERC20.sol\":9182:9183  0 */\n      0x00\n        /* \"w-ERC20.sol\":9186:9193  account */\n      dup4\n        /* \"w-ERC20.sol\":9195:9201  amount */\n      dup4\n        /* \"w-ERC20.sol\":9154:9173  _afterTokenTransfer */\n      tag_162\n        /* \"w-ERC20.sol\":9154:9202  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_171:\n        /* \"w-ERC20.sol\":8820:9209  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":9529:10105  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_123:\n        /* \"w-ERC20.sol\":9631:9632  0 */\n      0x00\n        /* \"w-ERC20.sol\":9612:9633  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":9612:9619  account */\n      dup3\n        /* \"w-ERC20.sol\":9612:9633  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"w-ERC20.sol\":9604:9671  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"w-ERC20.sol\":9682:9731  _beforeTokenTransfer(account, address(0), amount) */\n      tag_176\n        /* \"w-ERC20.sol\":9703:9710  account */\n      dup3\n        /* \"w-ERC20.sol\":9720:9721  0 */\n      0x00\n        /* \"w-ERC20.sol\":9724:9730  amount */\n      dup4\n        /* \"w-ERC20.sol\":9682:9702  _beforeTokenTransfer */\n      tag_155\n        /* \"w-ERC20.sol\":9682:9731  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_176:\n        /* \"w-ERC20.sol\":9742:9764  uint256 accountBalance */\n      0x00\n        /* \"w-ERC20.sol\":9767:9776  _balances */\n      dup1\n        /* \"w-ERC20.sol\":9767:9785  _balances[account] */\n      0x00\n        /* \"w-ERC20.sol\":9777:9784  account */\n      dup5\n        /* \"w-ERC20.sol\":9767:9785  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"w-ERC20.sol\":9742:9785  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"w-ERC20.sol\":9821:9827  amount */\n      dup2\n        /* \"w-ERC20.sol\":9803:9817  accountBalance */\n      dup2\n        /* \"w-ERC20.sol\":9803:9827  accountBalance >= amount */\n      lt\n      iszero\n        /* \"w-ERC20.sol\":9795:9866  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"w-ERC20.sol\":9938:9944  amount */\n      dup2\n        /* \"w-ERC20.sol\":9921:9935  accountBalance */\n      dup2\n        /* \"w-ERC20.sol\":9921:9944  accountBalance - amount */\n      sub\n        /* \"w-ERC20.sol\":9900:9909  _balances */\n      0x00\n        /* \"w-ERC20.sol\":9900:9918  _balances[account] */\n      dup1\n        /* \"w-ERC20.sol\":9910:9917  account */\n      dup6\n        /* \"w-ERC20.sol\":9900:9918  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"w-ERC20.sol\":9900:9944  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":9980:9986  amount */\n      dup2\n        /* \"w-ERC20.sol\":9964:9976  _totalSupply */\n      0x02\n      0x00\n        /* \"w-ERC20.sol\":9964:9986  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w-ERC20.sol\":10028:10029  0 */\n      0x00\n        /* \"w-ERC20.sol\":10002:10039  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w-ERC20.sol\":10011:10018  account */\n      dup4\n        /* \"w-ERC20.sol\":10002:10039  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"w-ERC20.sol\":10032:10038  amount */\n      dup5\n        /* \"w-ERC20.sol\":10002:10039  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"w-ERC20.sol\":10050:10098  _afterTokenTransfer(account, address(0), amount) */\n      tag_183\n        /* \"w-ERC20.sol\":10070:10077  account */\n      dup4\n        /* \"w-ERC20.sol\":10087:10088  0 */\n      0x00\n        /* \"w-ERC20.sol\":10091:10097  amount */\n      dup5\n        /* \"w-ERC20.sol\":10050:10069  _afterTokenTransfer */\n      tag_162\n        /* \"w-ERC20.sol\":10050:10098  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_183:\n        /* \"w-ERC20.sol\":9594:10105  {... */\n      pop\n        /* \"w-ERC20.sol\":9529:10105  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":11482:11603  function _beforeTokenTransfer(... */\n    tag_155:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"w-ERC20.sol\":12191:12311  function _afterTokenTransfer(... */\n    tag_162:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_187:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_189\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_191:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_193\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_50:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_197\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":373:492   */\n    tag_196:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_199\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_187\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_69:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_202\n      tag_198\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":725:844   */\n    tag_201:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_203\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_187\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_204\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_187\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_34:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_207\n      tag_198\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1222:1341   */\n    tag_206:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_208\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_187\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_209\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_187\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_210\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_191\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_24:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_213\n      tag_198\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1830:1949   */\n    tag_212:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_214\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_187\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_215\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_191\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_216:\n        /* \"#utility.yul\":2298:2319   */\n      tag_218\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_220:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_222\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2503:2574   */\n      tag_224\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_226\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2660:2689   */\n      tag_228\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_230:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_232\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_225\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_233\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_235:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_237\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_225\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_238\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_240:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_242\n        /* \"#utility.yul\":3673:3675   */\n      0x22\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_225\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_243\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3803:3805   */\n      0x40\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_245:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_247\n        /* \"#utility.yul\":4045:4047   */\n      0x15\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_225\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_248\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4175:4177   */\n      0x20\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_250:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_252\n        /* \"#utility.yul\":4417:4419   */\n      0x26\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_225\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_253\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_255:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_257\n        /* \"#utility.yul\":4789:4791   */\n      0x28\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_225\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_258\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_260:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_262\n        /* \"#utility.yul\":5161:5163   */\n      0x21\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_225\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_263\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5672   */\n    tag_265:\n        /* \"#utility.yul\":5448:5451   */\n      0x00\n        /* \"#utility.yul\":5469:5536   */\n      tag_267\n        /* \"#utility.yul\":5533:5535   */\n      0x25\n        /* \"#utility.yul\":5528:5531   */\n      dup4\n        /* \"#utility.yul\":5469:5536   */\n      tag_225\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5462:5536   */\n      swap2\n      pop\n        /* \"#utility.yul\":5545:5638   */\n      tag_268\n        /* \"#utility.yul\":5634:5637   */\n      dup3\n        /* \"#utility.yul\":5545:5638   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5663:5665   */\n      0x40\n        /* \"#utility.yul\":5658:5661   */\n      dup3\n        /* \"#utility.yul\":5654:5666   */\n      add\n        /* \"#utility.yul\":5647:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5306:5672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:6044   */\n    tag_270:\n        /* \"#utility.yul\":5820:5823   */\n      0x00\n        /* \"#utility.yul\":5841:5908   */\n      tag_272\n        /* \"#utility.yul\":5905:5907   */\n      0x24\n        /* \"#utility.yul\":5900:5903   */\n      dup4\n        /* \"#utility.yul\":5841:5908   */\n      tag_225\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5834:5908   */\n      swap2\n      pop\n        /* \"#utility.yul\":5917:6010   */\n      tag_273\n        /* \"#utility.yul\":6006:6009   */\n      dup3\n        /* \"#utility.yul\":5917:6010   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6035:6037   */\n      0x40\n        /* \"#utility.yul\":6030:6033   */\n      dup3\n        /* \"#utility.yul\":6026:6038   */\n      add\n        /* \"#utility.yul\":6019:6038   */\n      swap1\n      pop\n        /* \"#utility.yul\":5678:6044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6050:6416   */\n    tag_275:\n        /* \"#utility.yul\":6192:6195   */\n      0x00\n        /* \"#utility.yul\":6213:6280   */\n      tag_277\n        /* \"#utility.yul\":6277:6279   */\n      0x25\n        /* \"#utility.yul\":6272:6275   */\n      dup4\n        /* \"#utility.yul\":6213:6280   */\n      tag_225\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6206:6280   */\n      swap2\n      pop\n        /* \"#utility.yul\":6289:6382   */\n      tag_278\n        /* \"#utility.yul\":6378:6381   */\n      dup3\n        /* \"#utility.yul\":6289:6382   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6407:6409   */\n      0x40\n        /* \"#utility.yul\":6402:6405   */\n      dup3\n        /* \"#utility.yul\":6398:6410   */\n      add\n        /* \"#utility.yul\":6391:6410   */\n      swap1\n      pop\n        /* \"#utility.yul\":6050:6416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6422:6788   */\n    tag_280:\n        /* \"#utility.yul\":6564:6567   */\n      0x00\n        /* \"#utility.yul\":6585:6652   */\n      tag_282\n        /* \"#utility.yul\":6649:6651   */\n      0x1f\n        /* \"#utility.yul\":6644:6647   */\n      dup4\n        /* \"#utility.yul\":6585:6652   */\n      tag_225\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6578:6652   */\n      swap2\n      pop\n        /* \"#utility.yul\":6661:6754   */\n      tag_283\n        /* \"#utility.yul\":6750:6753   */\n      dup3\n        /* \"#utility.yul\":6661:6754   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6779:6781   */\n      0x20\n        /* \"#utility.yul\":6774:6777   */\n      dup3\n        /* \"#utility.yul\":6770:6782   */\n      add\n        /* \"#utility.yul\":6763:6782   */\n      swap1\n      pop\n        /* \"#utility.yul\":6422:6788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6794:6912   */\n    tag_285:\n        /* \"#utility.yul\":6881:6905   */\n      tag_287\n        /* \"#utility.yul\":6899:6904   */\n      dup2\n        /* \"#utility.yul\":6881:6905   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6876:6879   */\n      dup3\n        /* \"#utility.yul\":6869:6906   */\n      mstore\n        /* \"#utility.yul\":6794:6912   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6918:7030   */\n    tag_289:\n        /* \"#utility.yul\":7001:7023   */\n      tag_291\n        /* \"#utility.yul\":7017:7022   */\n      dup2\n        /* \"#utility.yul\":7001:7023   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6996:6999   */\n      dup3\n        /* \"#utility.yul\":6989:7024   */\n      mstore\n        /* \"#utility.yul\":6918:7030   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7036:7246   */\n    tag_27:\n        /* \"#utility.yul\":7123:7127   */\n      0x00\n        /* \"#utility.yul\":7161:7163   */\n      0x20\n        /* \"#utility.yul\":7150:7159   */\n      dup3\n        /* \"#utility.yul\":7146:7164   */\n      add\n        /* \"#utility.yul\":7138:7164   */\n      swap1\n      pop\n        /* \"#utility.yul\":7174:7239   */\n      tag_294\n        /* \"#utility.yul\":7236:7237   */\n      0x00\n        /* \"#utility.yul\":7225:7234   */\n      dup4\n        /* \"#utility.yul\":7221:7238   */\n      add\n        /* \"#utility.yul\":7212:7218   */\n      dup5\n        /* \"#utility.yul\":7174:7239   */\n      tag_216\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7036:7246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7252:7565   */\n    tag_21:\n        /* \"#utility.yul\":7365:7369   */\n      0x00\n        /* \"#utility.yul\":7403:7405   */\n      0x20\n        /* \"#utility.yul\":7392:7401   */\n      dup3\n        /* \"#utility.yul\":7388:7406   */\n      add\n        /* \"#utility.yul\":7380:7406   */\n      swap1\n      pop\n        /* \"#utility.yul\":7452:7461   */\n      dup2\n        /* \"#utility.yul\":7446:7450   */\n      dup2\n        /* \"#utility.yul\":7442:7462   */\n      sub\n        /* \"#utility.yul\":7438:7439   */\n      0x00\n        /* \"#utility.yul\":7427:7436   */\n      dup4\n        /* \"#utility.yul\":7423:7440   */\n      add\n        /* \"#utility.yul\":7416:7463   */\n      mstore\n        /* \"#utility.yul\":7480:7558   */\n      tag_296\n        /* \"#utility.yul\":7553:7557   */\n      dup2\n        /* \"#utility.yul\":7544:7550   */\n      dup5\n        /* \"#utility.yul\":7480:7558   */\n      tag_220\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7472:7558   */\n      swap1\n      pop\n        /* \"#utility.yul\":7252:7565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7571:7990   */\n    tag_153:\n        /* \"#utility.yul\":7737:7741   */\n      0x00\n        /* \"#utility.yul\":7775:7777   */\n      0x20\n        /* \"#utility.yul\":7764:7773   */\n      dup3\n        /* \"#utility.yul\":7760:7778   */\n      add\n        /* \"#utility.yul\":7752:7778   */\n      swap1\n      pop\n        /* \"#utility.yul\":7824:7833   */\n      dup2\n        /* \"#utility.yul\":7818:7822   */\n      dup2\n        /* \"#utility.yul\":7814:7834   */\n      sub\n        /* \"#utility.yul\":7810:7811   */\n      0x00\n        /* \"#utility.yul\":7799:7808   */\n      dup4\n        /* \"#utility.yul\":7795:7812   */\n      add\n        /* \"#utility.yul\":7788:7835   */\n      mstore\n        /* \"#utility.yul\":7852:7983   */\n      tag_298\n        /* \"#utility.yul\":7978:7982   */\n      dup2\n        /* \"#utility.yul\":7852:7983   */\n      tag_230\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7844:7983   */\n      swap1\n      pop\n        /* \"#utility.yul\":7571:7990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7996:8415   */\n    tag_179:\n        /* \"#utility.yul\":8162:8166   */\n      0x00\n        /* \"#utility.yul\":8200:8202   */\n      0x20\n        /* \"#utility.yul\":8189:8198   */\n      dup3\n        /* \"#utility.yul\":8185:8203   */\n      add\n        /* \"#utility.yul\":8177:8203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8249:8258   */\n      dup2\n        /* \"#utility.yul\":8243:8247   */\n      dup2\n        /* \"#utility.yul\":8239:8259   */\n      sub\n        /* \"#utility.yul\":8235:8236   */\n      0x00\n        /* \"#utility.yul\":8224:8233   */\n      dup4\n        /* \"#utility.yul\":8220:8237   */\n      add\n        /* \"#utility.yul\":8213:8260   */\n      mstore\n        /* \"#utility.yul\":8277:8408   */\n      tag_300\n        /* \"#utility.yul\":8403:8407   */\n      dup2\n        /* \"#utility.yul\":8277:8408   */\n      tag_235\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8269:8408   */\n      swap1\n      pop\n        /* \"#utility.yul\":7996:8415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8421:8840   */\n    tag_145:\n        /* \"#utility.yul\":8587:8591   */\n      0x00\n        /* \"#utility.yul\":8625:8627   */\n      0x20\n        /* \"#utility.yul\":8614:8623   */\n      dup3\n        /* \"#utility.yul\":8610:8628   */\n      add\n        /* \"#utility.yul\":8602:8628   */\n      swap1\n      pop\n        /* \"#utility.yul\":8674:8683   */\n      dup2\n        /* \"#utility.yul\":8668:8672   */\n      dup2\n        /* \"#utility.yul\":8664:8684   */\n      sub\n        /* \"#utility.yul\":8660:8661   */\n      0x00\n        /* \"#utility.yul\":8649:8658   */\n      dup4\n        /* \"#utility.yul\":8645:8662   */\n      add\n        /* \"#utility.yul\":8638:8685   */\n      mstore\n        /* \"#utility.yul\":8702:8833   */\n      tag_302\n        /* \"#utility.yul\":8828:8832   */\n      dup2\n        /* \"#utility.yul\":8702:8833   */\n      tag_240\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8694:8833   */\n      swap1\n      pop\n        /* \"#utility.yul\":8421:8840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8846:9265   */\n    tag_88:\n        /* \"#utility.yul\":9012:9016   */\n      0x00\n        /* \"#utility.yul\":9050:9052   */\n      0x20\n        /* \"#utility.yul\":9039:9048   */\n      dup3\n        /* \"#utility.yul\":9035:9053   */\n      add\n        /* \"#utility.yul\":9027:9053   */\n      swap1\n      pop\n        /* \"#utility.yul\":9099:9108   */\n      dup2\n        /* \"#utility.yul\":9093:9097   */\n      dup2\n        /* \"#utility.yul\":9089:9109   */\n      sub\n        /* \"#utility.yul\":9085:9086   */\n      0x00\n        /* \"#utility.yul\":9074:9083   */\n      dup4\n        /* \"#utility.yul\":9070:9087   */\n      add\n        /* \"#utility.yul\":9063:9110   */\n      mstore\n        /* \"#utility.yul\":9127:9258   */\n      tag_304\n        /* \"#utility.yul\":9253:9257   */\n      dup2\n        /* \"#utility.yul\":9127:9258   */\n      tag_245\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9119:9258   */\n      swap1\n      pop\n        /* \"#utility.yul\":8846:9265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9271:9690   */\n    tag_158:\n        /* \"#utility.yul\":9437:9441   */\n      0x00\n        /* \"#utility.yul\":9475:9477   */\n      0x20\n        /* \"#utility.yul\":9464:9473   */\n      dup3\n        /* \"#utility.yul\":9460:9478   */\n      add\n        /* \"#utility.yul\":9452:9478   */\n      swap1\n      pop\n        /* \"#utility.yul\":9524:9533   */\n      dup2\n        /* \"#utility.yul\":9518:9522   */\n      dup2\n        /* \"#utility.yul\":9514:9534   */\n      sub\n        /* \"#utility.yul\":9510:9511   */\n      0x00\n        /* \"#utility.yul\":9499:9508   */\n      dup4\n        /* \"#utility.yul\":9495:9512   */\n      add\n        /* \"#utility.yul\":9488:9535   */\n      mstore\n        /* \"#utility.yul\":9552:9683   */\n      tag_306\n        /* \"#utility.yul\":9678:9682   */\n      dup2\n        /* \"#utility.yul\":9552:9683   */\n      tag_250\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9544:9683   */\n      swap1\n      pop\n        /* \"#utility.yul\":9271:9690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9696:10115   */\n    tag_95:\n        /* \"#utility.yul\":9862:9866   */\n      0x00\n        /* \"#utility.yul\":9900:9902   */\n      0x20\n        /* \"#utility.yul\":9889:9898   */\n      dup3\n        /* \"#utility.yul\":9885:9903   */\n      add\n        /* \"#utility.yul\":9877:9903   */\n      swap1\n      pop\n        /* \"#utility.yul\":9949:9958   */\n      dup2\n        /* \"#utility.yul\":9943:9947   */\n      dup2\n        /* \"#utility.yul\":9939:9959   */\n      sub\n        /* \"#utility.yul\":9935:9936   */\n      0x00\n        /* \"#utility.yul\":9924:9933   */\n      dup4\n        /* \"#utility.yul\":9920:9937   */\n      add\n        /* \"#utility.yul\":9913:9960   */\n      mstore\n        /* \"#utility.yul\":9977:10108   */\n      tag_308\n        /* \"#utility.yul\":10103:10107   */\n      dup2\n        /* \"#utility.yul\":9977:10108   */\n      tag_255\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":9969:10108   */\n      swap1\n      pop\n        /* \"#utility.yul\":9696:10115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10121:10540   */\n    tag_175:\n        /* \"#utility.yul\":10287:10291   */\n      0x00\n        /* \"#utility.yul\":10325:10327   */\n      0x20\n        /* \"#utility.yul\":10314:10323   */\n      dup3\n        /* \"#utility.yul\":10310:10328   */\n      add\n        /* \"#utility.yul\":10302:10328   */\n      swap1\n      pop\n        /* \"#utility.yul\":10374:10383   */\n      dup2\n        /* \"#utility.yul\":10368:10372   */\n      dup2\n        /* \"#utility.yul\":10364:10384   */\n      sub\n        /* \"#utility.yul\":10360:10361   */\n      0x00\n        /* \"#utility.yul\":10349:10358   */\n      dup4\n        /* \"#utility.yul\":10345:10362   */\n      add\n        /* \"#utility.yul\":10338:10385   */\n      mstore\n        /* \"#utility.yul\":10402:10533   */\n      tag_310\n        /* \"#utility.yul\":10528:10532   */\n      dup2\n        /* \"#utility.yul\":10402:10533   */\n      tag_260\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10394:10533   */\n      swap1\n      pop\n        /* \"#utility.yul\":10121:10540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10546:10965   */\n    tag_150:\n        /* \"#utility.yul\":10712:10716   */\n      0x00\n        /* \"#utility.yul\":10750:10752   */\n      0x20\n        /* \"#utility.yul\":10739:10748   */\n      dup3\n        /* \"#utility.yul\":10735:10753   */\n      add\n        /* \"#utility.yul\":10727:10753   */\n      swap1\n      pop\n        /* \"#utility.yul\":10799:10808   */\n      dup2\n        /* \"#utility.yul\":10793:10797   */\n      dup2\n        /* \"#utility.yul\":10789:10809   */\n      sub\n        /* \"#utility.yul\":10785:10786   */\n      0x00\n        /* \"#utility.yul\":10774:10783   */\n      dup4\n        /* \"#utility.yul\":10770:10787   */\n      add\n        /* \"#utility.yul\":10763:10810   */\n      mstore\n        /* \"#utility.yul\":10827:10958   */\n      tag_312\n        /* \"#utility.yul\":10953:10957   */\n      dup2\n        /* \"#utility.yul\":10827:10958   */\n      tag_265\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10819:10958   */\n      swap1\n      pop\n        /* \"#utility.yul\":10546:10965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10971:11390   */\n    tag_142:\n        /* \"#utility.yul\":11137:11141   */\n      0x00\n        /* \"#utility.yul\":11175:11177   */\n      0x20\n        /* \"#utility.yul\":11164:11173   */\n      dup3\n        /* \"#utility.yul\":11160:11178   */\n      add\n        /* \"#utility.yul\":11152:11178   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11233   */\n      dup2\n        /* \"#utility.yul\":11218:11222   */\n      dup2\n        /* \"#utility.yul\":11214:11234   */\n      sub\n        /* \"#utility.yul\":11210:11211   */\n      0x00\n        /* \"#utility.yul\":11199:11208   */\n      dup4\n        /* \"#utility.yul\":11195:11212   */\n      add\n        /* \"#utility.yul\":11188:11235   */\n      mstore\n        /* \"#utility.yul\":11252:11383   */\n      tag_314\n        /* \"#utility.yul\":11378:11382   */\n      dup2\n        /* \"#utility.yul\":11252:11383   */\n      tag_270\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11244:11383   */\n      swap1\n      pop\n        /* \"#utility.yul\":10971:11390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11396:11815   */\n    tag_128:\n        /* \"#utility.yul\":11562:11566   */\n      0x00\n        /* \"#utility.yul\":11600:11602   */\n      0x20\n        /* \"#utility.yul\":11589:11598   */\n      dup3\n        /* \"#utility.yul\":11585:11603   */\n      add\n        /* \"#utility.yul\":11577:11603   */\n      swap1\n      pop\n        /* \"#utility.yul\":11649:11658   */\n      dup2\n        /* \"#utility.yul\":11643:11647   */\n      dup2\n        /* \"#utility.yul\":11639:11659   */\n      sub\n        /* \"#utility.yul\":11635:11636   */\n      0x00\n        /* \"#utility.yul\":11624:11633   */\n      dup4\n        /* \"#utility.yul\":11620:11637   */\n      add\n        /* \"#utility.yul\":11613:11660   */\n      mstore\n        /* \"#utility.yul\":11677:11808   */\n      tag_316\n        /* \"#utility.yul\":11803:11807   */\n      dup2\n        /* \"#utility.yul\":11677:11808   */\n      tag_275\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11669:11808   */\n      swap1\n      pop\n        /* \"#utility.yul\":11396:11815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11821:12240   */\n    tag_166:\n        /* \"#utility.yul\":11987:11991   */\n      0x00\n        /* \"#utility.yul\":12025:12027   */\n      0x20\n        /* \"#utility.yul\":12014:12023   */\n      dup3\n        /* \"#utility.yul\":12010:12028   */\n      add\n        /* \"#utility.yul\":12002:12028   */\n      swap1\n      pop\n        /* \"#utility.yul\":12074:12083   */\n      dup2\n        /* \"#utility.yul\":12068:12072   */\n      dup2\n        /* \"#utility.yul\":12064:12084   */\n      sub\n        /* \"#utility.yul\":12060:12061   */\n      0x00\n        /* \"#utility.yul\":12049:12058   */\n      dup4\n        /* \"#utility.yul\":12045:12062   */\n      add\n        /* \"#utility.yul\":12038:12085   */\n      mstore\n        /* \"#utility.yul\":12102:12233   */\n      tag_318\n        /* \"#utility.yul\":12228:12232   */\n      dup2\n        /* \"#utility.yul\":12102:12233   */\n      tag_280\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12094:12233   */\n      swap1\n      pop\n        /* \"#utility.yul\":11821:12240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12246:12468   */\n    tag_31:\n        /* \"#utility.yul\":12339:12343   */\n      0x00\n        /* \"#utility.yul\":12377:12379   */\n      0x20\n        /* \"#utility.yul\":12366:12375   */\n      dup3\n        /* \"#utility.yul\":12362:12380   */\n      add\n        /* \"#utility.yul\":12354:12380   */\n      swap1\n      pop\n        /* \"#utility.yul\":12390:12461   */\n      tag_320\n        /* \"#utility.yul\":12458:12459   */\n      0x00\n        /* \"#utility.yul\":12447:12456   */\n      dup4\n        /* \"#utility.yul\":12443:12460   */\n      add\n        /* \"#utility.yul\":12434:12440   */\n      dup5\n        /* \"#utility.yul\":12390:12461   */\n      tag_285\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12246:12468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12474:12688   */\n    tag_40:\n        /* \"#utility.yul\":12563:12567   */\n      0x00\n        /* \"#utility.yul\":12601:12603   */\n      0x20\n        /* \"#utility.yul\":12590:12599   */\n      dup3\n        /* \"#utility.yul\":12586:12604   */\n      add\n        /* \"#utility.yul\":12578:12604   */\n      swap1\n      pop\n        /* \"#utility.yul\":12614:12681   */\n      tag_322\n        /* \"#utility.yul\":12678:12679   */\n      0x00\n        /* \"#utility.yul\":12667:12676   */\n      dup4\n        /* \"#utility.yul\":12663:12680   */\n      add\n        /* \"#utility.yul\":12654:12660   */\n      dup5\n        /* \"#utility.yul\":12614:12681   */\n      tag_289\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12474:12688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12775:12874   */\n    tag_223:\n        /* \"#utility.yul\":12827:12833   */\n      0x00\n        /* \"#utility.yul\":12861:12866   */\n      dup2\n        /* \"#utility.yul\":12855:12867   */\n      mload\n        /* \"#utility.yul\":12845:12867   */\n      swap1\n      pop\n        /* \"#utility.yul\":12775:12874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12880:13049   */\n    tag_225:\n        /* \"#utility.yul\":12964:12975   */\n      0x00\n        /* \"#utility.yul\":12998:13004   */\n      dup3\n        /* \"#utility.yul\":12993:12996   */\n      dup3\n        /* \"#utility.yul\":12986:13005   */\n      mstore\n        /* \"#utility.yul\":13038:13042   */\n      0x20\n        /* \"#utility.yul\":13033:13036   */\n      dup3\n        /* \"#utility.yul\":13029:13043   */\n      add\n        /* \"#utility.yul\":13014:13043   */\n      swap1\n      pop\n        /* \"#utility.yul\":12880:13049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13055:13360   */\n    tag_104:\n        /* \"#utility.yul\":13095:13098   */\n      0x00\n        /* \"#utility.yul\":13114:13134   */\n      tag_328\n        /* \"#utility.yul\":13132:13133   */\n      dup3\n        /* \"#utility.yul\":13114:13134   */\n      tag_288\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":13109:13134   */\n      swap2\n      pop\n        /* \"#utility.yul\":13148:13168   */\n      tag_329\n        /* \"#utility.yul\":13166:13167   */\n      dup4\n        /* \"#utility.yul\":13148:13168   */\n      tag_288\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":13143:13168   */\n      swap3\n      pop\n        /* \"#utility.yul\":13302:13303   */\n      dup3\n        /* \"#utility.yul\":13234:13300   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13230:13304   */\n      sub\n        /* \"#utility.yul\":13227:13228   */\n      dup3\n        /* \"#utility.yul\":13224:13305   */\n      gt\n        /* \"#utility.yul\":13221:13328   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":13308:13326   */\n      tag_331\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13221:13328   */\n    tag_330:\n        /* \"#utility.yul\":13352:13353   */\n      dup3\n        /* \"#utility.yul\":13349:13350   */\n      dup3\n        /* \"#utility.yul\":13345:13354   */\n      add\n        /* \"#utility.yul\":13338:13354   */\n      swap1\n      pop\n        /* \"#utility.yul\":13055:13360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13366:13557   */\n    tag_181:\n        /* \"#utility.yul\":13406:13410   */\n      0x00\n        /* \"#utility.yul\":13426:13446   */\n      tag_334\n        /* \"#utility.yul\":13444:13445   */\n      dup3\n        /* \"#utility.yul\":13426:13446   */\n      tag_288\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":13421:13446   */\n      swap2\n      pop\n        /* \"#utility.yul\":13460:13480   */\n      tag_335\n        /* \"#utility.yul\":13478:13479   */\n      dup4\n        /* \"#utility.yul\":13460:13480   */\n      tag_288\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":13455:13480   */\n      swap3\n      pop\n        /* \"#utility.yul\":13499:13500   */\n      dup3\n        /* \"#utility.yul\":13496:13497   */\n      dup3\n        /* \"#utility.yul\":13493:13501   */\n      lt\n        /* \"#utility.yul\":13490:13524   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":13504:13522   */\n      tag_337\n      tag_332\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13490:13524   */\n    tag_336:\n        /* \"#utility.yul\":13549:13550   */\n      dup3\n        /* \"#utility.yul\":13546:13547   */\n      dup3\n        /* \"#utility.yul\":13542:13551   */\n      sub\n        /* \"#utility.yul\":13534:13551   */\n      swap1\n      pop\n        /* \"#utility.yul\":13366:13557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13563:13659   */\n    tag_338:\n        /* \"#utility.yul\":13600:13607   */\n      0x00\n        /* \"#utility.yul\":13629:13653   */\n      tag_340\n        /* \"#utility.yul\":13647:13652   */\n      dup3\n        /* \"#utility.yul\":13629:13653   */\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13618:13653   */\n      swap1\n      pop\n        /* \"#utility.yul\":13563:13659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13665:13755   */\n    tag_219:\n        /* \"#utility.yul\":13699:13706   */\n      0x00\n        /* \"#utility.yul\":13742:13747   */\n      dup2\n        /* \"#utility.yul\":13735:13748   */\n      iszero\n        /* \"#utility.yul\":13728:13749   */\n      iszero\n        /* \"#utility.yul\":13717:13749   */\n      swap1\n      pop\n        /* \"#utility.yul\":13665:13755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13761:13887   */\n    tag_341:\n        /* \"#utility.yul\":13798:13805   */\n      0x00\n        /* \"#utility.yul\":13838:13880   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13831:13836   */\n      dup3\n        /* \"#utility.yul\":13827:13881   */\n      and\n        /* \"#utility.yul\":13816:13881   */\n      swap1\n      pop\n        /* \"#utility.yul\":13761:13887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13893:13970   */\n    tag_288:\n        /* \"#utility.yul\":13930:13937   */\n      0x00\n        /* \"#utility.yul\":13959:13964   */\n      dup2\n        /* \"#utility.yul\":13948:13964   */\n      swap1\n      pop\n        /* \"#utility.yul\":13893:13970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13976:14062   */\n    tag_292:\n        /* \"#utility.yul\":14011:14018   */\n      0x00\n        /* \"#utility.yul\":14051:14055   */\n      0xff\n        /* \"#utility.yul\":14044:14049   */\n      dup3\n        /* \"#utility.yul\":14040:14056   */\n      and\n        /* \"#utility.yul\":14029:14056   */\n      swap1\n      pop\n        /* \"#utility.yul\":13976:14062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14068:14375   */\n    tag_227:\n        /* \"#utility.yul\":14136:14137   */\n      0x00\n        /* \"#utility.yul\":14146:14259   */\n    tag_347:\n        /* \"#utility.yul\":14160:14166   */\n      dup4\n        /* \"#utility.yul\":14157:14158   */\n      dup2\n        /* \"#utility.yul\":14154:14167   */\n      lt\n        /* \"#utility.yul\":14146:14259   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14245:14246   */\n      dup1\n        /* \"#utility.yul\":14240:14243   */\n      dup3\n        /* \"#utility.yul\":14236:14247   */\n      add\n        /* \"#utility.yul\":14230:14248   */\n      mload\n        /* \"#utility.yul\":14226:14227   */\n      dup2\n        /* \"#utility.yul\":14221:14224   */\n      dup5\n        /* \"#utility.yul\":14217:14228   */\n      add\n        /* \"#utility.yul\":14210:14249   */\n      mstore\n        /* \"#utility.yul\":14182:14184   */\n      0x20\n        /* \"#utility.yul\":14179:14180   */\n      dup2\n        /* \"#utility.yul\":14175:14185   */\n      add\n        /* \"#utility.yul\":14170:14185   */\n      swap1\n      pop\n        /* \"#utility.yul\":14146:14259   */\n      jump(tag_347)\n    tag_349:\n        /* \"#utility.yul\":14277:14283   */\n      dup4\n        /* \"#utility.yul\":14274:14275   */\n      dup2\n        /* \"#utility.yul\":14271:14284   */\n      gt\n        /* \"#utility.yul\":14268:14369   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":14357:14358   */\n      0x00\n        /* \"#utility.yul\":14348:14354   */\n      dup5\n        /* \"#utility.yul\":14343:14346   */\n      dup5\n        /* \"#utility.yul\":14339:14355   */\n      add\n        /* \"#utility.yul\":14332:14359   */\n      mstore\n        /* \"#utility.yul\":14268:14369   */\n    tag_350:\n        /* \"#utility.yul\":14117:14375   */\n      pop\n        /* \"#utility.yul\":14068:14375   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14381:14701   */\n    tag_74:\n        /* \"#utility.yul\":14425:14431   */\n      0x00\n        /* \"#utility.yul\":14462:14463   */\n      0x02\n        /* \"#utility.yul\":14456:14460   */\n      dup3\n        /* \"#utility.yul\":14452:14464   */\n      div\n        /* \"#utility.yul\":14442:14464   */\n      swap1\n      pop\n        /* \"#utility.yul\":14509:14510   */\n      0x01\n        /* \"#utility.yul\":14503:14507   */\n      dup3\n        /* \"#utility.yul\":14499:14511   */\n      and\n        /* \"#utility.yul\":14530:14548   */\n      dup1\n        /* \"#utility.yul\":14520:14601   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":14586:14590   */\n      0x7f\n        /* \"#utility.yul\":14578:14584   */\n      dup3\n        /* \"#utility.yul\":14574:14591   */\n      and\n        /* \"#utility.yul\":14564:14591   */\n      swap2\n      pop\n        /* \"#utility.yul\":14520:14601   */\n    tag_352:\n        /* \"#utility.yul\":14648:14650   */\n      0x20\n        /* \"#utility.yul\":14640:14646   */\n      dup3\n        /* \"#utility.yul\":14637:14651   */\n      lt\n        /* \"#utility.yul\":14617:14635   */\n      dup2\n        /* \"#utility.yul\":14614:14652   */\n      eq\n        /* \"#utility.yul\":14611:14695   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":14667:14685   */\n      tag_354\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":14611:14695   */\n    tag_353:\n        /* \"#utility.yul\":14432:14701   */\n      pop\n        /* \"#utility.yul\":14381:14701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14707:14887   */\n    tag_332:\n        /* \"#utility.yul\":14755:14832   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14752:14753   */\n      0x00\n        /* \"#utility.yul\":14745:14833   */\n      mstore\n        /* \"#utility.yul\":14852:14856   */\n      0x11\n        /* \"#utility.yul\":14849:14850   */\n      0x04\n        /* \"#utility.yul\":14842:14857   */\n      mstore\n        /* \"#utility.yul\":14876:14880   */\n      0x24\n        /* \"#utility.yul\":14873:14874   */\n      0x00\n        /* \"#utility.yul\":14866:14881   */\n      revert\n        /* \"#utility.yul\":14893:15073   */\n    tag_355:\n        /* \"#utility.yul\":14941:15018   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14938:14939   */\n      0x00\n        /* \"#utility.yul\":14931:15019   */\n      mstore\n        /* \"#utility.yul\":15038:15042   */\n      0x22\n        /* \"#utility.yul\":15035:15036   */\n      0x04\n        /* \"#utility.yul\":15028:15043   */\n      mstore\n        /* \"#utility.yul\":15062:15066   */\n      0x24\n        /* \"#utility.yul\":15059:15060   */\n      0x00\n        /* \"#utility.yul\":15052:15067   */\n      revert\n        /* \"#utility.yul\":15202:15319   */\n    tag_198:\n        /* \"#utility.yul\":15311:15312   */\n      0x00\n        /* \"#utility.yul\":15308:15309   */\n      dup1\n        /* \"#utility.yul\":15301:15313   */\n      revert\n        /* \"#utility.yul\":15325:15427   */\n    tag_229:\n        /* \"#utility.yul\":15366:15372   */\n      0x00\n        /* \"#utility.yul\":15417:15419   */\n      0x1f\n        /* \"#utility.yul\":15413:15420   */\n      not\n        /* \"#utility.yul\":15408:15410   */\n      0x1f\n        /* \"#utility.yul\":15401:15406   */\n      dup4\n        /* \"#utility.yul\":15397:15411   */\n      add\n        /* \"#utility.yul\":15393:15421   */\n      and\n        /* \"#utility.yul\":15383:15421   */\n      swap1\n      pop\n        /* \"#utility.yul\":15325:15427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15433:15655   */\n    tag_234:\n        /* \"#utility.yul\":15573:15607   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":15569:15570   */\n      0x00\n        /* \"#utility.yul\":15561:15567   */\n      dup3\n        /* \"#utility.yul\":15557:15571   */\n      add\n        /* \"#utility.yul\":15550:15608   */\n      mstore\n        /* \"#utility.yul\":15642:15647   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15637:15639   */\n      0x20\n        /* \"#utility.yul\":15629:15635   */\n      dup3\n        /* \"#utility.yul\":15625:15640   */\n      add\n        /* \"#utility.yul\":15618:15648   */\n      mstore\n        /* \"#utility.yul\":15433:15655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15661:15882   */\n    tag_239:\n        /* \"#utility.yul\":15801:15835   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":15797:15798   */\n      0x00\n        /* \"#utility.yul\":15789:15795   */\n      dup3\n        /* \"#utility.yul\":15785:15799   */\n      add\n        /* \"#utility.yul\":15778:15836   */\n      mstore\n        /* \"#utility.yul\":15870:15874   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15865:15867   */\n      0x20\n        /* \"#utility.yul\":15857:15863   */\n      dup3\n        /* \"#utility.yul\":15853:15868   */\n      add\n        /* \"#utility.yul\":15846:15875   */\n      mstore\n        /* \"#utility.yul\":15661:15882   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15888:16109   */\n    tag_244:\n        /* \"#utility.yul\":16028:16062   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":16024:16025   */\n      0x00\n        /* \"#utility.yul\":16016:16022   */\n      dup3\n        /* \"#utility.yul\":16012:16026   */\n      add\n        /* \"#utility.yul\":16005:16063   */\n      mstore\n        /* \"#utility.yul\":16097:16101   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16092:16094   */\n      0x20\n        /* \"#utility.yul\":16084:16090   */\n      dup3\n        /* \"#utility.yul\":16080:16095   */\n      add\n        /* \"#utility.yul\":16073:16102   */\n      mstore\n        /* \"#utility.yul\":15888:16109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16115:16286   */\n    tag_249:\n        /* \"#utility.yul\":16255:16278   */\n      0x4e6f7420417070726f76656420746f20646f20736f0000000000000000000000\n        /* \"#utility.yul\":16251:16252   */\n      0x00\n        /* \"#utility.yul\":16243:16249   */\n      dup3\n        /* \"#utility.yul\":16239:16253   */\n      add\n        /* \"#utility.yul\":16232:16279   */\n      mstore\n        /* \"#utility.yul\":16115:16286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16292:16517   */\n    tag_254:\n        /* \"#utility.yul\":16432:16466   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":16428:16429   */\n      0x00\n        /* \"#utility.yul\":16420:16426   */\n      dup3\n        /* \"#utility.yul\":16416:16430   */\n      add\n        /* \"#utility.yul\":16409:16467   */\n      mstore\n        /* \"#utility.yul\":16501:16509   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16496:16498   */\n      0x20\n        /* \"#utility.yul\":16488:16494   */\n      dup3\n        /* \"#utility.yul\":16484:16499   */\n      add\n        /* \"#utility.yul\":16477:16510   */\n      mstore\n        /* \"#utility.yul\":16292:16517   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16523:16750   */\n    tag_259:\n        /* \"#utility.yul\":16663:16697   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":16659:16660   */\n      0x00\n        /* \"#utility.yul\":16651:16657   */\n      dup3\n        /* \"#utility.yul\":16647:16661   */\n      add\n        /* \"#utility.yul\":16640:16698   */\n      mstore\n        /* \"#utility.yul\":16732:16742   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16727:16729   */\n      0x20\n        /* \"#utility.yul\":16719:16725   */\n      dup3\n        /* \"#utility.yul\":16715:16730   */\n      add\n        /* \"#utility.yul\":16708:16743   */\n      mstore\n        /* \"#utility.yul\":16523:16750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16756:16976   */\n    tag_264:\n        /* \"#utility.yul\":16896:16930   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":16892:16893   */\n      0x00\n        /* \"#utility.yul\":16884:16890   */\n      dup3\n        /* \"#utility.yul\":16880:16894   */\n      add\n        /* \"#utility.yul\":16873:16931   */\n      mstore\n        /* \"#utility.yul\":16965:16968   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16960:16962   */\n      0x20\n        /* \"#utility.yul\":16952:16958   */\n      dup3\n        /* \"#utility.yul\":16948:16963   */\n      add\n        /* \"#utility.yul\":16941:16969   */\n      mstore\n        /* \"#utility.yul\":16756:16976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16982:17206   */\n    tag_269:\n        /* \"#utility.yul\":17122:17156   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":17118:17119   */\n      0x00\n        /* \"#utility.yul\":17110:17116   */\n      dup3\n        /* \"#utility.yul\":17106:17120   */\n      add\n        /* \"#utility.yul\":17099:17157   */\n      mstore\n        /* \"#utility.yul\":17191:17198   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17186:17188   */\n      0x20\n        /* \"#utility.yul\":17178:17184   */\n      dup3\n        /* \"#utility.yul\":17174:17189   */\n      add\n        /* \"#utility.yul\":17167:17199   */\n      mstore\n        /* \"#utility.yul\":16982:17206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17212:17435   */\n    tag_274:\n        /* \"#utility.yul\":17352:17386   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":17348:17349   */\n      0x00\n        /* \"#utility.yul\":17340:17346   */\n      dup3\n        /* \"#utility.yul\":17336:17350   */\n      add\n        /* \"#utility.yul\":17329:17387   */\n      mstore\n        /* \"#utility.yul\":17421:17427   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17416:17418   */\n      0x20\n        /* \"#utility.yul\":17408:17414   */\n      dup3\n        /* \"#utility.yul\":17404:17419   */\n      add\n        /* \"#utility.yul\":17397:17428   */\n      mstore\n        /* \"#utility.yul\":17212:17435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17441:17665   */\n    tag_279:\n        /* \"#utility.yul\":17581:17615   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":17577:17578   */\n      0x00\n        /* \"#utility.yul\":17569:17575   */\n      dup3\n        /* \"#utility.yul\":17565:17579   */\n      add\n        /* \"#utility.yul\":17558:17616   */\n      mstore\n        /* \"#utility.yul\":17650:17657   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17645:17647   */\n      0x20\n        /* \"#utility.yul\":17637:17643   */\n      dup3\n        /* \"#utility.yul\":17633:17648   */\n      add\n        /* \"#utility.yul\":17626:17658   */\n      mstore\n        /* \"#utility.yul\":17441:17665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17671:17852   */\n    tag_284:\n        /* \"#utility.yul\":17811:17844   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":17807:17808   */\n      0x00\n        /* \"#utility.yul\":17799:17805   */\n      dup3\n        /* \"#utility.yul\":17795:17809   */\n      add\n        /* \"#utility.yul\":17788:17845   */\n      mstore\n        /* \"#utility.yul\":17671:17852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17858:17980   */\n    tag_190:\n        /* \"#utility.yul\":17931:17955   */\n      tag_374\n        /* \"#utility.yul\":17949:17954   */\n      dup2\n        /* \"#utility.yul\":17931:17955   */\n      tag_338\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":17924:17929   */\n      dup2\n        /* \"#utility.yul\":17921:17956   */\n      eq\n        /* \"#utility.yul\":17911:17974   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":17970:17971   */\n      0x00\n        /* \"#utility.yul\":17967:17968   */\n      dup1\n        /* \"#utility.yul\":17960:17972   */\n      revert\n        /* \"#utility.yul\":17911:17974   */\n    tag_375:\n        /* \"#utility.yul\":17858:17980   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17986:18108   */\n    tag_194:\n        /* \"#utility.yul\":18059:18083   */\n      tag_377\n        /* \"#utility.yul\":18077:18082   */\n      dup2\n        /* \"#utility.yul\":18059:18083   */\n      tag_288\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":18052:18057   */\n      dup2\n        /* \"#utility.yul\":18049:18084   */\n      eq\n        /* \"#utility.yul\":18039:18102   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":18098:18099   */\n      0x00\n        /* \"#utility.yul\":18095:18096   */\n      dup1\n        /* \"#utility.yul\":18088:18100   */\n      revert\n        /* \"#utility.yul\":18039:18102   */\n    tag_378:\n        /* \"#utility.yul\":17986:18108   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f9572f116aff264f1751d275760a786d3786ee49c8108b28aaac1a4838a129364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_171": {
									"entryPoint": null,
									"id": 171,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:4"
															},
															"nodeType": "YulIf",
															"src": "262:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:4"
															},
															"nodeType": "YulIf",
															"src": "531:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:4",
														"type": ""
													}
												],
												"src": "448:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:4"
															},
															"nodeType": "YulIf",
															"src": "933:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:4",
														"type": ""
													}
												],
												"src": "809:853:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:4",
														"type": ""
													}
												],
												"src": "1668:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:4",
														"type": ""
													}
												],
												"src": "1803:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:4"
															},
															"nodeType": "YulIf",
															"src": "2022:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:4",
														"type": ""
													}
												],
												"src": "1884:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:4",
																"statements": []
															},
															"src": "2276:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:4"
															},
															"nodeType": "YulIf",
															"src": "2398:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:4",
														"type": ""
													}
												],
												"src": "2198:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:4"
															},
															"nodeType": "YulIf",
															"src": "2650:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:4"
															},
															"nodeType": "YulIf",
															"src": "2741:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:4",
														"type": ""
													}
												],
												"src": "2511:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:4"
															},
															"nodeType": "YulIf",
															"src": "2993:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:4",
														"type": ""
													}
												],
												"src": "2837:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:4",
														"type": ""
													}
												],
												"src": "3988:102:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001f8338038062001f8383398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611bcb80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac14610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806340c10f19146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e991906114c2565b60405180910390f35b61010c60048036038101906101079190611280565b610366565b60405161011991906114a7565b60405180910390f35b61012a610384565b6040516101379190611644565b60405180910390f35b61015a6004803603810190610155919061122d565b61038e565b60405161016791906114a7565b60405180910390f35b610178610516565b604051610185919061165f565b60405180910390f35b6101a860048036038101906101a39190611280565b61051f565b6040516101b591906114a7565b60405180910390f35b6101d860048036038101906101d39190611280565b6105cb565b005b6101f460048036038101906101ef91906111c0565b610669565b6040516102019190611644565b60405180910390f35b6102126106b1565b60405161021f91906114c2565b60405180910390f35b610242600480360381019061023d9190611280565b610743565b005b61025e60048036038101906102599190611280565b6107e1565b60405161026b91906114a7565b60405180910390f35b61028e60048036038101906102899190611280565b6108cc565b60405161029b91906114a7565b60405180910390f35b6102be60048036038101906102b991906111ed565b61097a565b6040516102cb9190611644565b60405180910390f35b6060600380546102e3906117a8565b80601f016020809104026020016040519081016040528092919081815260200182805461030f906117a8565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600061037a610373610a01565b8484610a09565b6001905092915050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041790611544565b60405180910390fd5b61042b848484610bd4565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610476610a01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611584565b60405180910390fd5b61050a85610502610a01565b858403610a09565b60019150509392505050565b60006012905090565b60006105c161052c610a01565b84846001600061053a610a01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105bc9190611696565b610a09565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290611544565b60405180910390fd5b6106658282610e55565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106c0906117a8565b80601f01602080910402602001604051908101604052809291908181526020018280546106ec906117a8565b80156107395780601f1061070e57610100808354040283529160200191610739565b820191906000526020600020905b81548152906001019060200180831161071c57829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90611544565b60405180910390fd5b6107dd8282610fb5565b5050565b600080600160006107f0610a01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490611604565b60405180910390fd5b6108c16108b8610a01565b85858403610a09565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590611544565b60405180910390fd5b610970610969610a01565b8484610bd4565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a70906115e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae090611524565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610bc79190611644565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b906115c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab906114e4565b60405180910390fd5b610cbf83838361118c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90611564565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd89190611696565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3c9190611644565b60405180910390a3610e4f848484611191565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebc90611624565b60405180910390fd5b610ed16000838361118c565b8060026000828254610ee39190611696565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f389190611696565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f9d9190611644565b60405180910390a3610fb160008383611191565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c906115a4565b60405180910390fd5b6110318260008361118c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ae90611504565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461110e91906116ec565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111739190611644565b60405180910390a361118783600084611191565b505050565b505050565b505050565b6000813590506111a581611b67565b92915050565b6000813590506111ba81611b7e565b92915050565b6000602082840312156111d6576111d5611838565b5b60006111e484828501611196565b91505092915050565b6000806040838503121561120457611203611838565b5b600061121285828601611196565b925050602061122385828601611196565b9150509250929050565b60008060006060848603121561124657611245611838565b5b600061125486828701611196565b935050602061126586828701611196565b9250506040611276868287016111ab565b9150509250925092565b6000806040838503121561129757611296611838565b5b60006112a585828601611196565b92505060206112b6858286016111ab565b9150509250929050565b6112c981611732565b82525050565b60006112da8261167a565b6112e48185611685565b93506112f4818560208601611775565b6112fd8161183d565b840191505092915050565b6000611315602383611685565b91506113208261184e565b604082019050919050565b6000611338602283611685565b91506113438261189d565b604082019050919050565b600061135b602283611685565b9150611366826118ec565b604082019050919050565b600061137e601583611685565b91506113898261193b565b602082019050919050565b60006113a1602683611685565b91506113ac82611964565b604082019050919050565b60006113c4602883611685565b91506113cf826119b3565b604082019050919050565b60006113e7602183611685565b91506113f282611a02565b604082019050919050565b600061140a602583611685565b915061141582611a51565b604082019050919050565b600061142d602483611685565b915061143882611aa0565b604082019050919050565b6000611450602583611685565b915061145b82611aef565b604082019050919050565b6000611473601f83611685565b915061147e82611b3e565b602082019050919050565b6114928161175e565b82525050565b6114a181611768565b82525050565b60006020820190506114bc60008301846112c0565b92915050565b600060208201905081810360008301526114dc81846112cf565b905092915050565b600060208201905081810360008301526114fd81611308565b9050919050565b6000602082019050818103600083015261151d8161132b565b9050919050565b6000602082019050818103600083015261153d8161134e565b9050919050565b6000602082019050818103600083015261155d81611371565b9050919050565b6000602082019050818103600083015261157d81611394565b9050919050565b6000602082019050818103600083015261159d816113b7565b9050919050565b600060208201905081810360008301526115bd816113da565b9050919050565b600060208201905081810360008301526115dd816113fd565b9050919050565b600060208201905081810360008301526115fd81611420565b9050919050565b6000602082019050818103600083015261161d81611443565b9050919050565b6000602082019050818103600083015261163d81611466565b9050919050565b60006020820190506116596000830184611489565b92915050565b60006020820190506116746000830184611498565b92915050565b600081519050919050565b600082825260208201905092915050565b60006116a18261175e565b91506116ac8361175e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116e1576116e06117da565b5b828201905092915050565b60006116f78261175e565b91506117028361175e565b925082821015611715576117146117da565b5b828203905092915050565b600061172b8261173e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611793578082015181840152602081019050611778565b838111156117a2576000848401525b50505050565b600060028204905060018216806117c057607f821691505b602082108114156117d4576117d3611809565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417070726f76656420746f20646f20736f0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611b7081611720565b8114611b7b57600080fd5b50565b611b878161175e565b8114611b9257600080fd5b5056fea26469706673582212204f9572f116aff264f1751d275760a786d3786ee49c8108b28aaac1a4838a129364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F83 CODESIZE SUB DUP1 PUSH3 0x1F83 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCB DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20A JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x331 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A PUSH2 0x373 PUSH2 0xA01 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42B DUP5 DUP5 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x476 PUSH2 0xA01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50A DUP6 PUSH2 0x502 PUSH2 0xA01 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C1 PUSH2 0x52C PUSH2 0xA01 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x53A PUSH2 0xA01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x665 DUP3 DUP3 PUSH2 0xE55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6C0 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x739 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x70E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x739 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DD DUP3 DUP3 PUSH2 0xFB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x7F0 PUSH2 0xA01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A4 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 PUSH2 0x8B8 PUSH2 0xA01 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x970 PUSH2 0x969 PUSH2 0xA01 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA70 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE0 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBF DUP4 DUP4 DUP4 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE4F DUP5 DUP5 DUP5 PUSH2 0x1191 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBC SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x118C JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFB1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1191 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1025 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101C SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1031 DUP3 PUSH1 0x0 DUP4 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AE SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1173 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1187 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A5 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11BA DUP2 PUSH2 0x1B7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E4 DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1212 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1223 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1265 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1276 DUP7 DUP3 DUP8 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1297 JUMPI PUSH2 0x1296 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12B6 DUP6 DUP3 DUP7 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C9 DUP2 PUSH2 0x1732 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x12E4 DUP2 DUP6 PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x183D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1315 PUSH1 0x23 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1320 DUP3 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 PUSH1 0x22 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1343 DUP3 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B PUSH1 0x22 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1366 DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137E PUSH1 0x15 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1389 DUP3 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x26 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x13AC DUP3 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C4 PUSH1 0x28 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x13CF DUP3 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E7 PUSH1 0x21 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A PUSH1 0x25 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1415 DUP3 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142D PUSH1 0x24 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1438 DUP3 PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1450 PUSH1 0x25 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x145B DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1473 PUSH1 0x1F DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x147E DUP3 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14A1 DUP2 PUSH2 0x1768 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DC DUP2 DUP5 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FD DUP2 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151D DUP2 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153D DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x155D DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157D DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159D DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BD DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DD DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FD DUP2 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161D DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163D DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1659 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1674 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1498 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A1 DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x16AC DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E0 PUSH2 0x17DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F7 DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1702 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x17DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP3 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1793 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x1809 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420417070726F76656420746F20646F20736F0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1720 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B87 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP6 PUSH19 0xF116AFF264F1751D275760A786D3786EE49C81 ADDMOD 0xB2 DUP11 0xAA 0xC1 LOG4 DUP4 DUP11 SLT SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1367:11141:3:-:0;;;1984:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2058:5;2050;:13;;;;;;;;;;;;:::i;:::-;;2083:7;2073;:17;;;;;;;;;;;;:::i;:::-;;1984:122;;1367:11141;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1367:11141:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_719": {
									"entryPoint": 4497,
									"id": 719,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_697": {
									"entryPoint": 2569,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_708": {
									"entryPoint": 4492,
									"id": 708,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_652": {
									"entryPoint": 4021,
									"id": 652,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_580": {
									"entryPoint": 3669,
									"id": 580,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 2561,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_524": {
									"entryPoint": 3028,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_310": {
									"entryPoint": 2426,
									"id": 310,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_331": {
									"entryPoint": 870,
									"id": 331,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_269": {
									"entryPoint": 1641,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_255": {
									"entryPoint": 1859,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_213": {
									"entryPoint": 1302,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_447": {
									"entryPoint": 2017,
									"id": 447,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_408": {
									"entryPoint": 1311,
									"id": 408,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_239": {
									"entryPoint": 1483,
									"id": 239,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_193": {
									"entryPoint": 724,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_203": {
									"entryPoint": 1713,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_223": {
									"entryPoint": 900,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_381": {
									"entryPoint": 910,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_292": {
									"entryPoint": 2252,
									"id": 292,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 6380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 6579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18111:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"src": "2332:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:4",
														"type": ""
													}
												],
												"src": "2702:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:4",
														"type": ""
													}
												],
												"src": "3074:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:4",
														"type": ""
													}
												],
												"src": "3446:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:4",
														"type": ""
													}
												],
												"src": "3818:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:4",
														"type": ""
													}
												],
												"src": "4190:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:4",
														"type": ""
													}
												],
												"src": "4562:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:4",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:4",
														"type": ""
													}
												],
												"src": "4934:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5462:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5528:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5533:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5469:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5634:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "5545:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5647:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5658:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5654:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5647:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5440:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5448:3:4",
														"type": ""
													}
												],
												"src": "5306:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5824:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5834:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5900:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5905:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5841:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5841:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5834:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6006:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "5917:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5917:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5917:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6019:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6030:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6035:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6026:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6026:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6019:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5812:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5820:3:4",
														"type": ""
													}
												],
												"src": "5678:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6196:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6206:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6272:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6277:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6213:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6213:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6206:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6378:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "6289:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6289:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6391:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6402:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6407:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6391:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6184:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6192:3:4",
														"type": ""
													}
												],
												"src": "6050:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6568:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6578:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6644:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6585:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6585:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6578:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6750:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "6661:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6661:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6763:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6774:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6779:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6770:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6770:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6763:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6556:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6564:3:4",
														"type": ""
													}
												],
												"src": "6422:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6859:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6876:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6899:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6881:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6881:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6869:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6847:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6854:3:4",
														"type": ""
													}
												],
												"src": "6794:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6996:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7017:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7001:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7001:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6989:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6989:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6989:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6967:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6974:3:4",
														"type": ""
													}
												],
												"src": "6918:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7128:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7138:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7150:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7161:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7146:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7138:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7212:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7225:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7236:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7221:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7221:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7174:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7174:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7100:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7112:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7123:4:4",
														"type": ""
													}
												],
												"src": "7036:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7370:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7380:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7392:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7403:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7388:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7388:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7380:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7427:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7438:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7423:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7423:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7446:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7442:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7416:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7416:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7472:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7544:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7553:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7480:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7480:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7472:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7342:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7354:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7365:4:4",
														"type": ""
													}
												],
												"src": "7252:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7742:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7752:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7764:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7775:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7760:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7760:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7752:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7799:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7810:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7795:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7795:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7818:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7814:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7814:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7788:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7788:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7788:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7844:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7978:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7852:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7852:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7722:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7737:4:4",
														"type": ""
													}
												],
												"src": "7571:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8167:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8177:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8189:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8200:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8185:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8185:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8177:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8224:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8235:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8220:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8220:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8243:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8249:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8213:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8269:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8403:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8277:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8277:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8269:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8147:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8162:4:4",
														"type": ""
													}
												],
												"src": "7996:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8592:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8602:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8614:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8625:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8610:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8602:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8649:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8660:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8645:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8645:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8668:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8674:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8664:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8664:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8638:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8638:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8638:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8694:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8828:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8702:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8702:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8694:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8572:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8587:4:4",
														"type": ""
													}
												],
												"src": "8421:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9017:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9027:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9039:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9035:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9027:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9074:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9085:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9070:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9070:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9093:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9099:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9089:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9089:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9063:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9119:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9253:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9127:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9127:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9119:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8997:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9012:4:4",
														"type": ""
													}
												],
												"src": "8846:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9442:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9452:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9464:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9475:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9460:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9460:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9452:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9499:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9510:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9495:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9495:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9518:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9524:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9514:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9514:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9488:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9488:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9488:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9544:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9678:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9552:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9552:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9544:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9422:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:4",
														"type": ""
													}
												],
												"src": "9271:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9867:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9877:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9889:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9900:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9885:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9877:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9924:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9935:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9920:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9920:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9943:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9949:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9939:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9913:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9913:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9913:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9969:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10103:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9977:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9977:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9969:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9847:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9862:4:4",
														"type": ""
													}
												],
												"src": "9696:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10292:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10302:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10314:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10325:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10310:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10310:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10302:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10349:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10360:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10345:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10345:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10368:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10374:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10364:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10364:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10338:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10338:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10338:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10394:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10528:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10402:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10402:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10394:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10272:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10287:4:4",
														"type": ""
													}
												],
												"src": "10121:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10717:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10727:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10739:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10750:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10735:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10735:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10727:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10774:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10785:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10770:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10770:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10793:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10799:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10789:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10789:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10763:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10763:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10763:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10819:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10953:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10827:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10827:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10819:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10697:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10712:4:4",
														"type": ""
													}
												],
												"src": "10546:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11142:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11152:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11164:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11175:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11160:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11160:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11152:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11199:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11210:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11195:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11195:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11218:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11224:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11214:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11214:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11188:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11188:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11188:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11244:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11378:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11252:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11244:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11122:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11137:4:4",
														"type": ""
													}
												],
												"src": "10971:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11567:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11577:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11589:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11600:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11585:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11585:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11577:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11624:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11635:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11620:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11620:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11643:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11649:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11639:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11613:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11613:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11613:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11669:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11803:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11677:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11677:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11669:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11547:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11562:4:4",
														"type": ""
													}
												],
												"src": "11396:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11992:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12002:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12014:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12025:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12010:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12002:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12049:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12060:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12045:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12045:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12068:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12074:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12064:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12064:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12038:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12038:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12038:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12094:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12228:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12102:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12102:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12094:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11972:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11987:4:4",
														"type": ""
													}
												],
												"src": "11821:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12344:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12354:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12366:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12377:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12362:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12362:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12354:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12434:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12447:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12458:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12443:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12443:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12390:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12390:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12390:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12316:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12328:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12339:4:4",
														"type": ""
													}
												],
												"src": "12246:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12568:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12578:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12590:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12601:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12586:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12578:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12654:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12667:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12678:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12663:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12663:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12614:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12614:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12614:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12540:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12552:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12563:4:4",
														"type": ""
													}
												],
												"src": "12474:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12734:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12744:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12760:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12754:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12754:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "12744:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12727:6:4",
														"type": ""
													}
												],
												"src": "12694:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12834:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12845:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12861:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12855:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12855:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12845:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12817:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12827:6:4",
														"type": ""
													}
												],
												"src": "12775:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12976:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12993:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12998:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12986:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12986:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12986:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13014:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13033:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13038:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13029:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13014:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12948:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12953:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12964:11:4",
														"type": ""
													}
												],
												"src": "12880:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13099:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13109:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13132:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13114:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13109:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13143:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13166:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13148:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13148:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13143:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13306:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13308:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13308:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13308:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13227:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13234:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13302:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13230:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13230:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13224:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13224:81:4"
															},
															"nodeType": "YulIf",
															"src": "13221:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13338:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13349:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13352:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13345:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13345:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13338:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13086:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13089:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13095:3:4",
														"type": ""
													}
												],
												"src": "13055:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13411:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13421:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13444:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13426:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13426:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13421:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13455:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13478:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13460:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13460:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13455:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13502:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13504:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13504:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13504:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13496:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13499:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13493:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13493:8:4"
															},
															"nodeType": "YulIf",
															"src": "13490:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13534:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13546:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13549:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13542:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13542:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13534:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13397:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13400:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13406:4:4",
														"type": ""
													}
												],
												"src": "13366:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13608:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13618:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13647:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13629:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13629:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13618:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13590:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13600:7:4",
														"type": ""
													}
												],
												"src": "13563:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13707:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13717:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13742:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13735:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13735:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13728:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13717:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13689:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13699:7:4",
														"type": ""
													}
												],
												"src": "13665:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13806:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13816:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13831:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13838:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13827:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13827:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13816:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13788:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13798:7:4",
														"type": ""
													}
												],
												"src": "13761:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13938:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13948:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13959:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13948:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13920:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13930:7:4",
														"type": ""
													}
												],
												"src": "13893:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14019:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14029:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14044:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14051:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14040:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14040:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14029:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14001:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14011:7:4",
														"type": ""
													}
												],
												"src": "13976:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14127:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14136:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14131:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14196:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14221:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14226:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14217:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14217:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14240:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14245:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14236:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14236:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14230:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14230:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14210:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14210:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14210:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14157:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14160:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14154:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14168:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14170:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14179:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14182:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14175:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14175:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14170:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14150:3:4",
																"statements": []
															},
															"src": "14146:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14293:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14343:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14348:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14339:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14339:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14357:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14332:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14332:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14332:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14274:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14277:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14271:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14271:13:4"
															},
															"nodeType": "YulIf",
															"src": "14268:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14099:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14104:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14109:6:4",
														"type": ""
													}
												],
												"src": "14068:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14432:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14442:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14456:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14462:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14452:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14452:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14442:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14473:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14503:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14509:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14499:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14477:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14550:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14564:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "14578:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14586:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "14574:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14574:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14564:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14530:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14523:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14523:26:4"
															},
															"nodeType": "YulIf",
															"src": "14520:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14653:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "14667:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14667:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14667:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14617:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14640:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14648:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14637:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14637:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14614:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14614:38:4"
															},
															"nodeType": "YulIf",
															"src": "14611:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14416:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14425:6:4",
														"type": ""
													}
												],
												"src": "14381:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14735:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14752:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14755:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14745:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14745:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14745:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14849:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14852:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14842:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14842:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14842:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14876:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14866:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14866:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14866:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14707:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14921:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14938:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14941:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14931:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14931:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14931:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15035:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15038:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15028:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15028:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15028:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15059:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15062:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15052:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15052:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15052:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "14893:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15168:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15185:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15188:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15178:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15178:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15178:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15079:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15291:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15308:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15311:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15301:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15301:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15301:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15202:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15373:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15383:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15401:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15408:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15397:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15397:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15417:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15413:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15413:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15393:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15393:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15383:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15356:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "15366:6:4",
														"type": ""
													}
												],
												"src": "15325:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15539:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15561:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15569:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15557:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15557:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15573:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15550:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15550:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15550:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15629:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15637:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15625:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15625:15:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15642:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15618:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15618:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15618:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15531:6:4",
														"type": ""
													}
												],
												"src": "15433:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15767:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15789:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15797:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15785:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15785:14:4"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15801:34:4",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15778:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15778:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15778:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15857:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15865:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15853:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15853:15:4"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15870:4:4",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15846:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15846:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15759:6:4",
														"type": ""
													}
												],
												"src": "15661:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15994:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16016:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16024:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16012:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16012:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16028:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16005:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16005:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16005:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16084:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16092:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16080:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16080:15:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16097:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16073:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16073:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16073:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15986:6:4",
														"type": ""
													}
												],
												"src": "15888:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16221:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16243:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16251:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16239:14:4"
																	},
																	{
																		"hexValue": "4e6f7420417070726f76656420746f20646f20736f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16255:23:4",
																		"type": "",
																		"value": "Not Approved to do so"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16232:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16232:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16213:6:4",
														"type": ""
													}
												],
												"src": "16115:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16398:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16420:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16428:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16416:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16416:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16432:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16409:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16409:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16409:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16488:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16496:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16484:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16484:15:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16501:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16477:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16477:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16477:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16390:6:4",
														"type": ""
													}
												],
												"src": "16292:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16629:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16651:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16659:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16647:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16647:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16663:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16640:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16640:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16640:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16719:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16727:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16715:15:4"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16732:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16708:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16708:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16708:35:4"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16621:6:4",
														"type": ""
													}
												],
												"src": "16523:227:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16862:114:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16884:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16892:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16880:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16880:14:4"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16896:34:4",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16873:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16873:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16873:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16952:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16960:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16948:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16948:15:4"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16965:3:4",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16941:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "16941:28:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16941:28:4"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16854:6:4",
														"type": ""
													}
												],
												"src": "16756:220:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17088:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17110:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17118:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17106:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17106:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17122:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17099:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17099:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17099:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17178:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17186:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17174:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17174:15:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17191:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17167:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17167:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17167:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17080:6:4",
														"type": ""
													}
												],
												"src": "16982:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17318:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17340:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17348:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17336:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17336:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17352:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17329:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17329:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17329:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17408:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17416:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17404:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17404:15:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17421:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17397:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17397:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17397:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17310:6:4",
														"type": ""
													}
												],
												"src": "17212:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17547:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17569:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17565:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17565:14:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17581:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17558:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17558:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17558:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17637:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17645:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17633:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17633:15:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17650:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17626:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17626:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17626:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17539:6:4",
														"type": ""
													}
												],
												"src": "17441:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17777:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17799:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17807:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17795:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17795:14:4"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17811:33:4",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17788:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17788:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17788:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17769:6:4",
														"type": ""
													}
												],
												"src": "17671:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17901:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17958:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17967:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17970:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17960:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17960:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17960:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17924:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17949:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17931:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17931:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17921:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17921:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17914:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "17914:43:4"
															},
															"nodeType": "YulIf",
															"src": "17911:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17894:5:4",
														"type": ""
													}
												],
												"src": "17858:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18029:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18086:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18095:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18098:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18088:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18088:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18088:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18052:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18077:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18059:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18059:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18049:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18049:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "18042:43:4"
															},
															"nodeType": "YulIf",
															"src": "18039:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18022:5:4",
														"type": ""
													}
												],
												"src": "17986:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Approved to do so\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac14610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806340c10f19146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e991906114c2565b60405180910390f35b61010c60048036038101906101079190611280565b610366565b60405161011991906114a7565b60405180910390f35b61012a610384565b6040516101379190611644565b60405180910390f35b61015a6004803603810190610155919061122d565b61038e565b60405161016791906114a7565b60405180910390f35b610178610516565b604051610185919061165f565b60405180910390f35b6101a860048036038101906101a39190611280565b61051f565b6040516101b591906114a7565b60405180910390f35b6101d860048036038101906101d39190611280565b6105cb565b005b6101f460048036038101906101ef91906111c0565b610669565b6040516102019190611644565b60405180910390f35b6102126106b1565b60405161021f91906114c2565b60405180910390f35b610242600480360381019061023d9190611280565b610743565b005b61025e60048036038101906102599190611280565b6107e1565b60405161026b91906114a7565b60405180910390f35b61028e60048036038101906102899190611280565b6108cc565b60405161029b91906114a7565b60405180910390f35b6102be60048036038101906102b991906111ed565b61097a565b6040516102cb9190611644565b60405180910390f35b6060600380546102e3906117a8565b80601f016020809104026020016040519081016040528092919081815260200182805461030f906117a8565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b600061037a610373610a01565b8484610a09565b6001905092915050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610420576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041790611544565b60405180910390fd5b61042b848484610bd4565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610476610a01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed90611584565b60405180910390fd5b61050a85610502610a01565b858403610a09565b60019150509392505050565b60006012905090565b60006105c161052c610a01565b84846001600061053a610a01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105bc9190611696565b610a09565b6001905092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065290611544565b60405180910390fd5b6106658282610e55565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106c0906117a8565b80601f01602080910402602001604051908101604052809291908181526020018280546106ec906117a8565b80156107395780601f1061070e57610100808354040283529160200191610739565b820191906000526020600020905b81548152906001019060200180831161071c57829003601f168201915b5050505050905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ca90611544565b60405180910390fd5b6107dd8282610fb5565b5050565b600080600160006107f0610a01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490611604565b60405180910390fd5b6108c16108b8610a01565b85858403610a09565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461095e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095590611544565b60405180910390fd5b610970610969610a01565b8484610bd4565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a70906115e4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ae9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae090611524565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610bc79190611644565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b906115c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab906114e4565b60405180910390fd5b610cbf83838361118c565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3c90611564565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dd89190611696565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e3c9190611644565b60405180910390a3610e4f848484611191565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ec5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebc90611624565b60405180910390fd5b610ed16000838361118c565b8060026000828254610ee39190611696565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f389190611696565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f9d9190611644565b60405180910390a3610fb160008383611191565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c906115a4565b60405180910390fd5b6110318260008361118c565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ae90611504565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461110e91906116ec565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111739190611644565b60405180910390a361118783600084611191565b505050565b505050565b505050565b6000813590506111a581611b67565b92915050565b6000813590506111ba81611b7e565b92915050565b6000602082840312156111d6576111d5611838565b5b60006111e484828501611196565b91505092915050565b6000806040838503121561120457611203611838565b5b600061121285828601611196565b925050602061122385828601611196565b9150509250929050565b60008060006060848603121561124657611245611838565b5b600061125486828701611196565b935050602061126586828701611196565b9250506040611276868287016111ab565b9150509250925092565b6000806040838503121561129757611296611838565b5b60006112a585828601611196565b92505060206112b6858286016111ab565b9150509250929050565b6112c981611732565b82525050565b60006112da8261167a565b6112e48185611685565b93506112f4818560208601611775565b6112fd8161183d565b840191505092915050565b6000611315602383611685565b91506113208261184e565b604082019050919050565b6000611338602283611685565b91506113438261189d565b604082019050919050565b600061135b602283611685565b9150611366826118ec565b604082019050919050565b600061137e601583611685565b91506113898261193b565b602082019050919050565b60006113a1602683611685565b91506113ac82611964565b604082019050919050565b60006113c4602883611685565b91506113cf826119b3565b604082019050919050565b60006113e7602183611685565b91506113f282611a02565b604082019050919050565b600061140a602583611685565b915061141582611a51565b604082019050919050565b600061142d602483611685565b915061143882611aa0565b604082019050919050565b6000611450602583611685565b915061145b82611aef565b604082019050919050565b6000611473601f83611685565b915061147e82611b3e565b602082019050919050565b6114928161175e565b82525050565b6114a181611768565b82525050565b60006020820190506114bc60008301846112c0565b92915050565b600060208201905081810360008301526114dc81846112cf565b905092915050565b600060208201905081810360008301526114fd81611308565b9050919050565b6000602082019050818103600083015261151d8161132b565b9050919050565b6000602082019050818103600083015261153d8161134e565b9050919050565b6000602082019050818103600083015261155d81611371565b9050919050565b6000602082019050818103600083015261157d81611394565b9050919050565b6000602082019050818103600083015261159d816113b7565b9050919050565b600060208201905081810360008301526115bd816113da565b9050919050565b600060208201905081810360008301526115dd816113fd565b9050919050565b600060208201905081810360008301526115fd81611420565b9050919050565b6000602082019050818103600083015261161d81611443565b9050919050565b6000602082019050818103600083015261163d81611466565b9050919050565b60006020820190506116596000830184611489565b92915050565b60006020820190506116746000830184611498565b92915050565b600081519050919050565b600082825260208201905092915050565b60006116a18261175e565b91506116ac8361175e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116e1576116e06117da565b5b828201905092915050565b60006116f78261175e565b91506117028361175e565b925082821015611715576117146117da565b5b828203905092915050565b600061172b8261173e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611793578082015181840152602081019050611778565b838111156117a2576000848401525b50505050565b600060028204905060018216806117c057607f821691505b602082108114156117d4576117d3611809565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417070726f76656420746f20646f20736f0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611b7081611720565b8114611b7b57600080fd5b50565b611b878161175e565b8114611b9257600080fd5b5056fea26469706673582212204f9572f116aff264f1751d275760a786d3786ee49c8108b28aaac1a4838a129364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A4 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20A JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x2D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x122D JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x165F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30F SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x331 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A PUSH2 0x373 PUSH2 0xA01 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x420 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x417 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42B DUP5 DUP5 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x476 PUSH2 0xA01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x1584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x50A DUP6 PUSH2 0x502 PUSH2 0xA01 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C1 PUSH2 0x52C PUSH2 0xA01 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x53A PUSH2 0xA01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x665 DUP3 DUP3 PUSH2 0xE55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6C0 SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6EC SWAP1 PUSH2 0x17A8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x739 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x70E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x739 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x71C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7DD DUP3 DUP3 PUSH2 0xFB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x7F0 PUSH2 0xA01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x8AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A4 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C1 PUSH2 0x8B8 PUSH2 0xA01 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x955 SWAP1 PUSH2 0x1544 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x970 PUSH2 0x969 PUSH2 0xA01 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA70 SWAP1 PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE0 SWAP1 PUSH2 0x1524 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBF DUP4 DUP4 DUP4 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDD8 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE4F DUP5 DUP5 DUP5 PUSH2 0x1191 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBC SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x118C JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF38 SWAP2 SWAP1 PUSH2 0x1696 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFB1 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1191 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1025 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101C SWAP1 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1031 DUP3 PUSH1 0x0 DUP4 PUSH2 0x118C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AE SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1173 SWAP2 SWAP1 PUSH2 0x1644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1187 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1191 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11A5 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11BA DUP2 PUSH2 0x1B7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D6 JUMPI PUSH2 0x11D5 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11E4 DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1203 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1212 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1223 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1254 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1265 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1276 DUP7 DUP3 DUP8 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1297 JUMPI PUSH2 0x1296 PUSH2 0x1838 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12B6 DUP6 DUP3 DUP7 ADD PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C9 DUP2 PUSH2 0x1732 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DA DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x12E4 DUP2 DUP6 PUSH2 0x1685 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x183D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1315 PUSH1 0x23 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1320 DUP3 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1338 PUSH1 0x22 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1343 DUP3 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B PUSH1 0x22 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1366 DUP3 PUSH2 0x18EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x137E PUSH1 0x15 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1389 DUP3 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A1 PUSH1 0x26 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x13AC DUP3 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C4 PUSH1 0x28 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x13CF DUP3 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E7 PUSH1 0x21 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140A PUSH1 0x25 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1415 DUP3 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142D PUSH1 0x24 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x1438 DUP3 PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1450 PUSH1 0x25 DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x145B DUP3 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1473 PUSH1 0x1F DUP4 PUSH2 0x1685 JUMP JUMPDEST SWAP2 POP PUSH2 0x147E DUP3 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x14A1 DUP2 PUSH2 0x1768 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DC DUP2 DUP5 PUSH2 0x12CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FD DUP2 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151D DUP2 PUSH2 0x132B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153D DUP2 PUSH2 0x134E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x155D DUP2 PUSH2 0x1371 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157D DUP2 PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x159D DUP2 PUSH2 0x13B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15BD DUP2 PUSH2 0x13DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DD DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15FD DUP2 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161D DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163D DUP2 PUSH2 0x1466 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1659 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1674 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1498 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A1 DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x16AC DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16E1 JUMPI PUSH2 0x16E0 PUSH2 0x17DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F7 DUP3 PUSH2 0x175E JUMP JUMPDEST SWAP2 POP PUSH2 0x1702 DUP4 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1715 JUMPI PUSH2 0x1714 PUSH2 0x17DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x172B DUP3 PUSH2 0x173E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1793 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1778 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x17A2 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x1809 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420417070726F76656420746F20646F20736F0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1720 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1B87 DUP2 PUSH2 0x175E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP6 PUSH19 0xF116AFF264F1751D275760A786D3786EE49C81 ADDMOD 0xB2 DUP11 0xAA 0xC1 LOG4 DUP4 DUP11 SLT SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1367:11141:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4734:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3376:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5367:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3225:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6253:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3534:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3876:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2499:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3700:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6952:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4204:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4447:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:98;2342:13;2374:5;2367:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:98;:::o;4734:166::-;4817:4;4833:39;4842:12;:10;:12::i;:::-;4856:7;4865:6;4833:8;:39::i;:::-;4889:4;4882:11;;4734:166;;;;:::o;3376:106::-;3437:7;3463:12;;3456:19;;3376:106;:::o;5367:491::-;5516:4;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5532:36:::1;5542:6;5550:9;5561:6;5532:9;:36::i;:::-;5579:24;5606:11;:19;5618:6;5606:19;;;;;;;;;;;;;;;:33;5626:12;:10;:12::i;:::-;5606:33;;;;;;;;;;;;;;;;5579:60;;5677:6;5657:16;:26;;5649:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5762:57;5771:6;5779:12;:10;:12::i;:::-;5812:6;5793:16;:25;5762:8;:57::i;:::-;5847:4;5840:11;;;5367:491:::0;;;;;:::o;3225:91::-;3283:5;3307:2;3300:9;;3225:91;:::o;6253:212::-;6341:4;6357:80;6366:12;:10;:12::i;:::-;6380:7;6426:10;6389:11;:25;6401:12;:10;:12::i;:::-;6389:25;;;;;;;;;;;;;;;:34;6415:7;6389:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;6357:8;:80::i;:::-;6454:4;6447:11;;6253:212;;;;:::o;3534:114::-;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3624:17:::1;3630:2;3634:6;3624:5;:17::i;:::-;3534:114:::0;;:::o;3876:125::-;3950:7;3976:9;:18;3986:7;3976:18;;;;;;;;;;;;;;;;3969:25;;3876:125;;;:::o;2499:102::-;2555:13;2587:7;2580:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:102;:::o;3700:118::-;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3792:19:::1;3798:4;3804:6;3792:5;:19::i;:::-;3700:118:::0;;:::o;6952:405::-;7045:4;7061:24;7088:11;:25;7100:12;:10;:12::i;:::-;7088:25;;;;;;;;;;;;;;;:34;7114:7;7088:34;;;;;;;;;;;;;;;;7061:61;;7160:15;7140:16;:35;;7132:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7251:67;7260:12;:10;:12::i;:::-;7274:7;7302:15;7283:16;:34;7251:8;:67::i;:::-;7346:4;7339:11;;;6952:405;;;;:::o;4204:185::-;4303:4;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;4319:42:::1;4329:12;:10;:12::i;:::-;4343:9;4354:6;4319:9;:42::i;:::-;4378:4;4371:11;;4204:185:::0;;;;:::o;4447:149::-;4536:7;4562:11;:18;4574:5;4562:18;;;;;;;;;;;;;;;:27;4581:7;4562:27;;;;;;;;;;;;;;;;4555:34;;4447:149;;;;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;10528:370:3:-;10676:1;10659:19;;:5;:19;;;;10651:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10756:1;10737:21;;:7;:21;;;;10729:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10838:6;10808:11;:18;10820:5;10808:18;;;;;;;;;;;;;;;:27;10827:7;10808:27;;;;;;;;;;;;;;;:36;;;;10875:7;10859:32;;10868:5;10859:32;;;10884:6;10859:32;;;;;;:::i;:::-;;;;;;;;10528:370;;;:::o;7831:713::-;7984:1;7966:20;;:6;:20;;;;7958:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8067:1;8046:23;;:9;:23;;;;8038:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8120:47;8141:6;8149:9;8160:6;8120:20;:47::i;:::-;8178:21;8202:9;:17;8212:6;8202:17;;;;;;;;;;;;;;;;8178:41;;8254:6;8237:13;:23;;8229:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;8373:6;8357:13;:22;8337:9;:17;8347:6;8337:17;;;;;;;;;;;;;;;:42;;;;8423:6;8399:9;:20;8409:9;8399:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8462:9;8445:35;;8454:6;8445:35;;;8473:6;8445:35;;;;;;:::i;:::-;;;;;;;;8491:46;8511:6;8519:9;8530:6;8491:19;:46::i;:::-;7948:596;7831:713;;;:::o;8820:389::-;8922:1;8903:21;;:7;:21;;;;8895:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8971:49;9000:1;9004:7;9013:6;8971:20;:49::i;:::-;9047:6;9031:12;;:22;;;;;;;:::i;:::-;;;;;;;;9085:6;9063:9;:18;9073:7;9063:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;9127:7;9106:37;;9123:1;9106:37;;;9136:6;9106:37;;;;;;:::i;:::-;;;;;;;;9154:48;9182:1;9186:7;9195:6;9154:19;:48::i;:::-;8820:389;;:::o;9529:576::-;9631:1;9612:21;;:7;:21;;;;9604:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9682:49;9703:7;9720:1;9724:6;9682:20;:49::i;:::-;9742:22;9767:9;:18;9777:7;9767:18;;;;;;;;;;;;;;;;9742:43;;9821:6;9803:14;:24;;9795:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9938:6;9921:14;:23;9900:9;:18;9910:7;9900:18;;;;;;;;;;;;;;;:44;;;;9980:6;9964:12;;:22;;;;;;;:::i;:::-;;;;;;;;10028:1;10002:37;;10011:7;10002:37;;;10032:6;10002:37;;;;;;:::i;:::-;;;;;;;;10050:48;10070:7;10087:1;10091:6;10050:19;:48::i;:::-;9594:511;9529:576;;:::o;11482:121::-;;;;:::o;12191:120::-;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:::-;5448:3;5469:67;5533:2;5528:3;5469:67;:::i;:::-;5462:74;;5545:93;5634:3;5545:93;:::i;:::-;5663:2;5658:3;5654:12;5647:19;;5306:366;;;:::o;5678:::-;5820:3;5841:67;5905:2;5900:3;5841:67;:::i;:::-;5834:74;;5917:93;6006:3;5917:93;:::i;:::-;6035:2;6030:3;6026:12;6019:19;;5678:366;;;:::o;6050:::-;6192:3;6213:67;6277:2;6272:3;6213:67;:::i;:::-;6206:74;;6289:93;6378:3;6289:93;:::i;:::-;6407:2;6402:3;6398:12;6391:19;;6050:366;;;:::o;6422:::-;6564:3;6585:67;6649:2;6644:3;6585:67;:::i;:::-;6578:74;;6661:93;6750:3;6661:93;:::i;:::-;6779:2;6774:3;6770:12;6763:19;;6422:366;;;:::o;6794:118::-;6881:24;6899:5;6881:24;:::i;:::-;6876:3;6869:37;6794:118;;:::o;6918:112::-;7001:22;7017:5;7001:22;:::i;:::-;6996:3;6989:35;6918:112;;:::o;7036:210::-;7123:4;7161:2;7150:9;7146:18;7138:26;;7174:65;7236:1;7225:9;7221:17;7212:6;7174:65;:::i;:::-;7036:210;;;;:::o;7252:313::-;7365:4;7403:2;7392:9;7388:18;7380:26;;7452:9;7446:4;7442:20;7438:1;7427:9;7423:17;7416:47;7480:78;7553:4;7544:6;7480:78;:::i;:::-;7472:86;;7252:313;;;;:::o;7571:419::-;7737:4;7775:2;7764:9;7760:18;7752:26;;7824:9;7818:4;7814:20;7810:1;7799:9;7795:17;7788:47;7852:131;7978:4;7852:131;:::i;:::-;7844:139;;7571:419;;;:::o;7996:::-;8162:4;8200:2;8189:9;8185:18;8177:26;;8249:9;8243:4;8239:20;8235:1;8224:9;8220:17;8213:47;8277:131;8403:4;8277:131;:::i;:::-;8269:139;;7996:419;;;:::o;8421:::-;8587:4;8625:2;8614:9;8610:18;8602:26;;8674:9;8668:4;8664:20;8660:1;8649:9;8645:17;8638:47;8702:131;8828:4;8702:131;:::i;:::-;8694:139;;8421:419;;;:::o;8846:::-;9012:4;9050:2;9039:9;9035:18;9027:26;;9099:9;9093:4;9089:20;9085:1;9074:9;9070:17;9063:47;9127:131;9253:4;9127:131;:::i;:::-;9119:139;;8846:419;;;:::o;9271:::-;9437:4;9475:2;9464:9;9460:18;9452:26;;9524:9;9518:4;9514:20;9510:1;9499:9;9495:17;9488:47;9552:131;9678:4;9552:131;:::i;:::-;9544:139;;9271:419;;;:::o;9696:::-;9862:4;9900:2;9889:9;9885:18;9877:26;;9949:9;9943:4;9939:20;9935:1;9924:9;9920:17;9913:47;9977:131;10103:4;9977:131;:::i;:::-;9969:139;;9696:419;;;:::o;10121:::-;10287:4;10325:2;10314:9;10310:18;10302:26;;10374:9;10368:4;10364:20;10360:1;10349:9;10345:17;10338:47;10402:131;10528:4;10402:131;:::i;:::-;10394:139;;10121:419;;;:::o;10546:::-;10712:4;10750:2;10739:9;10735:18;10727:26;;10799:9;10793:4;10789:20;10785:1;10774:9;10770:17;10763:47;10827:131;10953:4;10827:131;:::i;:::-;10819:139;;10546:419;;;:::o;10971:::-;11137:4;11175:2;11164:9;11160:18;11152:26;;11224:9;11218:4;11214:20;11210:1;11199:9;11195:17;11188:47;11252:131;11378:4;11252:131;:::i;:::-;11244:139;;10971:419;;;:::o;11396:::-;11562:4;11600:2;11589:9;11585:18;11577:26;;11649:9;11643:4;11639:20;11635:1;11624:9;11620:17;11613:47;11677:131;11803:4;11677:131;:::i;:::-;11669:139;;11396:419;;;:::o;11821:::-;11987:4;12025:2;12014:9;12010:18;12002:26;;12074:9;12068:4;12064:20;12060:1;12049:9;12045:17;12038:47;12102:131;12228:4;12102:131;:::i;:::-;12094:139;;11821:419;;;:::o;12246:222::-;12339:4;12377:2;12366:9;12362:18;12354:26;;12390:71;12458:1;12447:9;12443:17;12434:6;12390:71;:::i;:::-;12246:222;;;;:::o;12474:214::-;12563:4;12601:2;12590:9;12586:18;12578:26;;12614:67;12678:1;12667:9;12663:17;12654:6;12614:67;:::i;:::-;12474:214;;;;:::o;12775:99::-;12827:6;12861:5;12855:12;12845:22;;12775:99;;;:::o;12880:169::-;12964:11;12998:6;12993:3;12986:19;13038:4;13033:3;13029:14;13014:29;;12880:169;;;;:::o;13055:305::-;13095:3;13114:20;13132:1;13114:20;:::i;:::-;13109:25;;13148:20;13166:1;13148:20;:::i;:::-;13143:25;;13302:1;13234:66;13230:74;13227:1;13224:81;13221:107;;;13308:18;;:::i;:::-;13221:107;13352:1;13349;13345:9;13338:16;;13055:305;;;;:::o;13366:191::-;13406:4;13426:20;13444:1;13426:20;:::i;:::-;13421:25;;13460:20;13478:1;13460:20;:::i;:::-;13455:25;;13499:1;13496;13493:8;13490:34;;;13504:18;;:::i;:::-;13490:34;13549:1;13546;13542:9;13534:17;;13366:191;;;;:::o;13563:96::-;13600:7;13629:24;13647:5;13629:24;:::i;:::-;13618:35;;13563:96;;;:::o;13665:90::-;13699:7;13742:5;13735:13;13728:21;13717:32;;13665:90;;;:::o;13761:126::-;13798:7;13838:42;13831:5;13827:54;13816:65;;13761:126;;;:::o;13893:77::-;13930:7;13959:5;13948:16;;13893:77;;;:::o;13976:86::-;14011:7;14051:4;14044:5;14040:16;14029:27;;13976:86;;;:::o;14068:307::-;14136:1;14146:113;14160:6;14157:1;14154:13;14146:113;;;14245:1;14240:3;14236:11;14230:18;14226:1;14221:3;14217:11;14210:39;14182:2;14179:1;14175:10;14170:15;;14146:113;;;14277:6;14274:1;14271:13;14268:101;;;14357:1;14348:6;14343:3;14339:16;14332:27;14268:101;14117:258;14068:307;;;:::o;14381:320::-;14425:6;14462:1;14456:4;14452:12;14442:22;;14509:1;14503:4;14499:12;14530:18;14520:81;;14586:4;14578:6;14574:17;14564:27;;14520:81;14648:2;14640:6;14637:14;14617:18;14614:38;14611:84;;;14667:18;;:::i;:::-;14611:84;14432:269;14381:320;;;:::o;14707:180::-;14755:77;14752:1;14745:88;14852:4;14849:1;14842:15;14876:4;14873:1;14866:15;14893:180;14941:77;14938:1;14931:88;15038:4;15035:1;15028:15;15062:4;15059:1;15052:15;15202:117;15311:1;15308;15301:12;15325:102;15366:6;15417:2;15413:7;15408:2;15401:5;15397:14;15393:28;15383:38;;15325:102;;;:::o;15433:222::-;15573:34;15569:1;15561:6;15557:14;15550:58;15642:5;15637:2;15629:6;15625:15;15618:30;15433:222;:::o;15661:221::-;15801:34;15797:1;15789:6;15785:14;15778:58;15870:4;15865:2;15857:6;15853:15;15846:29;15661:221;:::o;15888:::-;16028:34;16024:1;16016:6;16012:14;16005:58;16097:4;16092:2;16084:6;16080:15;16073:29;15888:221;:::o;16115:171::-;16255:23;16251:1;16243:6;16239:14;16232:47;16115:171;:::o;16292:225::-;16432:34;16428:1;16420:6;16416:14;16409:58;16501:8;16496:2;16488:6;16484:15;16477:33;16292:225;:::o;16523:227::-;16663:34;16659:1;16651:6;16647:14;16640:58;16732:10;16727:2;16719:6;16715:15;16708:35;16523:227;:::o;16756:220::-;16896:34;16892:1;16884:6;16880:14;16873:58;16965:3;16960:2;16952:6;16948:15;16941:28;16756:220;:::o;16982:224::-;17122:34;17118:1;17110:6;17106:14;17099:58;17191:7;17186:2;17178:6;17174:15;17167:32;16982:224;:::o;17212:223::-;17352:34;17348:1;17340:6;17336:14;17329:58;17421:6;17416:2;17408:6;17404:15;17397:31;17212:223;:::o;17441:224::-;17581:34;17577:1;17569:6;17565:14;17558:58;17650:7;17645:2;17637:6;17633:15;17626:32;17441:224;:::o;17671:181::-;17811:33;17807:1;17799:6;17795:14;17788:57;17671:181;:::o;17858:122::-;17931:24;17949:5;17931:24;:::i;:::-;17924:5;17921:35;17911:63;;17970:1;17967;17960:12;17911:63;17858:122;:::o;17986:::-;18059:24;18077:5;18059:24;:::i;:::-;18052:5;18049:35;18039:63;;18098:1;18095;18088:12;18039:63;17986:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1423000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2886",
								"burn(address,uint256)": "infinite",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setApprovedTokenTransferor(address)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2083,
									"end": 2090,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2080,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12508,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f9572f116aff264f1751d275760a786d3786ee49c8108b28aaac1a4838a129364736f6c63430008070033",
									".code": [
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "9DC29FAC"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "9DC29FAC"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1367,
											"end": 12508,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2355,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4842,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4842,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4856,
											"end": 4863,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4871,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4833,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4833,
											"end": 4872,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4872,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4833,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4882,
											"end": 4893,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 4893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4900,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5516,
											"end": 5520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5532,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5542,
											"end": 5548,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5559,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5561,
											"end": 5567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5532,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5532,
											"end": 5568,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5532,
											"end": 5568,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 5532,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5617,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5624,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5625,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5626,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5626,
											"end": 5638,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5626,
											"end": 5638,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5626,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5606,
											"end": 5639,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5639,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5579,
											"end": 5639,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5683,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5683,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5649,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5779,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5779,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5779,
											"end": 5791,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5779,
											"end": 5791,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5779,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5812,
											"end": 5818,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5809,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5793,
											"end": 5818,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5762,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5367,
											"end": 5858,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 6366,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 6366,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6380,
											"end": 6387,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6426,
											"end": 6436,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6400,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6401,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 6401,
											"end": 6413,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6401,
											"end": 6413,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6401,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6414,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6422,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6423,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 6389,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6357,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 6357,
											"end": 6437,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6437,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6357,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6447,
											"end": 6458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6465,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3630,
											"end": 3632,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3624,
											"end": 3641,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3641,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3624,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3534,
											"end": 3648,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3993,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 3994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3969,
											"end": 3994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3876,
											"end": 4001,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3798,
											"end": 3802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3792,
											"end": 3811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3792,
											"end": 3811,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3792,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3818,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7049,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7099,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7100,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7100,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7121,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7122,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7061,
											"end": 7122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7175,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7140,
											"end": 7175,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 7132,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7251,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7260,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7317,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7283,
											"end": 7299,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7283,
											"end": 7317,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7251,
											"end": 7259,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7251,
											"end": 7318,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7251,
											"end": 7318,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 7251,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7350,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7339,
											"end": 7350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7339,
											"end": 7350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6952,
											"end": 7357,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4329,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 4329,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4343,
											"end": 4352,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4360,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 4319,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4371,
											"end": 4382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4371,
											"end": 4382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4204,
											"end": 4389,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4543,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4580,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4555,
											"end": 4589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4555,
											"end": 4589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4447,
											"end": 4596,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10528,
											"end": 10898,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 10528,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10676,
											"end": 10677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10659,
											"end": 10678,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 10651,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10756,
											"end": 10757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10737,
											"end": 10758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 10729,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10838,
											"end": 10844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10819,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10820,
											"end": 10825,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10826,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10827,
											"end": 10834,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10835,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10844,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10844,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10808,
											"end": 10844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10875,
											"end": 10882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10868,
											"end": 10873,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10884,
											"end": 10890,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10859,
											"end": 10891,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10528,
											"end": 10898,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7831,
											"end": 8544,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 7831,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 7985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7972,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7958,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8067,
											"end": 8068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8046,
											"end": 8069,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 8038,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 8141,
											"end": 8147,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8120,
											"end": 8167,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8120,
											"end": 8167,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 8120,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8178,
											"end": 8199,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8212,
											"end": 8218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8202,
											"end": 8219,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8178,
											"end": 8219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8178,
											"end": 8219,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8260,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8260,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8237,
											"end": 8260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 8229,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8379,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8353,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8379,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8337,
											"end": 8379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8423,
											"end": 8429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8409,
											"end": 8418,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8399,
											"end": 8429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8462,
											"end": 8471,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8454,
											"end": 8460,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8473,
											"end": 8479,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8445,
											"end": 8480,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8491,
											"end": 8537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8511,
											"end": 8517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8491,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 8491,
											"end": 8537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8491,
											"end": 8537,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8491,
											"end": 8537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7948,
											"end": 8544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 8544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 8544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 8544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7831,
											"end": 8544,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8820,
											"end": 9209,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 8820,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8922,
											"end": 8923,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8903,
											"end": 8924,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8903,
											"end": 8924,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 8910,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 8924,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8903,
											"end": 8924,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 8924,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8903,
											"end": 8924,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8895,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8971,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9011,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9019,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8971,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 8971,
											"end": 9020,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8971,
											"end": 9020,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 8971,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9047,
											"end": 9053,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9043,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9031,
											"end": 9043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9031,
											"end": 9053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 9091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9091,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9127,
											"end": 9134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9123,
											"end": 9124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9106,
											"end": 9143,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9193,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9201,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 9154,
											"end": 9202,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9154,
											"end": 9202,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 9154,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 9209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 9209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 9209,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9529,
											"end": 10105,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 9529,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9631,
											"end": 9632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9612,
											"end": 9619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9612,
											"end": 9633,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 9604,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9703,
											"end": 9710,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 9682,
											"end": 9731,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9682,
											"end": 9731,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 9682,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9742,
											"end": 9764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9784,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9767,
											"end": 9785,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9742,
											"end": 9785,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9742,
											"end": 9785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9821,
											"end": 9827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9803,
											"end": 9817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9803,
											"end": 9827,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9803,
											"end": 9827,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 9795,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9938,
											"end": 9944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9935,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9944,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9910,
											"end": 9917,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9944,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9900,
											"end": 9944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9980,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 9964,
											"end": 9976,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10029,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10011,
											"end": 10018,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10032,
											"end": 10038,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10039,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10050,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10070,
											"end": 10077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10087,
											"end": 10088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10097,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10050,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 10050,
											"end": 10098,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10050,
											"end": 10098,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10050,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 10105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 10105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 10105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 10105,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11482,
											"end": 11603,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 11482,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11603,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11482,
											"end": 11603,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12191,
											"end": 12311,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 12191,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12191,
											"end": 12311,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5905,
											"end": 5907,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 5841,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5908,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 5917,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 6044,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6050,
											"end": 6416,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 6050,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6192,
											"end": 6195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6277,
											"end": 6279,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6272,
											"end": 6275,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6213,
											"end": 6280,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6280,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 6213,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6206,
											"end": 6280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6206,
											"end": 6280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6289,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 6378,
											"end": 6381,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6289,
											"end": 6382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 6289,
											"end": 6382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6289,
											"end": 6382,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 6289,
											"end": 6382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6402,
											"end": 6405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6391,
											"end": 6410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6050,
											"end": 6416,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6422,
											"end": 6788,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 6422,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6564,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6644,
											"end": 6647,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6585,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6585,
											"end": 6652,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6585,
											"end": 6652,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 6585,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6652,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6661,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6774,
											"end": 6777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6770,
											"end": 6782,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6763,
											"end": 6782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6763,
											"end": 6782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6422,
											"end": 6788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6422,
											"end": 6788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6422,
											"end": 6788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6422,
											"end": 6788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6794,
											"end": 6912,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 6794,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6881,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6899,
											"end": 6904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6881,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 6881,
											"end": 6905,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6881,
											"end": 6905,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 6881,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6876,
											"end": 6879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6906,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6794,
											"end": 6912,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6918,
											"end": 7030,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6918,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7017,
											"end": 7022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 7001,
											"end": 7023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7001,
											"end": 7023,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 7001,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6996,
											"end": 6999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6989,
											"end": 7024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7030,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7123,
											"end": 7127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7163,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7159,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 7236,
											"end": 7237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7234,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7221,
											"end": 7238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7218,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7174,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 7174,
											"end": 7239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7174,
											"end": 7239,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 7174,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7246,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7365,
											"end": 7369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7405,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7392,
											"end": 7401,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7380,
											"end": 7406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7380,
											"end": 7406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7446,
											"end": 7450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7442,
											"end": 7462,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7438,
											"end": 7439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7427,
											"end": 7436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7423,
											"end": 7440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7416,
											"end": 7463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 7553,
											"end": 7557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7480,
											"end": 7558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 7480,
											"end": 7558,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7480,
											"end": 7558,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 7480,
											"end": 7558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7472,
											"end": 7558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7565,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7571,
											"end": 7990,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7571,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7737,
											"end": 7741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7777,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7760,
											"end": 7778,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7752,
											"end": 7778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7752,
											"end": 7778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7818,
											"end": 7822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7814,
											"end": 7834,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7808,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 7978,
											"end": 7982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7852,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7852,
											"end": 7983,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7852,
											"end": 7983,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 7852,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7983,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7571,
											"end": 7990,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7996,
											"end": 8415,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7996,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8162,
											"end": 8166,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8202,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8185,
											"end": 8203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8177,
											"end": 8203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8249,
											"end": 8258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8243,
											"end": 8247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8239,
											"end": 8259,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8224,
											"end": 8233,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8213,
											"end": 8260,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 8403,
											"end": 8407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8277,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 8277,
											"end": 8408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8277,
											"end": 8408,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 8277,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7996,
											"end": 8415,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8421,
											"end": 8840,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 8421,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8627,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8614,
											"end": 8623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8674,
											"end": 8683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8668,
											"end": 8672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8684,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8661,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8649,
											"end": 8658,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8645,
											"end": 8662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8702,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8702,
											"end": 8833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 8702,
											"end": 8833,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8702,
											"end": 8833,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 8702,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 8833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8694,
											"end": 8833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8421,
											"end": 8840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8421,
											"end": 8840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8421,
											"end": 8840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8421,
											"end": 8840,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9012,
											"end": 9016,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9050,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9027,
											"end": 9053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9027,
											"end": 9053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9093,
											"end": 9097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9109,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9070,
											"end": 9087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9063,
											"end": 9110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 9253,
											"end": 9257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 9127,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9258,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 9265,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9271,
											"end": 9690,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 9271,
											"end": 9690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9437,
											"end": 9441,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9475,
											"end": 9477,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9464,
											"end": 9473,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9460,
											"end": 9478,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9524,
											"end": 9533,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9514,
											"end": 9534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9510,
											"end": 9511,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9508,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9495,
											"end": 9512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9488,
											"end": 9535,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9552,
											"end": 9683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9552,
											"end": 9683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9552,
											"end": 9683,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9552,
											"end": 9683,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 9552,
											"end": 9683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9544,
											"end": 9683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9544,
											"end": 9683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9271,
											"end": 9690,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9696,
											"end": 10115,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 9696,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9862,
											"end": 9866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9900,
											"end": 9902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9889,
											"end": 9898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 9958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9943,
											"end": 9947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9939,
											"end": 9959,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9936,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9924,
											"end": 9933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9920,
											"end": 9937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9913,
											"end": 9960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 10103,
											"end": 10107,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9977,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9977,
											"end": 10108,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9977,
											"end": 10108,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 9977,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9969,
											"end": 10108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9969,
											"end": 10108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 10115,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 10115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 10115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 10115,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10121,
											"end": 10540,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10121,
											"end": 10540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10325,
											"end": 10327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10310,
											"end": 10328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10364,
											"end": 10384,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10360,
											"end": 10361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10349,
											"end": 10358,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10345,
											"end": 10362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10385,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10402,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10528,
											"end": 10532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10402,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 10402,
											"end": 10533,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10402,
											"end": 10533,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 10402,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10394,
											"end": 10533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10394,
											"end": 10533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10121,
											"end": 10540,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10121,
											"end": 10540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10121,
											"end": 10540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10121,
											"end": 10540,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10546,
											"end": 10965,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 10546,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10712,
											"end": 10716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10739,
											"end": 10748,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10727,
											"end": 10753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10799,
											"end": 10808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10793,
											"end": 10797,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10809,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10774,
											"end": 10783,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10770,
											"end": 10787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10763,
											"end": 10810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10827,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 10953,
											"end": 10957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10827,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10827,
											"end": 10958,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10827,
											"end": 10958,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 10827,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10546,
											"end": 10965,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10971,
											"end": 11390,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 10971,
											"end": 11390,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11137,
											"end": 11141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11175,
											"end": 11177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11164,
											"end": 11173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11160,
											"end": 11178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11152,
											"end": 11178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11152,
											"end": 11178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11224,
											"end": 11233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11218,
											"end": 11222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11210,
											"end": 11211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11208,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11195,
											"end": 11212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11188,
											"end": 11235,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11252,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 11378,
											"end": 11382,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11252,
											"end": 11383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 11252,
											"end": 11383,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11252,
											"end": 11383,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 11252,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11244,
											"end": 11383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11244,
											"end": 11383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10971,
											"end": 11390,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10971,
											"end": 11390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10971,
											"end": 11390,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10971,
											"end": 11390,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11396,
											"end": 11815,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 11396,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11562,
											"end": 11566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11602,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11589,
											"end": 11598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11585,
											"end": 11603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11577,
											"end": 11603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11577,
											"end": 11603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11649,
											"end": 11658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11643,
											"end": 11647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11639,
											"end": 11659,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11635,
											"end": 11636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11624,
											"end": 11633,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11620,
											"end": 11637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11613,
											"end": 11660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11677,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11803,
											"end": 11807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11677,
											"end": 11808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 11677,
											"end": 11808,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11677,
											"end": 11808,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 11677,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11669,
											"end": 11808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11669,
											"end": 11808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11815,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11396,
											"end": 11815,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11821,
											"end": 12240,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 11821,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11987,
											"end": 11991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12025,
											"end": 12027,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12014,
											"end": 12023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12010,
											"end": 12028,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12002,
											"end": 12028,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12002,
											"end": 12028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12074,
											"end": 12083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12068,
											"end": 12072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12064,
											"end": 12084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12060,
											"end": 12061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12058,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12045,
											"end": 12062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12038,
											"end": 12085,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12102,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12228,
											"end": 12232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12102,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 12102,
											"end": 12233,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12102,
											"end": 12233,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 12102,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12094,
											"end": 12233,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12094,
											"end": 12233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11821,
											"end": 12240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11821,
											"end": 12240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11821,
											"end": 12240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11821,
											"end": 12240,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12339,
											"end": 12343,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12366,
											"end": 12375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12362,
											"end": 12380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12354,
											"end": 12380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12354,
											"end": 12380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12458,
											"end": 12459,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12447,
											"end": 12456,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12443,
											"end": 12460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12434,
											"end": 12440,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 12390,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12246,
											"end": 12468,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12563,
											"end": 12567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12603,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12590,
											"end": 12599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12586,
											"end": 12604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12578,
											"end": 12604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12578,
											"end": 12604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12614,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 12678,
											"end": 12679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12667,
											"end": 12676,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12663,
											"end": 12680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12654,
											"end": 12660,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12614,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 12614,
											"end": 12681,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12614,
											"end": 12681,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 12614,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12688,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12775,
											"end": 12874,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 12775,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12827,
											"end": 12833,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12861,
											"end": 12866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12855,
											"end": 12867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 12867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 12867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12775,
											"end": 12874,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12964,
											"end": 12975,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12993,
											"end": 12996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12986,
											"end": 13005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13038,
											"end": 13042,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13033,
											"end": 13036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13029,
											"end": 13043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13014,
											"end": 13043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13014,
											"end": 13043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12880,
											"end": 13049,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13095,
											"end": 13098,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 13132,
											"end": 13133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13114,
											"end": 13134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 13114,
											"end": 13134,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13114,
											"end": 13134,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 13114,
											"end": 13134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13109,
											"end": 13134,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13109,
											"end": 13134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13148,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 13166,
											"end": 13167,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13148,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 13148,
											"end": 13168,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13148,
											"end": 13168,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 13148,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13143,
											"end": 13168,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13143,
											"end": 13168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13302,
											"end": 13303,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13234,
											"end": 13300,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13230,
											"end": 13304,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13227,
											"end": 13228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13224,
											"end": 13305,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 13221,
											"end": 13328,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13221,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 13221,
											"end": 13328,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13221,
											"end": 13328,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 13221,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13352,
											"end": 13353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13349,
											"end": 13350,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13345,
											"end": 13354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13338,
											"end": 13354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13338,
											"end": 13354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13055,
											"end": 13360,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13406,
											"end": 13410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13426,
											"end": 13446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 13444,
											"end": 13445,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13426,
											"end": 13446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 13426,
											"end": 13446,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13426,
											"end": 13446,
											"name": "tag",
											"source": 4,
											"value": "334"
										},
										{
											"begin": 13426,
											"end": 13446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13421,
											"end": 13446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13421,
											"end": 13446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13460,
											"end": 13480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 13478,
											"end": 13479,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13460,
											"end": 13480,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 13460,
											"end": 13480,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13460,
											"end": 13480,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 13460,
											"end": 13480,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13455,
											"end": 13480,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13455,
											"end": 13480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13499,
											"end": 13500,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13496,
											"end": 13497,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13493,
											"end": 13501,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13524,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 13490,
											"end": 13524,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13490,
											"end": 13524,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 13490,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13549,
											"end": 13550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13542,
											"end": 13551,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13534,
											"end": 13551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13366,
											"end": 13557,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13563,
											"end": 13659,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 13563,
											"end": 13659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13600,
											"end": 13607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13629,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 13647,
											"end": 13652,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13629,
											"end": 13653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 13629,
											"end": 13653,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 13629,
											"end": 13653,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 13629,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13618,
											"end": 13653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13618,
											"end": 13653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13563,
											"end": 13659,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13563,
											"end": 13659,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13563,
											"end": 13659,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13563,
											"end": 13659,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13665,
											"end": 13755,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 13665,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13699,
											"end": 13706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13742,
											"end": 13747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13735,
											"end": 13748,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13728,
											"end": 13749,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13717,
											"end": 13749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13717,
											"end": 13749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13665,
											"end": 13755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13665,
											"end": 13755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13665,
											"end": 13755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13665,
											"end": 13755,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13761,
											"end": 13887,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 13761,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13798,
											"end": 13805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13838,
											"end": 13880,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13831,
											"end": 13836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13827,
											"end": 13881,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 13816,
											"end": 13881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13816,
											"end": 13881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 13887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 13887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 13887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13761,
											"end": 13887,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13893,
											"end": 13970,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 13893,
											"end": 13970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13930,
											"end": 13937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13959,
											"end": 13964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13948,
											"end": 13964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13948,
											"end": 13964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 13970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 13970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 13970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 13970,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13976,
											"end": 14062,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 13976,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14011,
											"end": 14018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14055,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 14044,
											"end": 14049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14040,
											"end": 14056,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14029,
											"end": 14056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14029,
											"end": 14056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13976,
											"end": 14062,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13976,
											"end": 14062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13976,
											"end": 14062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13976,
											"end": 14062,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14068,
											"end": 14375,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 14068,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14136,
											"end": 14137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14160,
											"end": 14166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14157,
											"end": 14158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14154,
											"end": 14167,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14245,
											"end": 14246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14240,
											"end": 14243,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14236,
											"end": 14247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 14226,
											"end": 14227,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14221,
											"end": 14224,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14217,
											"end": 14228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14210,
											"end": 14249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14182,
											"end": 14184,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14175,
											"end": 14185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14170,
											"end": 14185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14170,
											"end": 14185,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 14146,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14277,
											"end": 14283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14274,
											"end": 14275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14271,
											"end": 14284,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 14268,
											"end": 14369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14268,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 14268,
											"end": 14369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14357,
											"end": 14358,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14348,
											"end": 14354,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14343,
											"end": 14346,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14339,
											"end": 14355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14332,
											"end": 14359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14268,
											"end": 14369,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 14268,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14117,
											"end": 14375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14068,
											"end": 14375,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14381,
											"end": 14701,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 14381,
											"end": 14701,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14425,
											"end": 14431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14462,
											"end": 14463,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 14456,
											"end": 14460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14452,
											"end": 14464,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 14442,
											"end": 14464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14442,
											"end": 14464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14509,
											"end": 14510,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14503,
											"end": 14507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14499,
											"end": 14511,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14530,
											"end": 14548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 14520,
											"end": 14601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14586,
											"end": 14590,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 14578,
											"end": 14584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14574,
											"end": 14591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14564,
											"end": 14591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14564,
											"end": 14591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14601,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 14520,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14648,
											"end": 14650,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14640,
											"end": 14646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14637,
											"end": 14651,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14614,
											"end": 14652,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14611,
											"end": 14695,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14611,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 14611,
											"end": 14695,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 14667,
											"end": 14685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14611,
											"end": 14695,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 14611,
											"end": 14695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14432,
											"end": 14701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14381,
											"end": 14701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14381,
											"end": 14701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14381,
											"end": 14701,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14381,
											"end": 14701,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14707,
											"end": 14887,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 14707,
											"end": 14887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14755,
											"end": 14832,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14752,
											"end": 14753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14745,
											"end": 14833,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14852,
											"end": 14856,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 14849,
											"end": 14850,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 14842,
											"end": 14857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 14880,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 14873,
											"end": 14874,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14866,
											"end": 14881,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 15073,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 14893,
											"end": 15073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14941,
											"end": 15018,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14938,
											"end": 14939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14931,
											"end": 15019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15038,
											"end": 15042,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 15035,
											"end": 15036,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15028,
											"end": 15043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15062,
											"end": 15066,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 15059,
											"end": 15060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15052,
											"end": 15067,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15202,
											"end": 15319,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 15202,
											"end": 15319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15311,
											"end": 15312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15308,
											"end": 15309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15301,
											"end": 15313,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15325,
											"end": 15427,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 15325,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15366,
											"end": 15372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15417,
											"end": 15419,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 15413,
											"end": 15420,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15408,
											"end": 15410,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 15401,
											"end": 15406,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15397,
											"end": 15411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15393,
											"end": 15421,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15383,
											"end": 15421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15383,
											"end": 15421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15325,
											"end": 15427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15325,
											"end": 15427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15325,
											"end": 15427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15325,
											"end": 15427,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15433,
											"end": 15655,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 15433,
											"end": 15655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15573,
											"end": 15607,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 15569,
											"end": 15570,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15561,
											"end": 15567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15557,
											"end": 15571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15550,
											"end": 15608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15642,
											"end": 15647,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15637,
											"end": 15639,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15629,
											"end": 15635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15625,
											"end": 15640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15618,
											"end": 15648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15433,
											"end": 15655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15433,
											"end": 15655,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15661,
											"end": 15882,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 15661,
											"end": 15882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15801,
											"end": 15835,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 15797,
											"end": 15798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15789,
											"end": 15795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15785,
											"end": 15799,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15778,
											"end": 15836,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15874,
											"name": "PUSH",
											"source": 4,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15865,
											"end": 15867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15857,
											"end": 15863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15853,
											"end": 15868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15846,
											"end": 15875,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15661,
											"end": 15882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15661,
											"end": 15882,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 15888,
											"end": 16109,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 15888,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16028,
											"end": 16062,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 16024,
											"end": 16025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16016,
											"end": 16022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16012,
											"end": 16026,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16005,
											"end": 16063,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16097,
											"end": 16101,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16092,
											"end": 16094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16084,
											"end": 16090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16080,
											"end": 16095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16073,
											"end": 16102,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15888,
											"end": 16109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15888,
											"end": 16109,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 16115,
											"end": 16286,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 16115,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16255,
											"end": 16278,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420417070726F76656420746F20646F20736F0000000000000000000000"
										},
										{
											"begin": 16251,
											"end": 16252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16243,
											"end": 16249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16239,
											"end": 16253,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16232,
											"end": 16279,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16115,
											"end": 16286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16115,
											"end": 16286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 16292,
											"end": 16517,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 16292,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16432,
											"end": 16466,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 16428,
											"end": 16429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16420,
											"end": 16426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16416,
											"end": 16430,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16409,
											"end": 16467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16501,
											"end": 16509,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16496,
											"end": 16498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16488,
											"end": 16494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16484,
											"end": 16499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16477,
											"end": 16510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16292,
											"end": 16517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16292,
											"end": 16517,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 16523,
											"end": 16750,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 16523,
											"end": 16750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16663,
											"end": 16697,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 16659,
											"end": 16660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16651,
											"end": 16657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16647,
											"end": 16661,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16640,
											"end": 16698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16732,
											"end": 16742,
											"name": "PUSH",
											"source": 4,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16727,
											"end": 16729,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16719,
											"end": 16725,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16715,
											"end": 16730,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16708,
											"end": 16743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16523,
											"end": 16750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16523,
											"end": 16750,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 16756,
											"end": 16976,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 16756,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16896,
											"end": 16930,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 16892,
											"end": 16893,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16884,
											"end": 16890,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16880,
											"end": 16894,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16873,
											"end": 16931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16965,
											"end": 16968,
											"name": "PUSH",
											"source": 4,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16960,
											"end": 16962,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16952,
											"end": 16958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16948,
											"end": 16963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16941,
											"end": 16969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16756,
											"end": 16976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16756,
											"end": 16976,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 16982,
											"end": 17206,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 16982,
											"end": 17206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17122,
											"end": 17156,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 17118,
											"end": 17119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17110,
											"end": 17116,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17106,
											"end": 17120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17099,
											"end": 17157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17191,
											"end": 17198,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17186,
											"end": 17188,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17178,
											"end": 17184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17174,
											"end": 17189,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17167,
											"end": 17199,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16982,
											"end": 17206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16982,
											"end": 17206,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 17212,
											"end": 17435,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 17212,
											"end": 17435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17352,
											"end": 17386,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 17348,
											"end": 17349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17340,
											"end": 17346,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17336,
											"end": 17350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17329,
											"end": 17387,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17421,
											"end": 17427,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17416,
											"end": 17418,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17408,
											"end": 17414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17404,
											"end": 17419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17397,
											"end": 17428,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17212,
											"end": 17435,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17212,
											"end": 17435,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 17441,
											"end": 17665,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 17441,
											"end": 17665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17581,
											"end": 17615,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 17577,
											"end": 17578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17569,
											"end": 17575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17565,
											"end": 17579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17558,
											"end": 17616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17650,
											"end": 17657,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17645,
											"end": 17647,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17637,
											"end": 17643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17633,
											"end": 17648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17626,
											"end": 17658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17441,
											"end": 17665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17441,
											"end": 17665,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 17671,
											"end": 17852,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 17671,
											"end": 17852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17811,
											"end": 17844,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17807,
											"end": 17808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17799,
											"end": 17805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17795,
											"end": 17809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17788,
											"end": 17845,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17671,
											"end": 17852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17671,
											"end": 17852,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 17858,
											"end": 17980,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 17858,
											"end": 17980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17931,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 17949,
											"end": 17954,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17931,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 17931,
											"end": 17955,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 17931,
											"end": 17955,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 17931,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17924,
											"end": 17929,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17921,
											"end": 17956,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17911,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 17911,
											"end": 17974,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17970,
											"end": 17971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17967,
											"end": 17968,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17960,
											"end": 17972,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17911,
											"end": 17974,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 17911,
											"end": 17974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17858,
											"end": 17980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17858,
											"end": 17980,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 17986,
											"end": 18108,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 17986,
											"end": 18108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18059,
											"end": 18083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 18077,
											"end": 18082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18059,
											"end": 18083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 18059,
											"end": 18083,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 18059,
											"end": 18083,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 18059,
											"end": 18083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 18052,
											"end": 18057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 18049,
											"end": 18084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 18039,
											"end": 18102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 18039,
											"end": 18102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 18098,
											"end": 18099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 18095,
											"end": 18096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 18088,
											"end": 18100,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 18039,
											"end": 18102,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 18039,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17986,
											"end": 18108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17986,
											"end": 18108,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"See {IERC20-burn}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See {IERC20-mint}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"w-ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC20.sol\":{\"keccak256\":\"0x22859cd4d66846c6d076fb1dac43c6affc9477b88e5e8bce75d5bf4d792de125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25760bd6fa560b82e0f1c277c0a721f71c1bfd214d618cb9a65757d74fd3f2e0\",\"dweb:/ipfs/QmU5UZjPV3gzWbc5ndK5fQj9Ca8tasj3n34YqbGCuAjR6c\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]},\"w-ERC20.sol\":{\"keccak256\":\"0x66bdf05ec2b09fa180031d01e4d4e32da5b383f4ce44fa1e6e676deda0573057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7ab4a68ef6cf84c7f41f1e1a77ee92c7b2c0e34af35cf0e806988c27c601a2\",\"dweb:/ipfs/QmctTNxxGzugwHicZbpmDEq8jkWAj6xaUFZJmGMpogTiu7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 140,
								"contract": "w-ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 146,
								"contract": "w-ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 148,
								"contract": "w-ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 150,
								"contract": "w-ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 152,
								"contract": "w-ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 154,
								"contract": "w-ERC20.sol:ERC20",
								"label": "approvedTransferor",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20",
							"nameLocation": "197:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "211:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "291:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "328:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:1"
									},
									"scope": 99,
									"src": "282:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "343:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "429:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "447:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "439:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:17:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "479:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:9:1"
									},
									"scope": 99,
									"src": "420:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "494:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "717:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "734:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "726:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "745:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:35:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "779:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:1"
									},
									"scope": 99,
									"src": "708:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1079:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1094:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 99,
									"src": "1060:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1813:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1830:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1864:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:1"
									},
									"scope": 99,
									"src": "1796:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1876:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2186:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2216:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2208:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2240:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2232:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2267:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2259:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:81:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2298:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2298:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:6:1"
									},
									"scope": 99,
									"src": "2177:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2310:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 89,
									"name": "Transfer",
									"nameLocation": "2479:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2504:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2488:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2526:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2510:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2538:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2530:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2487:57:1"
									},
									"src": "2473:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2551:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 98,
									"name": "Approval",
									"nameLocation": "2710:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2735:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2719:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2742:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2775:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2767:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:63:1"
									},
									"src": "2704:78:1"
								}
							],
							"scope": 100,
							"src": "187:2597:1",
							"usedErrors": []
						}
					],
					"src": "91:2694:1"
				},
				"id": 1
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							99
						],
						"IERC20Metadata": [
							124
						]
					},
					"id": 125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 125,
							"sourceUnit": 100,
							"src": "135:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 104,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 99,
										"src": "304:6:2"
									},
									"id": 105,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 103,
								"nodeType": "StructuredDocumentation",
								"src": "159:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								99
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:2"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "415:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 108,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:2"
									},
									"scope": 124,
									"src": "376:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "538:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 114,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:2"
									},
									"scope": 124,
									"src": "497:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:2"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "672:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 120,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:2"
									},
									"scope": 124,
									"src": "629:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 125,
							"src": "276:405:2",
							"usedErrors": []
						}
					],
					"src": "110:572:2"
				},
				"id": 2
			},
			"w-ERC20.sol": {
				"ast": {
					"absolutePath": "w-ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							730
						],
						"IERC20": [
							99
						],
						"IERC20Metadata": [
							124
						]
					},
					"id": 731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 731,
							"sourceUnit": 100,
							"src": "115:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 731,
							"sourceUnit": 125,
							"src": "138:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 731,
							"sourceUnit": 22,
							"src": "169:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 131,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1385:7:3"
									},
									"id": 132,
									"nodeType": "InheritanceSpecifier",
									"src": "1385:7:3"
								},
								{
									"baseName": {
										"id": 133,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 99,
										"src": "1394:6:3"
									},
									"id": 134,
									"nodeType": "InheritanceSpecifier",
									"src": "1394:6:3"
								},
								{
									"baseName": {
										"id": 135,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "1402:14:3"
									},
									"id": 136,
									"nodeType": "InheritanceSpecifier",
									"src": "1402:14:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 130,
								"nodeType": "StructuredDocumentation",
								"src": "194:1172:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 730,
							"linearizedBaseContracts": [
								730,
								124,
								99,
								21
							],
							"name": "ERC20",
							"nameLocation": "1376:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1459:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 730,
									"src": "1423:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 139,
										"keyType": {
											"id": 137,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1431:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1423:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 138,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1442:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 146,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1531:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 730,
									"src": "1475:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 145,
										"keyType": {
											"id": 141,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1483:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1475:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 144,
											"keyType": {
												"id": 142,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1494:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1513:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1565:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 730,
									"src": "1549:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1549:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1599:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 730,
									"src": "1584:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 149,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1625:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 730,
									"src": "1610:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 151,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1610:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 154,
									"mutability": "mutable",
									"name": "approvedTransferor",
									"nameLocation": "1656:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 730,
									"src": "1639:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1639:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "2040:66:3",
										"statements": [
											{
												"expression": {
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 162,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2050:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 163,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2058:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2050:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "2050:13:3"
											},
											{
												"expression": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 166,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2073:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 167,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2083:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2073:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2073:17:3"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1681:298:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 171,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2010:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1996:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 156,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "2017:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:44:3"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:3"
									},
									"scope": 730,
									"src": "1984:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2134:90:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 174,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2150:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2150:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 176,
																"name": "approvedTransferor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "2164:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2150:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420417070726f76656420746f20646f20736f",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2184:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																"typeString": "literal_string \"Not Approved to do so\""
															},
															"value": "Not Approved to do so"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																"typeString": "literal_string \"Not Approved to do so\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2142:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2142:66:3"
											},
											{
												"id": 181,
												"nodeType": "PlaceholderStatement",
												"src": "2216:1:3"
											}
										]
									},
									"id": 183,
									"name": "onlyApproved",
									"nameLocation": "2121:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:3"
									},
									"src": "2112:112:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										111
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "2357:29:3",
										"statements": [
											{
												"expression": {
													"id": 190,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "2374:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 189,
												"id": 191,
												"nodeType": "Return",
												"src": "2367:12:3"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2229:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2297:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2324:8:3"
									},
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:2:3"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 187,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2342:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:15:3"
									},
									"scope": 730,
									"src": "2288:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										117
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2570:31:3",
										"statements": [
											{
												"expression": {
													"id": 200,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 152,
													"src": "2587:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 199,
												"id": 201,
												"nodeType": "Return",
												"src": "2580:14:3"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "2392:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2508:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 196,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2537:8:3"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:2:3"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2555:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2555:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:15:3"
									},
									"scope": 730,
									"src": "2499:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										123
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "3290:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3307:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 209,
												"id": 211,
												"nodeType": "Return",
												"src": "3300:9:3"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2607:613:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3234:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 206,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3265:8:3"
									},
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:2:3"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "3283:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 207,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3283:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:7:3"
									},
									"scope": 730,
									"src": "3225:91:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3446:36:3",
										"statements": [
											{
												"expression": {
													"id": 220,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 148,
													"src": "3463:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 219,
												"id": 221,
												"nodeType": "Return",
												"src": "3456:19:3"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "3322:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3385:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 216,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3419:8:3"
									},
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3396:2:3"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3437:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:9:3"
									},
									"scope": 730,
									"src": "3376:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3605:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "3630:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3634:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 233,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "3624:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3624:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3624:17:3"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "3487:42:3",
										"text": " @dev See {IERC20-mint}."
									},
									"functionSelector": "40c10f19",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 230,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "3592:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3592:12:3"
										}
									],
									"name": "mint",
									"nameLocation": "3543:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3568:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "3560:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3547:28:3"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3605:0:3"
									},
									"scope": 730,
									"src": "3534:114:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "3773:45:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 250,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3798:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 251,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3804:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 249,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "3792:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3792:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "3792:19:3"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "3653:42:3",
										"text": " @dev See {IERC20-burn}."
									},
									"functionSelector": "9dc29fac",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 246,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "3760:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3760:12:3"
										}
									],
									"name": "burn",
									"nameLocation": "3709:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3722:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3714:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3736:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3728:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3713:30:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3773:0:3"
									},
									"scope": 730,
									"src": "3700:118:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "3959:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 264,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3976:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 266,
													"indexExpression": {
														"id": 265,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3986:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3976:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 267,
												"nodeType": "Return",
												"src": "3969:25:3"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3824:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3885:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3932:8:3"
									},
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3903:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "3895:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3895:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:17:3"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "3950:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:9:3"
									},
									"scope": 730,
									"src": "3876:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "4309:80:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 283,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4329:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4329:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 285,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4343:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4354:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 282,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "4319:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "4319:42:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4378:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 281,
												"id": 290,
												"nodeType": "Return",
												"src": "4371:11:3"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "4007:192:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "4281:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4281:12:3"
										}
									],
									"name": "transfer",
									"nameLocation": "4213:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 276,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4272:8:3"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4230:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4222:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4249:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4241:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:35:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "4303:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4303:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4302:6:3"
									},
									"scope": 730,
									"src": "4204:185:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "4545:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 303,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4562:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 305,
														"indexExpression": {
															"id": 304,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "4574:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4562:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 307,
													"indexExpression": {
														"id": 306,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "4581:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4562:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 308,
												"nodeType": "Return",
												"src": "4555:34:3"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "4395:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4456:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 299,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4518:8:3"
									},
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4474:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4466:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4489:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4481:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:32:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "4536:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4536:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:9:3"
									},
									"scope": 730,
									"src": "4447:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "4823:77:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 322,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4842:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4842:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 324,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "4856:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4865:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 321,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "4833:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4833:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "4833:39:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4889:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 320,
												"id": 329,
												"nodeType": "Return",
												"src": "4882:11:3"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "4602:127:3",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4743:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4799:8:3"
									},
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4759:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4751:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4776:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4768:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4750:33:3"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "4817:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4817:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4816:6:3"
									},
									"scope": 730,
									"src": "4734:166:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5522:336:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5542:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 348,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "5550:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "5561:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5532:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5532:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "5532:36:3"
											},
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5587:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "5579:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 352,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5579:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 354,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5606:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 356,
														"indexExpression": {
															"id": 355,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "5618:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5606:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 359,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 357,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "5626:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5626:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5606:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5579:60:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "5657:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 363,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "5677:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5657:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5685:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5649:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5649:79:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5649:79:3"
											},
											{
												"id": 377,
												"nodeType": "UncheckedBlock",
												"src": "5738:92:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 369,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "5771:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 370,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "5779:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5779:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 372,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "5793:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 373,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "5812:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5793:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 368,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "5762:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5762:57:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "5762:57:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5847:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 345,
												"id": 379,
												"nodeType": "Return",
												"src": "5840:11:3"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "4906:456:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 341,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "5494:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5494:12:3"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5376:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5485:8:3"
									},
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5406:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5398:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5398:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5430:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5422:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5422:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5457:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5449:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5388:81:3"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5516:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5516:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5515:6:3"
									},
									"scope": 730,
									"src": "5367:491:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "6347:118:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 392,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6366:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6366:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6380:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 395,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "6389:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 398,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 396,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "6401:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6401:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6389:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 400,
																"indexExpression": {
																	"id": 399,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6415:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6389:34:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 401,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "6426:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6389:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "6357:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:80:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "6357:80:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6454:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 390,
												"id": 406,
												"nodeType": "Return",
												"src": "6447:11:3"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5864:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6262:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6288:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6280:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6280:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6305:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6297:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6297:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6279:37:3"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6341:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6341:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6340:6:3"
									},
									"scope": 730,
									"src": "6253:212:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "7051:306:3",
										"statements": [
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7069:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 446,
														"src": "7061:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7061:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 420,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "7088:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 423,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 421,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "7100:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7100:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7088:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 425,
													"indexExpression": {
														"id": 424,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "7114:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7088:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7061:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7140:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 429,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "7160:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7140:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7177:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7132:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7132:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "7132:85:3"
											},
											{
												"id": 443,
												"nodeType": "UncheckedBlock",
												"src": "7227:102:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 435,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "7260:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7260:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 437,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "7274:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 438,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 419,
																		"src": "7283:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 439,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "7302:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7283:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 434,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "7251:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7251:67:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 442,
														"nodeType": "ExpressionStatement",
														"src": "7251:67:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7346:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 417,
												"id": 445,
												"nodeType": "Return",
												"src": "7339:11:3"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "6471:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6961:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6987:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6979:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6979:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7004:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6996:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6996:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6978:42:3"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "7045:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7045:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7044:6:3"
									},
									"scope": 730,
									"src": "6952:405:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7948:596:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 458,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "7966:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7984:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7976:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7976:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7976:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7966:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7988:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7958:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "7958:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "8046:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8067:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8059:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8059:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8059:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8046:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8071:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8038:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8038:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8038:71:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 478,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8141:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8149:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8160:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "8120:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8120:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "8120:47:3"
											},
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "8186:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "8178:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8178:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"baseExpression": {
														"id": 485,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "8202:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 487,
													"indexExpression": {
														"id": 486,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "8212:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8202:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8178:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 490,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "8237:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8254:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8237:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8262:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8229:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8229:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "8229:74:3"
											},
											{
												"id": 504,
												"nodeType": "UncheckedBlock",
												"src": "8313:77:3",
												"statements": [
													{
														"expression": {
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 496,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "8337:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 498,
																"indexExpression": {
																	"id": 497,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "8347:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8337:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 499,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "8357:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 500,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "8373:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8357:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8337:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 503,
														"nodeType": "ExpressionStatement",
														"src": "8337:42:3"
													}
												]
											},
											{
												"expression": {
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 505,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "8399:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 507,
														"indexExpression": {
															"id": 506,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8409:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8399:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 508,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "8423:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8399:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "8399:30:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 512,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8454:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8462:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8473:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "8445:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8445:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "EmitStatement",
												"src": "8440:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "8511:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "8519:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8530:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "8491:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8491:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8491:46:3"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "7363:463:3",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7840:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7867:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7859:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7891:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7883:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7883:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7918:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7910:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7849:81:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7948:0:3"
									},
									"scope": 730,
									"src": "7831:713:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "8885:324:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "8903:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8922:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 534,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8914:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8914:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8903:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8926:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8895:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8895:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "8895:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9000:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8992:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 543,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8992:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8992:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9004:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9013:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 542,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "8971:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8971:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "8971:49:3"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 551,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "9031:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 552,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "9047:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9031:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "9031:22:3"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 555,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "9063:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 557,
														"indexExpression": {
															"id": 556,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9073:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9063:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 558,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "9085:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9063:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "9063:28:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9123:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9115:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9115:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9115:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9127:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9136:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "9106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9106:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "9101:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9182:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9174:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9174:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9174:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9186:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9195:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "9154:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9154:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "9154:48:3"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8550:265:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8829:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8843:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8835:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8835:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8860:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "8852:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8834:33:3"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8885:0:3"
									},
									"scope": 730,
									"src": "8820:389:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "9594:511:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "9612:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9631:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9623:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 590,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9623:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9623:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9612:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9635:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9604:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9604:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "9604:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "9703:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9720:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9712:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9712:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9712:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "9724:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 598,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "9682:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9682:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "9682:49:3"
											},
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9750:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 651,
														"src": "9742:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9742:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 612,
												"initialValue": {
													"baseExpression": {
														"id": 609,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "9767:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 611,
													"indexExpression": {
														"id": 610,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "9777:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9767:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9742:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 614,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "9803:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 615,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "9821:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9803:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9829:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9795:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9795:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "9795:71:3"
											},
											{
												"id": 628,
												"nodeType": "UncheckedBlock",
												"src": "9876:79:3",
												"statements": [
													{
														"expression": {
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 620,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "9900:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 622,
																"indexExpression": {
																	"id": 621,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "9910:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9900:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 623,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "9921:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 624,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "9938:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9921:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9900:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 627,
														"nodeType": "ExpressionStatement",
														"src": "9900:44:3"
													}
												]
											},
											{
												"expression": {
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 629,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "9964:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9980:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9964:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "9964:22:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "10011:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10028:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10020:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 635,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10020:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10020:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10032:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 633,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "10002:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10002:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "EmitStatement",
												"src": "9997:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10087:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10079:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10079:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10079:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "10091:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "10050:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10050:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "10050:48:3"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "9215:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9538:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9552:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "9544:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9569:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "9561:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9561:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9543:33:3"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9594:0:3"
									},
									"scope": 730,
									"src": "9529:576:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "10641:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 663,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "10659:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10676:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10668:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 664,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10668:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10668:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10659:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10680:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 662,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10651:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10651:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "10651:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 673,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "10737:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10756:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10748:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 674,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10748:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10748:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10737:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10760:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10729:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10729:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "10729:68:3"
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 682,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "10808:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 685,
															"indexExpression": {
																"id": 683,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "10820:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10808:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 686,
														"indexExpression": {
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "10827:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10808:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 687,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "10838:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10808:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "10808:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 691,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "10868:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "10875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "10884:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "10859:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10859:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "EmitStatement",
												"src": "10854:37:3"
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "10111:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10537:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10563:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10555:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10555:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10586:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10578:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10578:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10611:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "10603:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10545:78:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10641:0:3"
									},
									"scope": 730,
									"src": "10528:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "11601:2:3",
										"statements": []
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "10904:573:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11491:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11529:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "11521:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11521:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "11543:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11571:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "11563:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11511:72:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11601:0:3"
									},
									"scope": 730,
									"src": "11482:121:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "12309:2:3",
										"statements": []
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "11609:577:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12200:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12237:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "12229:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "12251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12279:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "12271:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12271:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12219:72:3"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12309:0:3"
									},
									"scope": 730,
									"src": "12191:120:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "12382:123:3",
										"statements": [
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 724,
														"name": "approvedTransferor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "12470:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 725,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "12491:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12470:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "12470:28:3"
											}
										]
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovedTokenTransferor",
									"nameLocation": "12327:27:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12363:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "12355:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12355:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12354:17:3"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12382:0:3"
									},
									"scope": 730,
									"src": "12318:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 731,
							"src": "1367:11141:3",
							"usedErrors": []
						}
					],
					"src": "90:12419:3"
				},
				"id": 3
			}
		}
	}
}