{
	"id": "a6cd1f24486d829c354e7de8ce452fb0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"RebaseAirdrop.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ncontract testRebase { \r\n\r\n    //TODO: Update airdropped balance of tUSDC \r\n    //mapping(address => uint256) public airdroppedBal;\r\n    //uint256 public timeLaunched;\r\n    //uint256 deltaTimeFromInit;\r\n    struct btonsLocked {  \r\n        uint256 timeInit;  \r\n        uint256 amounts;  \r\n        }\r\n    mapping(address => btonsLocked) public airdroppedBal;\r\n    IERC20 public USDC;\r\n    constructor(address _usdcAddr, address _btonAddr) {\r\n        USDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B);\r\n        }\r\n\r\n   \r\n    function startAirDrop() external\r\n    {\r\n        airdroppedBal[msg.sender].timeInit = block.timestamp;\r\n     //TODO: Check amount of BTON Held\r\n\r\n    }\r\n\r\n    function calcAirdrop() internal {\r\n        uint256 deltaTimeFromInit;\r\n        uint256 epochs;\r\n        uint256 airdropAmt;\r\n    deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit;\r\n    epochs = deltaTimeFromInit / 180; //test\r\n    airdropAmt = epochs *1;\r\n    airdroppedBal[msg.sender].amounts = airdropAmt;\r\n\r\n    }\r\n    function withdrawAirDrop() internal {\r\n        uint256 deltaTimeFromInit;\r\n        uint256 epochs;\r\n        uint256 airdropAmt;\r\n    deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit;\r\n    epochs = deltaTimeFromInit / 180; //test\r\n    airdropAmt = epochs *1;\r\n    airdroppedBal[msg.sender].amounts = airdropAmt;\r\n\r\n    }\r\n\r\n\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RebaseAirdrop.sol": {
				"testRebase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdcAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_btonAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "airdroppedBal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timeInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amounts",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirDrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RebaseAirdrop.sol\":55:1438  contract testRebase { \r... */\n  mstore(0x40, 0x80)\n    /* \"RebaseAirdrop.sol\":441:571  constructor(address _usdcAddr, address _btonAddr) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"RebaseAirdrop.sol\":516:558  0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B */\n  0xd7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b\n    /* \"RebaseAirdrop.sol\":502:506  USDC */\n  0x01\n  0x00\n    /* \"RebaseAirdrop.sol\":502:559  USDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"RebaseAirdrop.sol\":441:571  constructor(address _usdcAddr, address _btonAddr) {\r... */\n  pop\n  pop\n    /* \"RebaseAirdrop.sol\":55:1438  contract testRebase { \r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":260:379   */\ntag_13:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_16\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_17\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_8\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_20:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_22\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_23:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_15:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_11:\n    /* \"#utility.yul\":1303:1327   */\n  tag_29\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_20\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_30:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"RebaseAirdrop.sol\":55:1438  contract testRebase { \r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RebaseAirdrop.sol\":55:1438  contract testRebase { \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x283a1e16\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa87c70fa\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RebaseAirdrop.sol\":584:735  function startAirDrop() external\r... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"RebaseAirdrop.sol\":416:434  IERC20 public USDC */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":357:409  mapping(address => btonsLocked) public airdroppedBal */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":584:735  function startAirDrop() external\r... */\n    tag_7:\n        /* \"RebaseAirdrop.sol\":670:685  block.timestamp */\n      timestamp\n        /* \"RebaseAirdrop.sol\":633:646  airdroppedBal */\n      0x00\n        /* \"RebaseAirdrop.sol\":633:658  airdroppedBal[msg.sender] */\n      dup1\n        /* \"RebaseAirdrop.sol\":647:657  msg.sender */\n      caller\n        /* \"RebaseAirdrop.sol\":633:658  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RebaseAirdrop.sol\":633:667  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n        /* \"RebaseAirdrop.sol\":633:685  airdroppedBal[msg.sender].timeInit = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RebaseAirdrop.sol\":584:735  function startAirDrop() external\r... */\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":416:434  IERC20 public USDC */\n    tag_9:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":357:409  mapping(address => btonsLocked) public airdroppedBal */\n    tag_15:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_20:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_22\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_14:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":228:347   */\n    tag_25:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_28\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:644   */\n    tag_29:\n        /* \"#utility.yul\":587:637   */\n      tag_31\n        /* \"#utility.yul\":631:636   */\n      dup2\n        /* \"#utility.yul\":587:637   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":582:585   */\n      dup3\n        /* \"#utility.yul\":575:638   */\n      mstore\n        /* \"#utility.yul\":487:644   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:768   */\n    tag_33:\n        /* \"#utility.yul\":737:761   */\n      tag_35\n        /* \"#utility.yul\":755:760   */\n      dup2\n        /* \"#utility.yul\":737:761   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":732:735   */\n      dup3\n        /* \"#utility.yul\":725:762   */\n      mstore\n        /* \"#utility.yul\":650:768   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:1022   */\n    tag_11:\n        /* \"#utility.yul\":880:884   */\n      0x00\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":907:916   */\n      dup3\n        /* \"#utility.yul\":903:921   */\n      add\n        /* \"#utility.yul\":895:921   */\n      swap1\n      pop\n        /* \"#utility.yul\":931:1015   */\n      tag_38\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":931:1015   */\n      tag_29\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":774:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1360   */\n    tag_17:\n        /* \"#utility.yul\":1149:1153   */\n      0x00\n        /* \"#utility.yul\":1187:1189   */\n      0x40\n        /* \"#utility.yul\":1176:1185   */\n      dup3\n        /* \"#utility.yul\":1172:1190   */\n      add\n        /* \"#utility.yul\":1164:1190   */\n      swap1\n      pop\n        /* \"#utility.yul\":1200:1271   */\n      tag_40\n        /* \"#utility.yul\":1268:1269   */\n      0x00\n        /* \"#utility.yul\":1257:1266   */\n      dup4\n        /* \"#utility.yul\":1253:1270   */\n      add\n        /* \"#utility.yul\":1244:1250   */\n      dup6\n        /* \"#utility.yul\":1200:1271   */\n      tag_33\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1281:1353   */\n      tag_41\n        /* \"#utility.yul\":1349:1351   */\n      0x20\n        /* \"#utility.yul\":1338:1347   */\n      dup4\n        /* \"#utility.yul\":1334:1352   */\n      add\n        /* \"#utility.yul\":1325:1331   */\n      dup5\n        /* \"#utility.yul\":1281:1353   */\n      tag_33\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1028:1360   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1543   */\n    tag_44:\n        /* \"#utility.yul\":1484:1491   */\n      0x00\n        /* \"#utility.yul\":1513:1537   */\n      tag_46\n        /* \"#utility.yul\":1531:1536   */\n      dup3\n        /* \"#utility.yul\":1513:1537   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1502:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1447:1543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1675   */\n    tag_47:\n        /* \"#utility.yul\":1586:1593   */\n      0x00\n        /* \"#utility.yul\":1626:1668   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1619:1624   */\n      dup3\n        /* \"#utility.yul\":1615:1669   */\n      and\n        /* \"#utility.yul\":1604:1669   */\n      swap1\n      pop\n        /* \"#utility.yul\":1549:1675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1681:1758   */\n    tag_36:\n        /* \"#utility.yul\":1718:1725   */\n      0x00\n        /* \"#utility.yul\":1747:1752   */\n      dup2\n        /* \"#utility.yul\":1736:1752   */\n      swap1\n      pop\n        /* \"#utility.yul\":1681:1758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:1903   */\n    tag_32:\n        /* \"#utility.yul\":1827:1836   */\n      0x00\n        /* \"#utility.yul\":1860:1897   */\n      tag_51\n        /* \"#utility.yul\":1891:1896   */\n      dup3\n        /* \"#utility.yul\":1860:1897   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1847:1897   */\n      swap1\n      pop\n        /* \"#utility.yul\":1764:1903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2035   */\n    tag_52:\n        /* \"#utility.yul\":1959:1968   */\n      0x00\n        /* \"#utility.yul\":1992:2029   */\n      tag_54\n        /* \"#utility.yul\":2023:2028   */\n      dup3\n        /* \"#utility.yul\":1992:2029   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1979:2029   */\n      swap1\n      pop\n        /* \"#utility.yul\":1909:2035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2041:2154   */\n    tag_55:\n        /* \"#utility.yul\":2091:2100   */\n      0x00\n        /* \"#utility.yul\":2124:2148   */\n      tag_57\n        /* \"#utility.yul\":2142:2147   */\n      dup3\n        /* \"#utility.yul\":2124:2148   */\n      tag_47\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2111:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2041:2154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2400   */\n    tag_27:\n        /* \"#utility.yul\":2392:2393   */\n      0x00\n        /* \"#utility.yul\":2389:2390   */\n      dup1\n        /* \"#utility.yul\":2382:2394   */\n      revert\n        /* \"#utility.yul\":2406:2528   */\n    tag_23:\n        /* \"#utility.yul\":2479:2503   */\n      tag_62\n        /* \"#utility.yul\":2497:2502   */\n      dup2\n        /* \"#utility.yul\":2479:2503   */\n      tag_44\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2472:2477   */\n      dup2\n        /* \"#utility.yul\":2469:2504   */\n      eq\n        /* \"#utility.yul\":2459:2522   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2518:2519   */\n      0x00\n        /* \"#utility.yul\":2515:2516   */\n      dup1\n        /* \"#utility.yul\":2508:2520   */\n      revert\n        /* \"#utility.yul\":2459:2522   */\n    tag_63:\n        /* \"#utility.yul\":2406:2528   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f90b2c4254b80493a1118f2da624d4d5a434e56a68ba555ef0d002693e4c12a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_107": {
									"entryPoint": null,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:2"
															},
															"nodeType": "YulIf",
															"src": "260:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:2",
														"type": ""
													}
												],
												"src": "156:507:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:2",
														"type": ""
													}
												],
												"src": "669:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:2",
														"type": ""
													}
												],
												"src": "750:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:2",
														"type": ""
													}
												],
												"src": "852:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:2"
															},
															"nodeType": "YulIf",
															"src": "1283:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:2",
														"type": ""
													}
												],
												"src": "1230:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516103d93803806103d9833981810160405281019061003291906100a3565b73d7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610131565b60008151905061009d8161011a565b92915050565b600080604083850312156100ba576100b9610115565b5b60006100c88582860161008e565b92505060206100d98582860161008e565b9150509250929050565b60006100ee826100f5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610123816100e3565b811461012e57600080fd5b50565b610299806101406000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063283a1e161461004657806389a3027114610050578063a87c70fa1461006e575b600080fd5b61004e61009f565b005b6100586100e7565b6040516100659190610191565b60405180910390f35b61008860048036038101906100839190610146565b61010d565b6040516100969291906101ac565b60405180910390f35b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090508060000154908060010154905082565b6000813590506101408161024c565b92915050565b60006020828403121561015c5761015b610247565b5b600061016a84828501610131565b91505092915050565b61017c81610211565b82525050565b61018b81610207565b82525050565b60006020820190506101a66000830184610173565b92915050565b60006040820190506101c16000830185610182565b6101ce6020830184610182565b9392505050565b60006101e0826101e7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061021c82610223565b9050919050565b600061022e82610235565b9050919050565b6000610240826101e7565b9050919050565b600080fd5b610255816101d5565b811461026057600080fd5b5056fea26469706673582212204f90b2c4254b80493a1118f2da624d4d5a434e56a68ba555ef0d002693e4c12a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3D9 CODESIZE SUB DUP1 PUSH2 0x3D9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xA3 JUMP JUMPDEST PUSH20 0xD7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x131 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x9D DUP2 PUSH2 0x11A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBA JUMPI PUSH2 0xB9 PUSH2 0x115 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8 DUP6 DUP3 DUP7 ADD PUSH2 0x8E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD9 DUP6 DUP3 DUP7 ADD PUSH2 0x8E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE DUP3 PUSH2 0xF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 DUP2 PUSH2 0xE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x299 DUP1 PUSH2 0x140 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x283A1E16 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140 DUP2 PUSH2 0x24C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C JUMPI PUSH2 0x15B PUSH2 0x247 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A DUP5 DUP3 DUP6 ADD PUSH2 0x131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x1CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x182 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 PUSH2 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x223 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E DUP3 PUSH2 0x235 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 PUSH2 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP1 0xB2 0xC4 0x25 0x4B DUP1 0x49 GASPRICE GT XOR CALLCODE 0xDA PUSH3 0x4D4D5A NUMBER 0x4E JUMP 0xA6 DUP12 0xA5 SSTORE 0xEF 0xD STOP 0x26 SWAP4 0xE4 0xC1 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "55:1383:1:-:0;;;441:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;516:42;502:4;;:57;;;;;;;;;;;;;;;;;;441:130;;55:1383;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;55:1383:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@USDC_93": {
									"entryPoint": 231,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdroppedBal_90": {
									"entryPoint": 269,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirDrop_120": {
									"entryPoint": 159,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2531:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "565:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "582:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "631:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "587:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "575:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "575:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "553:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "560:3:2",
														"type": ""
													}
												],
												"src": "487:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "732:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "737:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "703:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "710:3:2",
														"type": ""
													}
												],
												"src": "650:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "885:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "895:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "907:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "895:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "931:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "931:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "857:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "869:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "880:4:2",
														"type": ""
													}
												],
												"src": "774:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1244:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1268:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1200:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1325:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1338:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1349:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1334:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1334:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1281:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1281:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1118:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1130:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1138:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1149:4:2",
														"type": ""
													}
												],
												"src": "1028:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1432:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1426:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1399:6:2",
														"type": ""
													}
												],
												"src": "1366:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1492:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1502:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1513:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1502:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1484:7:2",
														"type": ""
													}
												],
												"src": "1447:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1594:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1604:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1619:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1626:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1615:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1604:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1576:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1586:7:2",
														"type": ""
													}
												],
												"src": "1549:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1726:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1736:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1747:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1736:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1708:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1718:7:2",
														"type": ""
													}
												],
												"src": "1681:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1837:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1847:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1891:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1860:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1847:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1817:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1827:9:2",
														"type": ""
													}
												],
												"src": "1764:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1969:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1979:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2023:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1992:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1979:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1949:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1959:9:2",
														"type": ""
													}
												],
												"src": "1909:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2101:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2111:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2142:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2124:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2111:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2091:9:2",
														"type": ""
													}
												],
												"src": "2041:113:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2249:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2266:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2259:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2160:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2389:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2382:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2382:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2283:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2449:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2506:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2515:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2518:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2508:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2508:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2508:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2472:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2497:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2479:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2479:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2469:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2469:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2462:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:43:2"
															},
															"nodeType": "YulIf",
															"src": "2459:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2442:5:2",
														"type": ""
													}
												],
												"src": "2406:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063283a1e161461004657806389a3027114610050578063a87c70fa1461006e575b600080fd5b61004e61009f565b005b6100586100e7565b6040516100659190610191565b60405180910390f35b61008860048036038101906100839190610146565b61010d565b6040516100969291906101ac565b60405180910390f35b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090508060000154908060010154905082565b6000813590506101408161024c565b92915050565b60006020828403121561015c5761015b610247565b5b600061016a84828501610131565b91505092915050565b61017c81610211565b82525050565b61018b81610207565b82525050565b60006020820190506101a66000830184610173565b92915050565b60006040820190506101c16000830185610182565b6101ce6020830184610182565b9392505050565b60006101e0826101e7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061021c82610223565b9050919050565b600061022e82610235565b9050919050565b6000610240826101e7565b9050919050565b600080fd5b610255816101d5565b811461026057600080fd5b5056fea26469706673582212204f90b2c4254b80493a1118f2da624d4d5a434e56a68ba555ef0d002693e4c12a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x283A1E16 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140 DUP2 PUSH2 0x24C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C JUMPI PUSH2 0x15B PUSH2 0x247 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A DUP5 DUP3 DUP6 ADD PUSH2 0x131 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x211 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18B DUP2 PUSH2 0x207 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x182 JUMP JUMPDEST PUSH2 0x1CE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x182 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0 DUP3 PUSH2 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x223 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E DUP3 PUSH2 0x235 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x240 DUP3 PUSH2 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 DUP2 PUSH2 0x1D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F SWAP1 0xB2 0xC4 0x25 0x4B DUP1 0x49 GASPRICE GT XOR CALLCODE 0xDA PUSH3 0x4D4D5A NUMBER 0x4E JUMP 0xA6 DUP12 0xA5 SSTORE 0xEF 0xD STOP 0x26 SWAP4 0xE4 0xC1 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "55:1383:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:151;;;:::i;:::-;;416:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;357:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;584:151;670:15;633:13;:25;647:10;633:25;;;;;;;;;;;;;;;:34;;:52;;;;584:151::o;416:18::-;;;;;;;;;;;;;:::o;357:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:157::-;587:50;631:5;587:50;:::i;:::-;582:3;575:63;487:157;;:::o;650:118::-;737:24;755:5;737:24;:::i;:::-;732:3;725:37;650:118;;:::o;774:248::-;880:4;918:2;907:9;903:18;895:26;;931:84;1012:1;1001:9;997:17;988:6;931:84;:::i;:::-;774:248;;;;:::o;1028:332::-;1149:4;1187:2;1176:9;1172:18;1164:26;;1200:71;1268:1;1257:9;1253:17;1244:6;1200:71;:::i;:::-;1281:72;1349:2;1338:9;1334:18;1325:6;1281:72;:::i;:::-;1028:332;;;;;:::o;1447:96::-;1484:7;1513:24;1531:5;1513:24;:::i;:::-;1502:35;;1447:96;;;:::o;1549:126::-;1586:7;1626:42;1619:5;1615:54;1604:65;;1549:126;;;:::o;1681:77::-;1718:7;1747:5;1736:16;;1681:77;;;:::o;1764:139::-;1827:9;1860:37;1891:5;1860:37;:::i;:::-;1847:50;;1764:139;;;:::o;1909:126::-;1959:9;1992:37;2023:5;1992:37;:::i;:::-;1979:50;;1909:126;;;:::o;2041:113::-;2091:9;2124:24;2142:5;2124:24;:::i;:::-;2111:37;;2041:113;;;:::o;2283:117::-;2392:1;2389;2382:12;2406:122;2479:24;2497:5;2479:24;:::i;:::-;2472:5;2469:35;2459:63;;2518:1;2515;2508:12;2459:63;2406:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "133000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"USDC()": "2600",
								"airdroppedBal(address)": "infinite",
								"startAirDrop()": "22330"
							},
							"internal": {
								"calcAirdrop()": "infinite",
								"withdrawAirDrop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 441,
									"end": 571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 516,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "D7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B"
								},
								{
									"begin": 502,
									"end": 506,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 502,
									"end": 506,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 502,
									"end": 559,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 502,
									"end": 559,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 502,
									"end": 559,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 502,
									"end": 559,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 502,
									"end": 559,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 571,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 1438,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f90b2c4254b80493a1118f2da624d4d5a434e56a68ba555ef0d002693e4c12a64736f6c63430008070033",
									".code": [
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "283A1E16"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "89A30271"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "A87C70FA"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1438,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 584,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 584,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 584,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 584,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 584,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 584,
											"end": 735,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 584,
											"end": 735,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 584,
											"end": 735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 685,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 647,
											"end": 657,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 658,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 633,
											"end": 667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 633,
											"end": 685,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 633,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 584,
											"end": 735,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 434,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 416,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 644,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 487,
											"end": 644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 587,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 587,
											"end": 637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 637,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 587,
											"end": 637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 582,
											"end": 585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 575,
											"end": 638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 644,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 768,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 755,
											"end": 760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 737,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 737,
											"end": 761,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 761,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 737,
											"end": 761,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 735,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 725,
											"end": 762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 768,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 768,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 916,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 903,
											"end": 921,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 895,
											"end": 921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 931,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 931,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 931,
											"end": 1015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 931,
											"end": 1015,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 931,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 774,
											"end": 1022,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1253,
											"end": 1270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1250,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1349,
											"end": 1351,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1281,
											"end": 1353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1281,
											"end": 1353,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1281,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1028,
											"end": 1360,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1447,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1447,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1484,
											"end": 1491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1513,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1543,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1669,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1681,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1681,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1764,
											"end": 1903,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1764,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1891,
											"end": 1896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1860,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1903,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1909,
											"end": 2035,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1909,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1992,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1992,
											"end": 2029,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1992,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1992,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 2029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 2029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2035,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2035,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 2035,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2154,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2041,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2148,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2148,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2154,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2283,
											"end": 2400,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2283,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2382,
											"end": 2394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2406,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2497,
											"end": 2502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2479,
											"end": 2503,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2503,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2479,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2477,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2504,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2459,
											"end": 2522,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2515,
											"end": 2516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2459,
											"end": 2522,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2459,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2528,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"USDC()": "89a30271",
							"airdroppedBal(address)": "a87c70fa",
							"startAirDrop()": "283a1e16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_btonAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RebaseAirdrop.sol\":\"testRebase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"RebaseAirdrop.sol\":{\"keccak256\":\"0xc6e7620e5e4d9c1c5e896e554dbad6a38550b8f226cc4ddb43e857f3b5301f93\",\"urls\":[\"bzz-raw://e2932ae83a2078493ca6b1febba62f090a2b6d34879dc03bfb649828c34b48b9\",\"dweb:/ipfs/QmWZA9cqiTfgJY4a13SHUqvAQEDCvcYzunG41QGEZ63Top\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> RebaseAirdrop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "RebaseAirdrop.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> RebaseAirdrop.sol:18:17:\n   |\n18 |     constructor(address _usdcAddr, address _btonAddr) {\n   |                 ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 470,
					"file": "RebaseAirdrop.sol",
					"start": 453
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> RebaseAirdrop.sol:18:36:\n   |\n18 |     constructor(address _usdcAddr, address _btonAddr) {\n   |                                    ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 489,
					"file": "RebaseAirdrop.sol",
					"start": 472
				},
				"type": "Warning"
			}
		],
		"sources": {
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "197:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 77,
									"src": "281:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:0"
									},
									"scope": 77,
									"src": "419:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "725:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 77,
									"src": "707:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1078:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:0"
									},
									"scope": 77,
									"src": "1059:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1863:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:0"
									},
									"scope": 77,
									"src": "1795:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2207:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:0"
									},
									"scope": 77,
									"src": "2176:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2478:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2487:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2509:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2529:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:0"
									},
									"src": "2472:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2709:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2718:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2741:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:0"
									},
									"src": "2703:78:0"
								}
							],
							"scope": 78,
							"src": "187:2596:0",
							"usedErrors": []
						}
					],
					"src": "91:2693:0"
				},
				"id": 0
			},
			"RebaseAirdrop.sol": {
				"ast": {
					"absolutePath": "RebaseAirdrop.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"testRebase": [
							209
						]
					},
					"id": 210,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 78,
							"src": "29:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "testRebase",
							"nameLocation": "64:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "testRebase.btonsLocked",
									"id": 85,
									"members": [
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "timeInit",
											"nameLocation": "301:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "293:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 81,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "293:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 84,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "330:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "322:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 83,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "322:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "btonsLocked",
									"nameLocation": "268:11:1",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "261:90:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87c70fa",
									"id": 90,
									"mutability": "mutable",
									"name": "airdroppedBal",
									"nameLocation": "396:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "357:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
										"typeString": "mapping(address => struct testRebase.btonsLocked)"
									},
									"typeName": {
										"id": 89,
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "365:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "357:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
											"typeString": "mapping(address => struct testRebase.btonsLocked)"
										},
										"valueType": {
											"id": 88,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 87,
												"name": "btonsLocked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "376:11:1"
											},
											"referencedDeclaration": 85,
											"src": "376:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_btonsLocked_$85_storage_ptr",
												"typeString": "struct testRebase.btonsLocked"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 93,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "430:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "416:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 92,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 91,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "416:6:1"
										},
										"referencedDeclaration": 77,
										"src": "416:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "491:80:1",
										"statements": [
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "502:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307844374143643261394644313539453639426231303241316361323143396133653341354637373142",
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "516:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "509:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "509:50:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "502:57:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "502:57:1"
											}
										]
									},
									"id": 107,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_usdcAddr",
												"nameLocation": "461:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "453:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_btonAddr",
												"nameLocation": "480:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "472:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "472:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:38:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "491:0:1"
									},
									"scope": 209,
									"src": "441:130:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "622:113:1",
										"statements": [
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 110,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "633:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 113,
															"indexExpression": {
																"expression": {
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "647:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "647:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "633:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeInit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "633:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 115,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "670:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "670:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "633:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "633:52:1"
											}
										]
									},
									"functionSelector": "283a1e16",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startAirDrop",
									"nameLocation": "593:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:0:1"
									},
									"scope": 209,
									"src": "584:151:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "775:307:1",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "deltaTimeFromInit",
														"nameLocation": "794:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "786:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "786:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"nodeType": "VariableDeclarationStatement",
												"src": "786:25:1"
											},
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"mutability": "mutable",
														"name": "epochs",
														"nameLocation": "830:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "822:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 128,
												"nodeType": "VariableDeclarationStatement",
												"src": "822:14:1"
											},
											{
												"assignments": [
													130
												],
												"declarations": [
													{
														"constant": false,
														"id": 130,
														"mutability": "mutable",
														"name": "airdropAmt",
														"nameLocation": "855:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 163,
														"src": "847:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "847:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 131,
												"nodeType": "VariableDeclarationStatement",
												"src": "847:18:1"
											},
											{
												"expression": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "deltaTimeFromInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "872:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 133,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "892:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "892:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 135,
																	"name": "airdroppedBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "910:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																		"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																	}
																},
																"id": 138,
																"indexExpression": {
																	"expression": {
																		"id": 136,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "924:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "924:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "910:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																	"typeString": "struct testRebase.btonsLocked storage ref"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timeInit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "910:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "892:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "872:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "872:72:1"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 143,
														"name": "epochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 144,
															"name": "deltaTimeFromInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "960:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313830",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "980:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"src": "960:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "951:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "951:32:1"
											},
											{
												"expression": {
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "997:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 150,
															"name": "epochs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1010:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1018:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1010:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "997:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "997:22:1"
											},
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 155,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "1026:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 158,
															"indexExpression": {
																"expression": {
																	"id": 156,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1040:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1040:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1026:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "1026:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1062:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1026:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1026:46:1"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAirdrop",
									"nameLocation": "752:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:2:1"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:0:1"
									},
									"scope": 209,
									"src": "743:339:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1124:307:1",
										"statements": [
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "deltaTimeFromInit",
														"nameLocation": "1143:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "1135:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 169,
												"nodeType": "VariableDeclarationStatement",
												"src": "1135:25:1"
											},
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"mutability": "mutable",
														"name": "epochs",
														"nameLocation": "1179:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "1171:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 172,
												"nodeType": "VariableDeclarationStatement",
												"src": "1171:14:1"
											},
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "airdropAmt",
														"nameLocation": "1204:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "1196:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 173,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1196:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"nodeType": "VariableDeclarationStatement",
												"src": "1196:18:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "deltaTimeFromInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1221:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 177,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1241:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1241:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 179,
																	"name": "airdroppedBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "1259:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																		"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																	}
																},
																"id": 182,
																"indexExpression": {
																	"expression": {
																		"id": 180,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1273:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1273:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1259:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																	"typeString": "struct testRebase.btonsLocked storage ref"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timeInit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "1259:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1241:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1221:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1221:72:1"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "epochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1300:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 188,
															"name": "deltaTimeFromInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "1309:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313830",
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1329:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"src": "1309:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1300:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "1300:32:1"
											},
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1346:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "epochs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1359:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1346:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "1346:22:1"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 199,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "1375:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 202,
															"indexExpression": {
																"expression": {
																	"id": 200,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1389:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1389:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1375:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "1375:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 204,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1411:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1375:46:1"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAirDrop",
									"nameLocation": "1097:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1112:2:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:1"
									},
									"scope": 209,
									"src": "1088:343:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 210,
							"src": "55:1383:1",
							"usedErrors": []
						}
					],
					"src": "2:1438:1"
				},
				"id": 1
			}
		}
	}
}