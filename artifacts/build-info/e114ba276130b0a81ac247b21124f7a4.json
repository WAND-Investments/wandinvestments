{
	"id": "e114ba276130b0a81ac247b21124f7a4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./IERC20Metadata.sol\";\nimport \"./Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    address private  approvedTransferor;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        \n    }\n\n    modifier onlyApproved {\n      require(msg.sender == approvedTransferor, \"Not Approved to do so\");\n      _;\n    }\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override onlyApproved returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n\n    function _setApprovedTokenTransferor(address account) internal  {\n        //require(account != address(0), \"ERC20: mint to the zero address\");\n\n        approvedTransferor = account;\n    }\n\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20.sol\":1367:12173  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"ERC20.sol\":1984:2106  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ERC20.sol\":2058:2063  name_ */\n  dup2\n    /* \"ERC20.sol\":2050:2055  _name */\n  0x03\n    /* \"ERC20.sol\":2050:2063  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"ERC20.sol\":2083:2090  symbol_ */\n  dup1\n    /* \"ERC20.sol\":2073:2080  _symbol */\n  0x04\n    /* \"ERC20.sol\":2073:2090  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"ERC20.sol\":1984:2106  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ERC20.sol\":1367:12173  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_33:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":531:653   */\ntag_35:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_38\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":933:1052   */\ntag_40:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1128:1245   */\ntag_43:\n    /* \"#utility.yul\":1269:1343   */\n  tag_46\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_48\n  tag_45\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1430:1547   */\ntag_47:\n    /* \"#utility.yul\":1571:1645   */\n  tag_49\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_27:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_53\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_52:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_26:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2022:2078   */\ntag_57:\n    /* \"#utility.yul\":2096:2125   */\n  tag_60\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_32:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_63:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_66:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_11:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_68:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2741:2825   */\ntag_69:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_54:\n    /* \"#utility.yul\":2920:2947   */\n  tag_73\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_61\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2993:3081   */\ntag_74:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_71:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_59:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_37:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_30:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_45:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_42:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_61:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":1367:12173  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20.sol\":1367:12173  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4399:4565  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5032:5523  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":5918:6130  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3541:3666  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":6617:7022  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3869:4054  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":4112:4261  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20.sol\":2342:2355  string memory */\n      0x60\n        /* \"ERC20.sol\":2374:2379  _name */\n      0x03\n        /* \"ERC20.sol\":2367:2379  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2288:2386  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":4399:4565  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"ERC20.sol\":4482:4486  bool */\n      0x00\n        /* \"ERC20.sol\":4498:4537  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"ERC20.sol\":4507:4519  _msgSender() */\n      tag_72\n        /* \"ERC20.sol\":4507:4517  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":4507:4519  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"ERC20.sol\":4521:4528  spender */\n      dup5\n        /* \"ERC20.sol\":4530:4536  amount */\n      dup5\n        /* \"ERC20.sol\":4498:4506  _approve */\n      tag_74\n        /* \"ERC20.sol\":4498:4537  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n        /* \"ERC20.sol\":4554:4558  true */\n      0x01\n        /* \"ERC20.sol\":4547:4558  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":4399:4565  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"ERC20.sol\":3437:3444  uint256 */\n      0x00\n        /* \"ERC20.sol\":3463:3475  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3456:3475  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":3376:3482  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5032:5523  function transferFrom(... */\n    tag_32:\n        /* \"ERC20.sol\":5181:5185  bool */\n      0x00\n        /* \"ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"ERC20.sol\":5197:5233  _transfer(sender, recipient, amount) */\n      tag_81\n        /* \"ERC20.sol\":5207:5213  sender */\n      dup5\n        /* \"ERC20.sol\":5215:5224  recipient */\n      dup5\n        /* \"ERC20.sol\":5226:5232  amount */\n      dup5\n        /* \"ERC20.sol\":5197:5206  _transfer */\n      tag_82\n        /* \"ERC20.sol\":5197:5233  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_81:\n        /* \"ERC20.sol\":5244:5268  uint256 currentAllowance */\n      0x00\n        /* \"ERC20.sol\":5271:5282  _allowances */\n      0x01\n        /* \"ERC20.sol\":5271:5290  _allowances[sender] */\n      0x00\n        /* \"ERC20.sol\":5283:5289  sender */\n      dup7\n        /* \"ERC20.sol\":5271:5290  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":5271:5304  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":5291:5303  _msgSender() */\n      tag_83\n        /* \"ERC20.sol\":5291:5301  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":5291:5303  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"ERC20.sol\":5271:5304  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":5244:5304  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"ERC20.sol\":5342:5348  amount */\n      dup3\n        /* \"ERC20.sol\":5322:5338  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":5322:5348  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":5314:5393  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"ERC20.sol\":5427:5484  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_87\n        /* \"ERC20.sol\":5436:5442  sender */\n      dup6\n        /* \"ERC20.sol\":5444:5456  _msgSender() */\n      tag_88\n        /* \"ERC20.sol\":5444:5454  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":5444:5456  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"ERC20.sol\":5477:5483  amount */\n      dup6\n        /* \"ERC20.sol\":5458:5474  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":5458:5483  currentAllowance - amount */\n      sub\n        /* \"ERC20.sol\":5427:5435  _approve */\n      tag_74\n        /* \"ERC20.sol\":5427:5484  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_87:\n        /* \"ERC20.sol\":5512:5516  true */\n      0x01\n        /* \"ERC20.sol\":5505:5516  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":5032:5523  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"ERC20.sol\":3283:3288  uint8 */\n      0x00\n        /* \"ERC20.sol\":3307:3309  18 */\n      0x12\n        /* \"ERC20.sol\":3300:3309  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":3225:3316  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":5918:6130  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"ERC20.sol\":6006:6010  bool */\n      0x00\n        /* \"ERC20.sol\":6022:6102  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_91\n        /* \"ERC20.sol\":6031:6043  _msgSender() */\n      tag_92\n        /* \"ERC20.sol\":6031:6041  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":6031:6043  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"ERC20.sol\":6045:6052  spender */\n      dup5\n        /* \"ERC20.sol\":6091:6101  addedValue */\n      dup5\n        /* \"ERC20.sol\":6054:6065  _allowances */\n      0x01\n        /* \"ERC20.sol\":6054:6079  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6066:6078  _msgSender() */\n      tag_93\n        /* \"ERC20.sol\":6066:6076  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":6066:6078  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"ERC20.sol\":6054:6079  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6054:6088  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":6080:6087  spender */\n      dup9\n        /* \"ERC20.sol\":6054:6088  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6054:6101  _allowances[_msgSender()][spender] + addedValue */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"ERC20.sol\":6022:6030  _approve */\n      tag_74\n        /* \"ERC20.sol\":6022:6102  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_91:\n        /* \"ERC20.sol\":6119:6123  true */\n      0x01\n        /* \"ERC20.sol\":6112:6123  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":5918:6130  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3541:3666  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"ERC20.sol\":3615:3622  uint256 */\n      0x00\n        /* \"ERC20.sol\":3641:3650  _balances */\n      dup1\n        /* \"ERC20.sol\":3641:3659  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3651:3658  account */\n      dup4\n        /* \"ERC20.sol\":3641:3659  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3634:3659  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3541:3666  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20.sol\":2555:2568  string memory */\n      0x60\n        /* \"ERC20.sol\":2587:2594  _symbol */\n      0x04\n        /* \"ERC20.sol\":2580:2594  return _symbol */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_65\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_65\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2499:2601  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":6617:7022  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"ERC20.sol\":6710:6714  bool */\n      0x00\n        /* \"ERC20.sol\":6726:6750  uint256 currentAllowance */\n      dup1\n        /* \"ERC20.sol\":6753:6764  _allowances */\n      0x01\n        /* \"ERC20.sol\":6753:6778  _allowances[_msgSender()] */\n      0x00\n        /* \"ERC20.sol\":6765:6777  _msgSender() */\n      tag_104\n        /* \"ERC20.sol\":6765:6775  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":6765:6777  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"ERC20.sol\":6753:6778  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6753:6787  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"ERC20.sol\":6779:6786  spender */\n      dup6\n        /* \"ERC20.sol\":6753:6787  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6726:6787  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":6825:6840  subtractedValue */\n      dup3\n        /* \"ERC20.sol\":6805:6821  currentAllowance */\n      dup2\n        /* \"ERC20.sol\":6805:6840  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"ERC20.sol\":6797:6882  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"ERC20.sol\":6916:6983  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_108\n        /* \"ERC20.sol\":6925:6937  _msgSender() */\n      tag_109\n        /* \"ERC20.sol\":6925:6935  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":6925:6937  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"ERC20.sol\":6939:6946  spender */\n      dup6\n        /* \"ERC20.sol\":6967:6982  subtractedValue */\n      dup6\n        /* \"ERC20.sol\":6948:6964  currentAllowance */\n      dup5\n        /* \"ERC20.sol\":6948:6982  currentAllowance - subtractedValue */\n      sub\n        /* \"ERC20.sol\":6916:6924  _approve */\n      tag_74\n        /* \"ERC20.sol\":6916:6983  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_108:\n        /* \"ERC20.sol\":7011:7015  true */\n      0x01\n        /* \"ERC20.sol\":7004:7015  return true */\n      swap2\n      pop\n      pop\n        /* \"ERC20.sol\":6617:7022  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3869:4054  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n    tag_56:\n        /* \"ERC20.sol\":3968:3972  bool */\n      0x00\n        /* \"ERC20.sol\":2164:2182  approvedTransferor */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":2150:2160  msg.sender */\n      caller\n        /* \"ERC20.sol\":2150:2182  msg.sender == approvedTransferor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ERC20.sol\":2142:2208  require(msg.sender == approvedTransferor, \"Not Approved to do so\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_79\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"ERC20.sol\":3984:4026  _transfer(_msgSender(), recipient, amount) */\n      tag_114\n        /* \"ERC20.sol\":3994:4006  _msgSender() */\n      tag_115\n        /* \"ERC20.sol\":3994:4004  _msgSender */\n      tag_73\n        /* \"ERC20.sol\":3994:4006  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"ERC20.sol\":4008:4017  recipient */\n      dup5\n        /* \"ERC20.sol\":4019:4025  amount */\n      dup5\n        /* \"ERC20.sol\":3984:3993  _transfer */\n      tag_82\n        /* \"ERC20.sol\":3984:4026  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_114:\n        /* \"ERC20.sol\":4043:4047  true */\n      0x01\n        /* \"ERC20.sol\":4036:4047  return true */\n      swap1\n      pop\n        /* \"ERC20.sol\":3869:4054  function transfer(address recipient, uint256 amount) public virtual override onlyApproved returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":4112:4261  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"ERC20.sol\":4201:4208  uint256 */\n      0x00\n        /* \"ERC20.sol\":4227:4238  _allowances */\n      0x01\n        /* \"ERC20.sol\":4227:4245  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":4239:4244  owner */\n      dup5\n        /* \"ERC20.sol\":4227:4245  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":4227:4254  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":4246:4253  spender */\n      dup4\n        /* \"ERC20.sol\":4227:4254  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":4220:4254  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":4112:4261  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":10193:10563  function _approve(... */\n    tag_74:\n        /* \"ERC20.sol\":10341:10342  0 */\n      0x00\n        /* \"ERC20.sol\":10324:10343  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10324:10329  owner */\n      dup4\n        /* \"ERC20.sol\":10324:10343  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":10316:10384  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"ERC20.sol\":10421:10422  0 */\n      0x00\n        /* \"ERC20.sol\":10402:10423  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10402:10409  spender */\n      dup3\n        /* \"ERC20.sol\":10402:10423  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":10394:10462  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"ERC20.sol\":10503:10509  amount */\n      dup1\n        /* \"ERC20.sol\":10473:10484  _allowances */\n      0x01\n        /* \"ERC20.sol\":10473:10491  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":10485:10490  owner */\n      dup6\n        /* \"ERC20.sol\":10473:10491  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10473:10500  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":10492:10499  spender */\n      dup5\n        /* \"ERC20.sol\":10473:10500  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10473:10509  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":10540:10547  spender */\n      dup2\n        /* \"ERC20.sol\":10524:10556  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10533:10538  owner */\n      dup4\n        /* \"ERC20.sol\":10524:10556  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":10549:10555  amount */\n      dup4\n        /* \"ERC20.sol\":10524:10556  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10193:10563  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7496:8209  function _transfer(... */\n    tag_82:\n        /* \"ERC20.sol\":7649:7650  0 */\n      0x00\n        /* \"ERC20.sol\":7631:7651  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7631:7637  sender */\n      dup4\n        /* \"ERC20.sol\":7631:7651  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7623:7693  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"ERC20.sol\":7732:7733  0 */\n      0x00\n        /* \"ERC20.sol\":7711:7734  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7711:7720  recipient */\n      dup3\n        /* \"ERC20.sol\":7711:7734  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ERC20.sol\":7703:7774  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"ERC20.sol\":7785:7832  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_133\n        /* \"ERC20.sol\":7806:7812  sender */\n      dup4\n        /* \"ERC20.sol\":7814:7823  recipient */\n      dup4\n        /* \"ERC20.sol\":7825:7831  amount */\n      dup4\n        /* \"ERC20.sol\":7785:7805  _beforeTokenTransfer */\n      tag_134\n        /* \"ERC20.sol\":7785:7832  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"ERC20.sol\":7843:7864  uint256 senderBalance */\n      0x00\n        /* \"ERC20.sol\":7867:7876  _balances */\n      dup1\n        /* \"ERC20.sol\":7867:7884  _balances[sender] */\n      0x00\n        /* \"ERC20.sol\":7877:7883  sender */\n      dup6\n        /* \"ERC20.sol\":7867:7884  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":7843:7884  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":7919:7925  amount */\n      dup2\n        /* \"ERC20.sol\":7902:7915  senderBalance */\n      dup2\n        /* \"ERC20.sol\":7902:7925  senderBalance >= amount */\n      lt\n      iszero\n        /* \"ERC20.sol\":7894:7968  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"ERC20.sol\":8038:8044  amount */\n      dup2\n        /* \"ERC20.sol\":8022:8035  senderBalance */\n      dup2\n        /* \"ERC20.sol\":8022:8044  senderBalance - amount */\n      sub\n        /* \"ERC20.sol\":8002:8011  _balances */\n      0x00\n        /* \"ERC20.sol\":8002:8019  _balances[sender] */\n      dup1\n        /* \"ERC20.sol\":8012:8018  sender */\n      dup7\n        /* \"ERC20.sol\":8002:8019  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":8002:8044  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8088:8094  amount */\n      dup2\n        /* \"ERC20.sol\":8064:8073  _balances */\n      0x00\n        /* \"ERC20.sol\":8064:8084  _balances[recipient] */\n      dup1\n        /* \"ERC20.sol\":8074:8083  recipient */\n      dup6\n        /* \"ERC20.sol\":8064:8084  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":8064:8094  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":8127:8136  recipient */\n      dup3\n        /* \"ERC20.sol\":8110:8145  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":8119:8125  sender */\n      dup5\n        /* \"ERC20.sol\":8110:8145  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":8138:8144  amount */\n      dup5\n        /* \"ERC20.sol\":8110:8145  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":8156:8202  _afterTokenTransfer(sender, recipient, amount) */\n      tag_140\n        /* \"ERC20.sol\":8176:8182  sender */\n      dup5\n        /* \"ERC20.sol\":8184:8193  recipient */\n      dup5\n        /* \"ERC20.sol\":8195:8201  amount */\n      dup5\n        /* \"ERC20.sol\":8156:8175  _afterTokenTransfer */\n      tag_141\n        /* \"ERC20.sol\":8156:8202  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_140:\n        /* \"ERC20.sol\":7613:8209  {... */\n      pop\n        /* \"ERC20.sol\":7496:8209  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11147:11268  function _beforeTokenTransfer(... */\n    tag_134:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":11856:11976  function _afterTokenTransfer(... */\n    tag_141:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_145:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_147\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_149:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_151\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":373:492   */\n    tag_154:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_157\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_145\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_60:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_160\n      tag_156\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":725:844   */\n    tag_159:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_161\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_145\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_162\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_145\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_31:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_165\n      tag_156\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1222:1341   */\n    tag_164:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_166\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_145\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_167\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_145\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_168\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_149\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_21:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_171\n      tag_156\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1830:1949   */\n    tag_170:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_172\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_145\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_173\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_149\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_174:\n        /* \"#utility.yul\":2298:2319   */\n      tag_176\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_178:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_180\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2503:2574   */\n      tag_182\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_184\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2660:2689   */\n      tag_186\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_188:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_190\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_183\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_191\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_193:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_195\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_183\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_196\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_198:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_200\n        /* \"#utility.yul\":3673:3675   */\n      0x15\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_183\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_201\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_203:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_205\n        /* \"#utility.yul\":4045:4047   */\n      0x26\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_183\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_206\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_208:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_210\n        /* \"#utility.yul\":4417:4419   */\n      0x28\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_183\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_211\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_213:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_215\n        /* \"#utility.yul\":4789:4791   */\n      0x25\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_183\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_216\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_218:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_220\n        /* \"#utility.yul\":5161:5163   */\n      0x24\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_183\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_221\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5672   */\n    tag_223:\n        /* \"#utility.yul\":5448:5451   */\n      0x00\n        /* \"#utility.yul\":5469:5536   */\n      tag_225\n        /* \"#utility.yul\":5533:5535   */\n      0x25\n        /* \"#utility.yul\":5528:5531   */\n      dup4\n        /* \"#utility.yul\":5469:5536   */\n      tag_183\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5462:5536   */\n      swap2\n      pop\n        /* \"#utility.yul\":5545:5638   */\n      tag_226\n        /* \"#utility.yul\":5634:5637   */\n      dup3\n        /* \"#utility.yul\":5545:5638   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5663:5665   */\n      0x40\n        /* \"#utility.yul\":5658:5661   */\n      dup3\n        /* \"#utility.yul\":5654:5666   */\n      add\n        /* \"#utility.yul\":5647:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5306:5672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:5796   */\n    tag_228:\n        /* \"#utility.yul\":5765:5789   */\n      tag_230\n        /* \"#utility.yul\":5783:5788   */\n      dup2\n        /* \"#utility.yul\":5765:5789   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5760:5763   */\n      dup3\n        /* \"#utility.yul\":5753:5790   */\n      mstore\n        /* \"#utility.yul\":5678:5796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5802:5914   */\n    tag_232:\n        /* \"#utility.yul\":5885:5907   */\n      tag_234\n        /* \"#utility.yul\":5901:5906   */\n      dup2\n        /* \"#utility.yul\":5885:5907   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5880:5883   */\n      dup3\n        /* \"#utility.yul\":5873:5908   */\n      mstore\n        /* \"#utility.yul\":5802:5914   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5920:6130   */\n    tag_24:\n        /* \"#utility.yul\":6007:6011   */\n      0x00\n        /* \"#utility.yul\":6045:6047   */\n      0x20\n        /* \"#utility.yul\":6034:6043   */\n      dup3\n        /* \"#utility.yul\":6030:6048   */\n      add\n        /* \"#utility.yul\":6022:6048   */\n      swap1\n      pop\n        /* \"#utility.yul\":6058:6123   */\n      tag_237\n        /* \"#utility.yul\":6120:6121   */\n      0x00\n        /* \"#utility.yul\":6109:6118   */\n      dup4\n        /* \"#utility.yul\":6105:6122   */\n      add\n        /* \"#utility.yul\":6096:6102   */\n      dup5\n        /* \"#utility.yul\":6058:6123   */\n      tag_174\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5920:6130   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6136:6449   */\n    tag_18:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6345   */\n      dup2\n        /* \"#utility.yul\":6330:6334   */\n      dup2\n        /* \"#utility.yul\":6326:6346   */\n      sub\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup4\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6300:6347   */\n      mstore\n        /* \"#utility.yul\":6364:6442   */\n      tag_239\n        /* \"#utility.yul\":6437:6441   */\n      dup2\n        /* \"#utility.yul\":6428:6434   */\n      dup5\n        /* \"#utility.yul\":6364:6442   */\n      tag_178\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6356:6442   */\n      swap1\n      pop\n        /* \"#utility.yul\":6136:6449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6455:6874   */\n    tag_132:\n        /* \"#utility.yul\":6621:6625   */\n      0x00\n        /* \"#utility.yul\":6659:6661   */\n      0x20\n        /* \"#utility.yul\":6648:6657   */\n      dup3\n        /* \"#utility.yul\":6644:6662   */\n      add\n        /* \"#utility.yul\":6636:6662   */\n      swap1\n      pop\n        /* \"#utility.yul\":6708:6717   */\n      dup2\n        /* \"#utility.yul\":6702:6706   */\n      dup2\n        /* \"#utility.yul\":6698:6718   */\n      sub\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6683:6692   */\n      dup4\n        /* \"#utility.yul\":6679:6696   */\n      add\n        /* \"#utility.yul\":6672:6719   */\n      mstore\n        /* \"#utility.yul\":6736:6867   */\n      tag_241\n        /* \"#utility.yul\":6862:6866   */\n      dup2\n        /* \"#utility.yul\":6736:6867   */\n      tag_188\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6728:6867   */\n      swap1\n      pop\n        /* \"#utility.yul\":6455:6874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6880:7299   */\n    tag_124:\n        /* \"#utility.yul\":7046:7050   */\n      0x00\n        /* \"#utility.yul\":7084:7086   */\n      0x20\n        /* \"#utility.yul\":7073:7082   */\n      dup3\n        /* \"#utility.yul\":7069:7087   */\n      add\n        /* \"#utility.yul\":7061:7087   */\n      swap1\n      pop\n        /* \"#utility.yul\":7133:7142   */\n      dup2\n        /* \"#utility.yul\":7127:7131   */\n      dup2\n        /* \"#utility.yul\":7123:7143   */\n      sub\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7108:7117   */\n      dup4\n        /* \"#utility.yul\":7104:7121   */\n      add\n        /* \"#utility.yul\":7097:7144   */\n      mstore\n        /* \"#utility.yul\":7161:7292   */\n      tag_243\n        /* \"#utility.yul\":7287:7291   */\n      dup2\n        /* \"#utility.yul\":7161:7292   */\n      tag_193\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7153:7292   */\n      swap1\n      pop\n        /* \"#utility.yul\":6880:7299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7724   */\n    tag_79:\n        /* \"#utility.yul\":7471:7475   */\n      0x00\n        /* \"#utility.yul\":7509:7511   */\n      0x20\n        /* \"#utility.yul\":7498:7507   */\n      dup3\n        /* \"#utility.yul\":7494:7512   */\n      add\n        /* \"#utility.yul\":7486:7512   */\n      swap1\n      pop\n        /* \"#utility.yul\":7558:7567   */\n      dup2\n        /* \"#utility.yul\":7552:7556   */\n      dup2\n        /* \"#utility.yul\":7548:7568   */\n      sub\n        /* \"#utility.yul\":7544:7545   */\n      0x00\n        /* \"#utility.yul\":7533:7542   */\n      dup4\n        /* \"#utility.yul\":7529:7546   */\n      add\n        /* \"#utility.yul\":7522:7569   */\n      mstore\n        /* \"#utility.yul\":7586:7717   */\n      tag_245\n        /* \"#utility.yul\":7712:7716   */\n      dup2\n        /* \"#utility.yul\":7586:7717   */\n      tag_198\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7578:7717   */\n      swap1\n      pop\n        /* \"#utility.yul\":7305:7724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7730:8149   */\n    tag_137:\n        /* \"#utility.yul\":7896:7900   */\n      0x00\n        /* \"#utility.yul\":7934:7936   */\n      0x20\n        /* \"#utility.yul\":7923:7932   */\n      dup3\n        /* \"#utility.yul\":7919:7937   */\n      add\n        /* \"#utility.yul\":7911:7937   */\n      swap1\n      pop\n        /* \"#utility.yul\":7983:7992   */\n      dup2\n        /* \"#utility.yul\":7977:7981   */\n      dup2\n        /* \"#utility.yul\":7973:7993   */\n      sub\n        /* \"#utility.yul\":7969:7970   */\n      0x00\n        /* \"#utility.yul\":7958:7967   */\n      dup4\n        /* \"#utility.yul\":7954:7971   */\n      add\n        /* \"#utility.yul\":7947:7994   */\n      mstore\n        /* \"#utility.yul\":8011:8142   */\n      tag_247\n        /* \"#utility.yul\":8137:8141   */\n      dup2\n        /* \"#utility.yul\":8011:8142   */\n      tag_203\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8003:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7730:8149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8574   */\n    tag_86:\n        /* \"#utility.yul\":8321:8325   */\n      0x00\n        /* \"#utility.yul\":8359:8361   */\n      0x20\n        /* \"#utility.yul\":8348:8357   */\n      dup3\n        /* \"#utility.yul\":8344:8362   */\n      add\n        /* \"#utility.yul\":8336:8362   */\n      swap1\n      pop\n        /* \"#utility.yul\":8408:8417   */\n      dup2\n        /* \"#utility.yul\":8402:8406   */\n      dup2\n        /* \"#utility.yul\":8398:8418   */\n      sub\n        /* \"#utility.yul\":8394:8395   */\n      0x00\n        /* \"#utility.yul\":8383:8392   */\n      dup4\n        /* \"#utility.yul\":8379:8396   */\n      add\n        /* \"#utility.yul\":8372:8419   */\n      mstore\n        /* \"#utility.yul\":8436:8567   */\n      tag_249\n        /* \"#utility.yul\":8562:8566   */\n      dup2\n        /* \"#utility.yul\":8436:8567   */\n      tag_208\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8428:8567   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8580:8999   */\n    tag_129:\n        /* \"#utility.yul\":8746:8750   */\n      0x00\n        /* \"#utility.yul\":8784:8786   */\n      0x20\n        /* \"#utility.yul\":8773:8782   */\n      dup3\n        /* \"#utility.yul\":8769:8787   */\n      add\n        /* \"#utility.yul\":8761:8787   */\n      swap1\n      pop\n        /* \"#utility.yul\":8833:8842   */\n      dup2\n        /* \"#utility.yul\":8827:8831   */\n      dup2\n        /* \"#utility.yul\":8823:8843   */\n      sub\n        /* \"#utility.yul\":8819:8820   */\n      0x00\n        /* \"#utility.yul\":8808:8817   */\n      dup4\n        /* \"#utility.yul\":8804:8821   */\n      add\n        /* \"#utility.yul\":8797:8844   */\n      mstore\n        /* \"#utility.yul\":8861:8992   */\n      tag_251\n        /* \"#utility.yul\":8987:8991   */\n      dup2\n        /* \"#utility.yul\":8861:8992   */\n      tag_213\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8853:8992   */\n      swap1\n      pop\n        /* \"#utility.yul\":8580:8999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9005:9424   */\n    tag_121:\n        /* \"#utility.yul\":9171:9175   */\n      0x00\n        /* \"#utility.yul\":9209:9211   */\n      0x20\n        /* \"#utility.yul\":9198:9207   */\n      dup3\n        /* \"#utility.yul\":9194:9212   */\n      add\n        /* \"#utility.yul\":9186:9212   */\n      swap1\n      pop\n        /* \"#utility.yul\":9258:9267   */\n      dup2\n        /* \"#utility.yul\":9252:9256   */\n      dup2\n        /* \"#utility.yul\":9248:9268   */\n      sub\n        /* \"#utility.yul\":9244:9245   */\n      0x00\n        /* \"#utility.yul\":9233:9242   */\n      dup4\n        /* \"#utility.yul\":9229:9246   */\n      add\n        /* \"#utility.yul\":9222:9269   */\n      mstore\n        /* \"#utility.yul\":9286:9417   */\n      tag_253\n        /* \"#utility.yul\":9412:9416   */\n      dup2\n        /* \"#utility.yul\":9286:9417   */\n      tag_218\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9278:9417   */\n      swap1\n      pop\n        /* \"#utility.yul\":9005:9424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9430:9849   */\n    tag_107:\n        /* \"#utility.yul\":9596:9600   */\n      0x00\n        /* \"#utility.yul\":9634:9636   */\n      0x20\n        /* \"#utility.yul\":9623:9632   */\n      dup3\n        /* \"#utility.yul\":9619:9637   */\n      add\n        /* \"#utility.yul\":9611:9637   */\n      swap1\n      pop\n        /* \"#utility.yul\":9683:9692   */\n      dup2\n        /* \"#utility.yul\":9677:9681   */\n      dup2\n        /* \"#utility.yul\":9673:9693   */\n      sub\n        /* \"#utility.yul\":9669:9670   */\n      0x00\n        /* \"#utility.yul\":9658:9667   */\n      dup4\n        /* \"#utility.yul\":9654:9671   */\n      add\n        /* \"#utility.yul\":9647:9694   */\n      mstore\n        /* \"#utility.yul\":9711:9842   */\n      tag_255\n        /* \"#utility.yul\":9837:9841   */\n      dup2\n        /* \"#utility.yul\":9711:9842   */\n      tag_223\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9703:9842   */\n      swap1\n      pop\n        /* \"#utility.yul\":9430:9849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9855:10077   */\n    tag_28:\n        /* \"#utility.yul\":9948:9952   */\n      0x00\n        /* \"#utility.yul\":9986:9988   */\n      0x20\n        /* \"#utility.yul\":9975:9984   */\n      dup3\n        /* \"#utility.yul\":9971:9989   */\n      add\n        /* \"#utility.yul\":9963:9989   */\n      swap1\n      pop\n        /* \"#utility.yul\":9999:10070   */\n      tag_257\n        /* \"#utility.yul\":10067:10068   */\n      0x00\n        /* \"#utility.yul\":10056:10065   */\n      dup4\n        /* \"#utility.yul\":10052:10069   */\n      add\n        /* \"#utility.yul\":10043:10049   */\n      dup5\n        /* \"#utility.yul\":9999:10070   */\n      tag_228\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9855:10077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10083:10297   */\n    tag_37:\n        /* \"#utility.yul\":10172:10176   */\n      0x00\n        /* \"#utility.yul\":10210:10212   */\n      0x20\n        /* \"#utility.yul\":10199:10208   */\n      dup3\n        /* \"#utility.yul\":10195:10213   */\n      add\n        /* \"#utility.yul\":10187:10213   */\n      swap1\n      pop\n        /* \"#utility.yul\":10223:10290   */\n      tag_259\n        /* \"#utility.yul\":10287:10288   */\n      0x00\n        /* \"#utility.yul\":10276:10285   */\n      dup4\n        /* \"#utility.yul\":10272:10289   */\n      add\n        /* \"#utility.yul\":10263:10269   */\n      dup5\n        /* \"#utility.yul\":10223:10290   */\n      tag_232\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10083:10297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10384:10483   */\n    tag_181:\n        /* \"#utility.yul\":10436:10442   */\n      0x00\n        /* \"#utility.yul\":10470:10475   */\n      dup2\n        /* \"#utility.yul\":10464:10476   */\n      mload\n        /* \"#utility.yul\":10454:10476   */\n      swap1\n      pop\n        /* \"#utility.yul\":10384:10483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10489:10658   */\n    tag_183:\n        /* \"#utility.yul\":10573:10584   */\n      0x00\n        /* \"#utility.yul\":10607:10613   */\n      dup3\n        /* \"#utility.yul\":10602:10605   */\n      dup3\n        /* \"#utility.yul\":10595:10614   */\n      mstore\n        /* \"#utility.yul\":10647:10651   */\n      0x20\n        /* \"#utility.yul\":10642:10645   */\n      dup3\n        /* \"#utility.yul\":10638:10652   */\n      add\n        /* \"#utility.yul\":10623:10652   */\n      swap1\n      pop\n        /* \"#utility.yul\":10489:10658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10664:10969   */\n    tag_95:\n        /* \"#utility.yul\":10704:10707   */\n      0x00\n        /* \"#utility.yul\":10723:10743   */\n      tag_265\n        /* \"#utility.yul\":10741:10742   */\n      dup3\n        /* \"#utility.yul\":10723:10743   */\n      tag_231\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10718:10743   */\n      swap2\n      pop\n        /* \"#utility.yul\":10757:10777   */\n      tag_266\n        /* \"#utility.yul\":10775:10776   */\n      dup4\n        /* \"#utility.yul\":10757:10777   */\n      tag_231\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10752:10777   */\n      swap3\n      pop\n        /* \"#utility.yul\":10911:10912   */\n      dup3\n        /* \"#utility.yul\":10843:10909   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10839:10913   */\n      sub\n        /* \"#utility.yul\":10836:10837   */\n      dup3\n        /* \"#utility.yul\":10833:10914   */\n      gt\n        /* \"#utility.yul\":10830:10937   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":10917:10935   */\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10830:10937   */\n    tag_267:\n        /* \"#utility.yul\":10961:10962   */\n      dup3\n        /* \"#utility.yul\":10958:10959   */\n      dup3\n        /* \"#utility.yul\":10954:10963   */\n      add\n        /* \"#utility.yul\":10947:10963   */\n      swap1\n      pop\n        /* \"#utility.yul\":10664:10969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10975:11071   */\n    tag_270:\n        /* \"#utility.yul\":11012:11019   */\n      0x00\n        /* \"#utility.yul\":11041:11065   */\n      tag_272\n        /* \"#utility.yul\":11059:11064   */\n      dup3\n        /* \"#utility.yul\":11041:11065   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11030:11065   */\n      swap1\n      pop\n        /* \"#utility.yul\":10975:11071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11077:11167   */\n    tag_177:\n        /* \"#utility.yul\":11111:11118   */\n      0x00\n        /* \"#utility.yul\":11154:11159   */\n      dup2\n        /* \"#utility.yul\":11147:11160   */\n      iszero\n        /* \"#utility.yul\":11140:11161   */\n      iszero\n        /* \"#utility.yul\":11129:11161   */\n      swap1\n      pop\n        /* \"#utility.yul\":11077:11167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11173:11299   */\n    tag_273:\n        /* \"#utility.yul\":11210:11217   */\n      0x00\n        /* \"#utility.yul\":11250:11292   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11243:11248   */\n      dup3\n        /* \"#utility.yul\":11239:11293   */\n      and\n        /* \"#utility.yul\":11228:11293   */\n      swap1\n      pop\n        /* \"#utility.yul\":11173:11299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11305:11382   */\n    tag_231:\n        /* \"#utility.yul\":11342:11349   */\n      0x00\n        /* \"#utility.yul\":11371:11376   */\n      dup2\n        /* \"#utility.yul\":11360:11376   */\n      swap1\n      pop\n        /* \"#utility.yul\":11305:11382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11474   */\n    tag_235:\n        /* \"#utility.yul\":11423:11430   */\n      0x00\n        /* \"#utility.yul\":11463:11467   */\n      0xff\n        /* \"#utility.yul\":11456:11461   */\n      dup3\n        /* \"#utility.yul\":11452:11468   */\n      and\n        /* \"#utility.yul\":11441:11468   */\n      swap1\n      pop\n        /* \"#utility.yul\":11388:11474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11787   */\n    tag_185:\n        /* \"#utility.yul\":11548:11549   */\n      0x00\n        /* \"#utility.yul\":11558:11671   */\n    tag_279:\n        /* \"#utility.yul\":11572:11578   */\n      dup4\n        /* \"#utility.yul\":11569:11570   */\n      dup2\n        /* \"#utility.yul\":11566:11579   */\n      lt\n        /* \"#utility.yul\":11558:11671   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":11657:11658   */\n      dup1\n        /* \"#utility.yul\":11652:11655   */\n      dup3\n        /* \"#utility.yul\":11648:11659   */\n      add\n        /* \"#utility.yul\":11642:11660   */\n      mload\n        /* \"#utility.yul\":11638:11639   */\n      dup2\n        /* \"#utility.yul\":11633:11636   */\n      dup5\n        /* \"#utility.yul\":11629:11640   */\n      add\n        /* \"#utility.yul\":11622:11661   */\n      mstore\n        /* \"#utility.yul\":11594:11596   */\n      0x20\n        /* \"#utility.yul\":11591:11592   */\n      dup2\n        /* \"#utility.yul\":11587:11597   */\n      add\n        /* \"#utility.yul\":11582:11597   */\n      swap1\n      pop\n        /* \"#utility.yul\":11558:11671   */\n      jump(tag_279)\n    tag_281:\n        /* \"#utility.yul\":11689:11695   */\n      dup4\n        /* \"#utility.yul\":11686:11687   */\n      dup2\n        /* \"#utility.yul\":11683:11696   */\n      gt\n        /* \"#utility.yul\":11680:11781   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":11769:11770   */\n      0x00\n        /* \"#utility.yul\":11760:11766   */\n      dup5\n        /* \"#utility.yul\":11755:11758   */\n      dup5\n        /* \"#utility.yul\":11751:11767   */\n      add\n        /* \"#utility.yul\":11744:11771   */\n      mstore\n        /* \"#utility.yul\":11680:11781   */\n    tag_282:\n        /* \"#utility.yul\":11529:11787   */\n      pop\n        /* \"#utility.yul\":11480:11787   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11793:12113   */\n    tag_65:\n        /* \"#utility.yul\":11837:11843   */\n      0x00\n        /* \"#utility.yul\":11874:11875   */\n      0x02\n        /* \"#utility.yul\":11868:11872   */\n      dup3\n        /* \"#utility.yul\":11864:11876   */\n      div\n        /* \"#utility.yul\":11854:11876   */\n      swap1\n      pop\n        /* \"#utility.yul\":11921:11922   */\n      0x01\n        /* \"#utility.yul\":11915:11919   */\n      dup3\n        /* \"#utility.yul\":11911:11923   */\n      and\n        /* \"#utility.yul\":11942:11960   */\n      dup1\n        /* \"#utility.yul\":11932:12013   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":11998:12002   */\n      0x7f\n        /* \"#utility.yul\":11990:11996   */\n      dup3\n        /* \"#utility.yul\":11986:12003   */\n      and\n        /* \"#utility.yul\":11976:12003   */\n      swap2\n      pop\n        /* \"#utility.yul\":11932:12013   */\n    tag_284:\n        /* \"#utility.yul\":12060:12062   */\n      0x20\n        /* \"#utility.yul\":12052:12058   */\n      dup3\n        /* \"#utility.yul\":12049:12063   */\n      lt\n        /* \"#utility.yul\":12029:12047   */\n      dup2\n        /* \"#utility.yul\":12026:12064   */\n      eq\n        /* \"#utility.yul\":12023:12107   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":12079:12097   */\n      tag_286\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":12023:12107   */\n    tag_285:\n        /* \"#utility.yul\":11844:12113   */\n      pop\n        /* \"#utility.yul\":11793:12113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12119:12299   */\n    tag_269:\n        /* \"#utility.yul\":12167:12244   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12164:12165   */\n      0x00\n        /* \"#utility.yul\":12157:12245   */\n      mstore\n        /* \"#utility.yul\":12264:12268   */\n      0x11\n        /* \"#utility.yul\":12261:12262   */\n      0x04\n        /* \"#utility.yul\":12254:12269   */\n      mstore\n        /* \"#utility.yul\":12288:12292   */\n      0x24\n        /* \"#utility.yul\":12285:12286   */\n      0x00\n        /* \"#utility.yul\":12278:12293   */\n      revert\n        /* \"#utility.yul\":12305:12485   */\n    tag_287:\n        /* \"#utility.yul\":12353:12430   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12350:12351   */\n      0x00\n        /* \"#utility.yul\":12343:12431   */\n      mstore\n        /* \"#utility.yul\":12450:12454   */\n      0x22\n        /* \"#utility.yul\":12447:12448   */\n      0x04\n        /* \"#utility.yul\":12440:12455   */\n      mstore\n        /* \"#utility.yul\":12474:12478   */\n      0x24\n        /* \"#utility.yul\":12471:12472   */\n      0x00\n        /* \"#utility.yul\":12464:12479   */\n      revert\n        /* \"#utility.yul\":12614:12731   */\n    tag_156:\n        /* \"#utility.yul\":12723:12724   */\n      0x00\n        /* \"#utility.yul\":12720:12721   */\n      dup1\n        /* \"#utility.yul\":12713:12725   */\n      revert\n        /* \"#utility.yul\":12737:12839   */\n    tag_187:\n        /* \"#utility.yul\":12778:12784   */\n      0x00\n        /* \"#utility.yul\":12829:12831   */\n      0x1f\n        /* \"#utility.yul\":12825:12832   */\n      not\n        /* \"#utility.yul\":12820:12822   */\n      0x1f\n        /* \"#utility.yul\":12813:12818   */\n      dup4\n        /* \"#utility.yul\":12809:12823   */\n      add\n        /* \"#utility.yul\":12805:12833   */\n      and\n        /* \"#utility.yul\":12795:12833   */\n      swap1\n      pop\n        /* \"#utility.yul\":12737:12839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12845:13067   */\n    tag_192:\n        /* \"#utility.yul\":12985:13019   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12981:12982   */\n      0x00\n        /* \"#utility.yul\":12973:12979   */\n      dup3\n        /* \"#utility.yul\":12969:12983   */\n      add\n        /* \"#utility.yul\":12962:13020   */\n      mstore\n        /* \"#utility.yul\":13054:13059   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13049:13051   */\n      0x20\n        /* \"#utility.yul\":13041:13047   */\n      dup3\n        /* \"#utility.yul\":13037:13052   */\n      add\n        /* \"#utility.yul\":13030:13060   */\n      mstore\n        /* \"#utility.yul\":12845:13067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13073:13294   */\n    tag_197:\n        /* \"#utility.yul\":13213:13247   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":13209:13210   */\n      0x00\n        /* \"#utility.yul\":13201:13207   */\n      dup3\n        /* \"#utility.yul\":13197:13211   */\n      add\n        /* \"#utility.yul\":13190:13248   */\n      mstore\n        /* \"#utility.yul\":13282:13286   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13277:13279   */\n      0x20\n        /* \"#utility.yul\":13269:13275   */\n      dup3\n        /* \"#utility.yul\":13265:13280   */\n      add\n        /* \"#utility.yul\":13258:13287   */\n      mstore\n        /* \"#utility.yul\":13073:13294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13300:13471   */\n    tag_202:\n        /* \"#utility.yul\":13440:13463   */\n      0x4e6f7420417070726f76656420746f20646f20736f0000000000000000000000\n        /* \"#utility.yul\":13436:13437   */\n      0x00\n        /* \"#utility.yul\":13428:13434   */\n      dup3\n        /* \"#utility.yul\":13424:13438   */\n      add\n        /* \"#utility.yul\":13417:13464   */\n      mstore\n        /* \"#utility.yul\":13300:13471   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13477:13702   */\n    tag_207:\n        /* \"#utility.yul\":13617:13651   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13613:13614   */\n      0x00\n        /* \"#utility.yul\":13605:13611   */\n      dup3\n        /* \"#utility.yul\":13601:13615   */\n      add\n        /* \"#utility.yul\":13594:13652   */\n      mstore\n        /* \"#utility.yul\":13686:13694   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13681:13683   */\n      0x20\n        /* \"#utility.yul\":13673:13679   */\n      dup3\n        /* \"#utility.yul\":13669:13684   */\n      add\n        /* \"#utility.yul\":13662:13695   */\n      mstore\n        /* \"#utility.yul\":13477:13702   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13708:13935   */\n    tag_212:\n        /* \"#utility.yul\":13848:13882   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":13844:13845   */\n      0x00\n        /* \"#utility.yul\":13836:13842   */\n      dup3\n        /* \"#utility.yul\":13832:13846   */\n      add\n        /* \"#utility.yul\":13825:13883   */\n      mstore\n        /* \"#utility.yul\":13917:13927   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13912:13914   */\n      0x20\n        /* \"#utility.yul\":13904:13910   */\n      dup3\n        /* \"#utility.yul\":13900:13915   */\n      add\n        /* \"#utility.yul\":13893:13928   */\n      mstore\n        /* \"#utility.yul\":13708:13935   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13941:14165   */\n    tag_217:\n        /* \"#utility.yul\":14081:14115   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14077:14078   */\n      0x00\n        /* \"#utility.yul\":14069:14075   */\n      dup3\n        /* \"#utility.yul\":14065:14079   */\n      add\n        /* \"#utility.yul\":14058:14116   */\n      mstore\n        /* \"#utility.yul\":14150:14157   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14145:14147   */\n      0x20\n        /* \"#utility.yul\":14137:14143   */\n      dup3\n        /* \"#utility.yul\":14133:14148   */\n      add\n        /* \"#utility.yul\":14126:14158   */\n      mstore\n        /* \"#utility.yul\":13941:14165   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14171:14394   */\n    tag_222:\n        /* \"#utility.yul\":14311:14345   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14307:14308   */\n      0x00\n        /* \"#utility.yul\":14299:14305   */\n      dup3\n        /* \"#utility.yul\":14295:14309   */\n      add\n        /* \"#utility.yul\":14288:14346   */\n      mstore\n        /* \"#utility.yul\":14380:14386   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14375:14377   */\n      0x20\n        /* \"#utility.yul\":14367:14373   */\n      dup3\n        /* \"#utility.yul\":14363:14378   */\n      add\n        /* \"#utility.yul\":14356:14387   */\n      mstore\n        /* \"#utility.yul\":14171:14394   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14400:14624   */\n    tag_227:\n        /* \"#utility.yul\":14540:14574   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":14536:14537   */\n      0x00\n        /* \"#utility.yul\":14528:14534   */\n      dup3\n        /* \"#utility.yul\":14524:14538   */\n      add\n        /* \"#utility.yul\":14517:14575   */\n      mstore\n        /* \"#utility.yul\":14609:14616   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14604:14606   */\n      0x20\n        /* \"#utility.yul\":14596:14602   */\n      dup3\n        /* \"#utility.yul\":14592:14607   */\n      add\n        /* \"#utility.yul\":14585:14617   */\n      mstore\n        /* \"#utility.yul\":14400:14624   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14630:14752   */\n    tag_148:\n        /* \"#utility.yul\":14703:14727   */\n      tag_303\n        /* \"#utility.yul\":14721:14726   */\n      dup2\n        /* \"#utility.yul\":14703:14727   */\n      tag_270\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":14696:14701   */\n      dup2\n        /* \"#utility.yul\":14693:14728   */\n      eq\n        /* \"#utility.yul\":14683:14746   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":14742:14743   */\n      0x00\n        /* \"#utility.yul\":14739:14740   */\n      dup1\n        /* \"#utility.yul\":14732:14744   */\n      revert\n        /* \"#utility.yul\":14683:14746   */\n    tag_304:\n        /* \"#utility.yul\":14630:14752   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14758:14880   */\n    tag_152:\n        /* \"#utility.yul\":14831:14855   */\n      tag_306\n        /* \"#utility.yul\":14849:14854   */\n      dup2\n        /* \"#utility.yul\":14831:14855   */\n      tag_231\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":14824:14829   */\n      dup2\n        /* \"#utility.yul\":14821:14856   */\n      eq\n        /* \"#utility.yul\":14811:14874   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":14870:14871   */\n      0x00\n        /* \"#utility.yul\":14867:14868   */\n      dup1\n        /* \"#utility.yul\":14860:14872   */\n      revert\n        /* \"#utility.yul\":14811:14874   */\n    tag_307:\n        /* \"#utility.yul\":14758:14880   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203708400f71850b8d0b92d2b8fe3abc71fc4059816ab68dfc4f09d0b266d0565e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:4"
															},
															"nodeType": "YulIf",
															"src": "262:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:4"
															},
															"nodeType": "YulIf",
															"src": "531:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:4",
														"type": ""
													}
												],
												"src": "448:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:4"
															},
															"nodeType": "YulIf",
															"src": "933:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:4",
														"type": ""
													}
												],
												"src": "809:853:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:4",
														"type": ""
													}
												],
												"src": "1668:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:4",
														"type": ""
													}
												],
												"src": "1803:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:4"
															},
															"nodeType": "YulIf",
															"src": "2022:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:4",
														"type": ""
													}
												],
												"src": "1884:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:4",
																"statements": []
															},
															"src": "2276:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:4"
															},
															"nodeType": "YulIf",
															"src": "2398:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:4",
														"type": ""
													}
												],
												"src": "2198:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:4"
															},
															"nodeType": "YulIf",
															"src": "2650:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:4"
															},
															"nodeType": "YulIf",
															"src": "2741:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:4",
														"type": ""
													}
												],
												"src": "2511:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:4"
															},
															"nodeType": "YulIf",
															"src": "2993:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:4",
														"type": ""
													}
												],
												"src": "2837:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:4",
														"type": ""
													}
												],
												"src": "3988:102:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620018ee380380620018ee83398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61153680620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610f88565b60405180910390f35b6100e660048036038101906100e19190610daf565b610308565b6040516100f39190610f6d565b60405180910390f35b610104610326565b60405161011191906110aa565b60405180910390f35b610134600480360381019061012f9190610d5c565b610330565b6040516101419190610f6d565b60405180910390f35b6101526104b8565b60405161015f91906110c5565b60405180910390f35b610182600480360381019061017d9190610daf565b6104c1565b60405161018f9190610f6d565b60405180910390f35b6101b260048036038101906101ad9190610cef565b61056d565b6040516101bf91906110aa565b60405180910390f35b6101d06105b5565b6040516101dd9190610f88565b60405180910390f35b61020060048036038101906101fb9190610daf565b610647565b60405161020d9190610f6d565b60405180910390f35b610230600480360381019061022b9190610daf565b610732565b60405161023d9190610f6d565b60405180910390f35b610260600480360381019061025b9190610d1c565b6107e0565b60405161026d91906110aa565b60405180910390f35b606060038054610285906111da565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906111da565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610867565b848461086f565b6001905092915050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610fea565b60405180910390fd5b6103cd848484610a3a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610418610867565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f9061102a565b60405180910390fd5b6104ac856104a4610867565b85840361086f565b60019150509392505050565b60006012905090565b60006105636104ce610867565b8484600160006104dc610867565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461055e91906110fc565b61086f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105c4906111da565b80601f01602080910402602001604051908101604052809291908181526020018280546105f0906111da565b801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b60008060016000610656610867565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a9061108a565b60405180910390fd5b61072761071e610867565b8585840361086f565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90610fea565b60405180910390fd5b6107d66107cf610867565b8484610a3a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d69061106a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690610fca565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a2d91906110aa565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa19061104a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190610faa565b60405180910390fd5b610b25838383610cbb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba29061100a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3e91906110fc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ca291906110aa565b60405180910390a3610cb5848484610cc0565b50505050565b505050565b505050565b600081359050610cd4816114d2565b92915050565b600081359050610ce9816114e9565b92915050565b600060208284031215610d0557610d0461126a565b5b6000610d1384828501610cc5565b91505092915050565b60008060408385031215610d3357610d3261126a565b5b6000610d4185828601610cc5565b9250506020610d5285828601610cc5565b9150509250929050565b600080600060608486031215610d7557610d7461126a565b5b6000610d8386828701610cc5565b9350506020610d9486828701610cc5565b9250506040610da586828701610cda565b9150509250925092565b60008060408385031215610dc657610dc561126a565b5b6000610dd485828601610cc5565b9250506020610de585828601610cda565b9150509250929050565b610df881611164565b82525050565b6000610e09826110e0565b610e1381856110eb565b9350610e238185602086016111a7565b610e2c8161126f565b840191505092915050565b6000610e446023836110eb565b9150610e4f82611280565b604082019050919050565b6000610e676022836110eb565b9150610e72826112cf565b604082019050919050565b6000610e8a6015836110eb565b9150610e958261131e565b602082019050919050565b6000610ead6026836110eb565b9150610eb882611347565b604082019050919050565b6000610ed06028836110eb565b9150610edb82611396565b604082019050919050565b6000610ef36025836110eb565b9150610efe826113e5565b604082019050919050565b6000610f166024836110eb565b9150610f2182611434565b604082019050919050565b6000610f396025836110eb565b9150610f4482611483565b604082019050919050565b610f5881611190565b82525050565b610f678161119a565b82525050565b6000602082019050610f826000830184610def565b92915050565b60006020820190508181036000830152610fa28184610dfe565b905092915050565b60006020820190508181036000830152610fc381610e37565b9050919050565b60006020820190508181036000830152610fe381610e5a565b9050919050565b6000602082019050818103600083015261100381610e7d565b9050919050565b6000602082019050818103600083015261102381610ea0565b9050919050565b6000602082019050818103600083015261104381610ec3565b9050919050565b6000602082019050818103600083015261106381610ee6565b9050919050565b6000602082019050818103600083015261108381610f09565b9050919050565b600060208201905081810360008301526110a381610f2c565b9050919050565b60006020820190506110bf6000830184610f4f565b92915050565b60006020820190506110da6000830184610f5e565b92915050565b600081519050919050565b600082825260208201905092915050565b600061110782611190565b915061111283611190565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111475761114661120c565b5b828201905092915050565b600061115d82611170565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156111c55780820151818401526020810190506111aa565b838111156111d4576000848401525b50505050565b600060028204905060018216806111f257607f821691505b602082108114156112065761120561123b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417070726f76656420746f20646f20736f0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6114db81611152565b81146114e657600080fd5b50565b6114f281611190565b81146114fd57600080fd5b5056fea26469706673582212203708400f71850b8d0b92d2b8fe3abc71fc4059816ab68dfc4f09d0b266d0565e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18EE CODESIZE SUB DUP1 PUSH3 0x18EE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x867 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B9 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CD DUP5 DUP5 DUP5 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x418 PUSH2 0x867 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AC DUP6 PUSH2 0x4A4 PUSH2 0x867 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x563 PUSH2 0x4CE PUSH2 0x867 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4DC PUSH2 0x867 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5C4 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F0 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x612 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x656 PUSH2 0x867 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x727 PUSH2 0x71E PUSH2 0x867 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BB SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 PUSH2 0x7CF PUSH2 0x867 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x946 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA2 SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCB5 DUP5 DUP5 DUP5 PUSH2 0xCC0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD4 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE9 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD13 DUP5 DUP3 DUP6 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD41 DUP6 DUP3 DUP7 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD52 DUP6 DUP3 DUP7 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD83 DUP7 DUP3 DUP8 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD94 DUP7 DUP3 DUP8 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDA5 DUP7 DUP3 DUP8 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD4 DUP6 DUP3 DUP7 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE5 DUP6 DUP3 DUP7 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0x1164 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 DUP3 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xE13 DUP2 DUP6 PUSH2 0x10EB JUMP JUMPDEST SWAP4 POP PUSH2 0xE23 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0x126F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE44 PUSH1 0x23 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xE4F DUP3 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 PUSH1 0x22 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xE72 DUP3 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8A PUSH1 0x15 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xE95 DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x26 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED0 PUSH1 0x28 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xEDB DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF3 PUSH1 0x25 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xEFE DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF16 PUSH1 0x24 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xF21 DUP3 PUSH2 0x1434 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF39 PUSH1 0x25 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xF44 DUP3 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF58 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF67 DUP2 PUSH2 0x119A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF82 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA2 DUP2 DUP5 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC3 DUP2 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFE3 DUP2 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1003 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1023 DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1063 DUP2 PUSH2 0xEE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1083 DUP2 PUSH2 0xF09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A3 DUP2 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 DUP3 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x1112 DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x120C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115D DUP3 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11AA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0x123B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420417070726F76656420746F20646F20736F0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x14DB DUP2 PUSH2 0x1152 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14F2 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP2 EQ PUSH2 0x14FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY ADDMOD BLOCKHASH 0xF PUSH18 0x850B8D0B92D2B8FE3ABC71FC4059816AB68D 0xFC 0x4F MULMOD 0xD0 0xB2 PUSH7 0xD0565E64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "1367:10806:1:-:0;;;1984:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2058:5;2050;:13;;;;;;;;;;;;:::i;:::-;;2083:7;2073;:17;;;;;;;;;;;;:::i;:::-;;1984:122;;1367:10806;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1367:10806:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": 3264,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_562": {
									"entryPoint": 2159,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": 3259,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 2151,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_389": {
									"entryPoint": 2618,
									"id": 389,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_175": {
									"entryPoint": 2016,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_196": {
									"entryPoint": 776,
									"id": 196,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_134": {
									"entryPoint": 1389,
									"id": 134,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_110": {
									"entryPoint": 1208,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_312": {
									"entryPoint": 1607,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_273": {
									"entryPoint": 1217,
									"id": 273,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_90": {
									"entryPoint": 630,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_100": {
									"entryPoint": 1461,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_120": {
									"entryPoint": 806,
									"id": 120,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_246": {
									"entryPoint": 816,
									"id": 246,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_157": {
									"entryPoint": 1842,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14883:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"src": "2332:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:4",
														"type": ""
													}
												],
												"src": "2702:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:4",
														"type": ""
													}
												],
												"src": "3074:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:4",
														"type": ""
													}
												],
												"src": "3446:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:4",
														"type": ""
													}
												],
												"src": "3818:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:4",
														"type": ""
													}
												],
												"src": "4190:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:4",
														"type": ""
													}
												],
												"src": "4562:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:4",
														"type": ""
													}
												],
												"src": "4934:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5462:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5528:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5533:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5469:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5634:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5545:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5647:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5658:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5654:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5647:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5440:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5448:3:4",
														"type": ""
													}
												],
												"src": "5306:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5760:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5783:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5765:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5765:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5731:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5738:3:4",
														"type": ""
													}
												],
												"src": "5678:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5880:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5901:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5885:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5885:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5873:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5873:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5873:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5851:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5858:3:4",
														"type": ""
													}
												],
												"src": "5802:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6012:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6022:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6034:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6045:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6022:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6096:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6109:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6120:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6105:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6058:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6058:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5984:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5996:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6007:4:4",
														"type": ""
													}
												],
												"src": "5920:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6330:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6428:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6437:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6226:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6238:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6249:4:4",
														"type": ""
													}
												],
												"src": "6136:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6636:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6648:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6659:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6644:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6644:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6636:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6683:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6679:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6702:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6708:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6698:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6698:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6672:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6672:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6672:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6728:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6862:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6736:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6736:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6728:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6606:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6621:4:4",
														"type": ""
													}
												],
												"src": "6455:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7051:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7061:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7073:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7084:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7061:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7108:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7119:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7104:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7127:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7133:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7123:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7123:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7097:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7097:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7097:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7153:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7161:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7153:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7031:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7046:4:4",
														"type": ""
													}
												],
												"src": "6880:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7476:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7486:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7498:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7494:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7486:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7533:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7544:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7529:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7552:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7558:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7548:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7522:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7522:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7712:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7586:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7578:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7456:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7471:4:4",
														"type": ""
													}
												],
												"src": "7305:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7901:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7911:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7923:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7934:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7919:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7911:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7958:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7969:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7954:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7977:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7983:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7973:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7947:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7947:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8003:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8137:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8011:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8011:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8003:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7881:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7896:4:4",
														"type": ""
													}
												],
												"src": "7730:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8326:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8336:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8348:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8359:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8336:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8383:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8394:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8379:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8379:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8402:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8408:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8398:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8372:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8372:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8428:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8562:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8436:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8428:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8306:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8321:4:4",
														"type": ""
													}
												],
												"src": "8155:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8751:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8761:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8773:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8784:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8769:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8761:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8808:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8819:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8804:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8804:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8827:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8833:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8823:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8823:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8797:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8853:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8987:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8861:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8861:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8853:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8731:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8746:4:4",
														"type": ""
													}
												],
												"src": "8580:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9176:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9186:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9198:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9209:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9194:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9186:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9233:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9244:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9229:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9252:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9258:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9248:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9248:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9222:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9222:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9278:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9412:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9286:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9286:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9278:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9156:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9171:4:4",
														"type": ""
													}
												],
												"src": "9005:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9601:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9611:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9623:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9634:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9619:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9611:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9658:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9669:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9654:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9677:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9683:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9673:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9673:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9647:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9647:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9703:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9837:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9711:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9711:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9703:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9581:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9596:4:4",
														"type": ""
													}
												],
												"src": "9430:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9953:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9963:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9975:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9986:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9971:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9963:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10043:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10056:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10067:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10052:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10052:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9999:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9999:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9925:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9937:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9948:4:4",
														"type": ""
													}
												],
												"src": "9855:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10177:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10187:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10199:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10210:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10195:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10195:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10187:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10263:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10276:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10287:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10272:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10272:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10223:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10223:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10223:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10149:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10161:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10172:4:4",
														"type": ""
													}
												],
												"src": "10083:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10343:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10353:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10363:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10363:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10353:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10336:6:4",
														"type": ""
													}
												],
												"src": "10303:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10443:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10454:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10470:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10464:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10464:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10454:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10426:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10436:6:4",
														"type": ""
													}
												],
												"src": "10384:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10585:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10602:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10607:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10595:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10595:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10623:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10642:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10647:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10638:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10623:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10557:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10562:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10573:11:4",
														"type": ""
													}
												],
												"src": "10489:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10741:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10723:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10723:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10718:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10752:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10775:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10757:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10757:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10752:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10915:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10917:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10917:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10917:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10836:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10843:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10911:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10839:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10839:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10833:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10833:81:4"
															},
															"nodeType": "YulIf",
															"src": "10830:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10947:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10958:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10961:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10954:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10954:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10947:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10695:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10698:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10704:3:4",
														"type": ""
													}
												],
												"src": "10664:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11020:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11030:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11059:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11041:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11041:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11030:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11002:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11012:7:4",
														"type": ""
													}
												],
												"src": "10975:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11119:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11129:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11154:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11147:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11147:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11129:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11101:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11111:7:4",
														"type": ""
													}
												],
												"src": "11077:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11218:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11228:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11243:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11250:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11239:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11239:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11228:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11200:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11210:7:4",
														"type": ""
													}
												],
												"src": "11173:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11350:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11360:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11371:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11360:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11332:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11342:7:4",
														"type": ""
													}
												],
												"src": "11305:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11431:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11441:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11456:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11463:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11452:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11441:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11413:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11423:7:4",
														"type": ""
													}
												],
												"src": "11388:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11529:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11539:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11548:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11543:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11608:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11633:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11638:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11629:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11629:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11652:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11657:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11648:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11648:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11642:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11642:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11622:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11622:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11622:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11569:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11572:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11566:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11566:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11580:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11582:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11591:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11594:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11587:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11587:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11582:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11562:3:4",
																"statements": []
															},
															"src": "11558:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11705:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11755:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11760:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11751:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11751:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11769:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11744:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11744:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11744:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11686:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11689:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11683:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11683:13:4"
															},
															"nodeType": "YulIf",
															"src": "11680:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11511:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11516:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11521:6:4",
														"type": ""
													}
												],
												"src": "11480:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11844:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11854:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11868:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11874:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11864:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11864:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11854:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11885:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11915:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11921:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11911:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11911:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11889:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11962:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11976:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11990:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11998:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11986:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11986:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11976:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11942:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11935:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11935:26:4"
															},
															"nodeType": "YulIf",
															"src": "11932:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12065:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12079:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12079:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12079:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12029:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12052:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12060:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12049:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12049:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12026:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12026:38:4"
															},
															"nodeType": "YulIf",
															"src": "12023:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11828:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11837:6:4",
														"type": ""
													}
												],
												"src": "11793:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12147:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12164:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12167:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12157:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12157:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12157:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12261:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12264:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12254:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12254:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12254:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12285:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12288:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12278:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12278:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12278:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12119:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12333:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12350:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12353:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12343:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12343:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12343:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12447:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12450:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12440:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12440:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12440:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12471:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12474:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12464:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12464:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12464:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12305:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12580:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12597:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12600:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12590:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12590:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12590:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12491:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12703:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12723:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12713:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12713:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12614:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12785:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12795:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12813:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12820:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12809:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12809:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12829:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12825:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12825:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12805:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12795:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12768:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12778:6:4",
														"type": ""
													}
												],
												"src": "12737:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12951:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12973:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12981:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12969:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12969:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12985:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12962:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12962:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12962:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13041:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13049:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13037:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13037:15:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13054:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13030:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13030:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13030:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12943:6:4",
														"type": ""
													}
												],
												"src": "12845:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13179:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13201:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13209:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13197:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13197:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13213:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13190:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13190:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13190:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13269:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13277:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13265:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13265:15:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13282:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13258:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13258:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13258:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13171:6:4",
														"type": ""
													}
												],
												"src": "13073:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13406:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13428:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13436:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13424:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13424:14:4"
																	},
																	{
																		"hexValue": "4e6f7420417070726f76656420746f20646f20736f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13440:23:4",
																		"type": "",
																		"value": "Not Approved to do so"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13417:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13417:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13417:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13398:6:4",
														"type": ""
													}
												],
												"src": "13300:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13583:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13605:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13613:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13601:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13601:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13617:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13594:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13594:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13594:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13673:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13681:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13669:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13669:15:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13686:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13662:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13662:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13662:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13575:6:4",
														"type": ""
													}
												],
												"src": "13477:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13814:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13836:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13844:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13832:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13832:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13848:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13825:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13825:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13825:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13904:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13912:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13900:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13900:15:4"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13917:10:4",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13893:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13893:35:4"
														}
													]
												},
												"name": "store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13806:6:4",
														"type": ""
													}
												],
												"src": "13708:227:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14047:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14069:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14077:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14065:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14065:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14081:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14058:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14058:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14058:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14137:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14145:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14133:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:15:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14150:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14126:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14126:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14126:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14039:6:4",
														"type": ""
													}
												],
												"src": "13941:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14277:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14299:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14307:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14295:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14311:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14288:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14288:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14288:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14367:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14375:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14363:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14363:15:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14380:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14356:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14356:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14356:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14269:6:4",
														"type": ""
													}
												],
												"src": "14171:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14506:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14528:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14536:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14524:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14524:14:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14540:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14517:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14517:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14517:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14596:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14604:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14592:15:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14609:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14585:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14585:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14585:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14498:6:4",
														"type": ""
													}
												],
												"src": "14400:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14673:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14730:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14739:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14742:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14732:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14732:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14732:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14696:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14721:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14703:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14703:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14693:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14693:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14686:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14686:43:4"
															},
															"nodeType": "YulIf",
															"src": "14683:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14666:5:4",
														"type": ""
													}
												],
												"src": "14630:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14801:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14858:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14867:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14870:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14860:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14860:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14860:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14824:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14849:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14831:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14831:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14821:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14821:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14814:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14814:43:4"
															},
															"nodeType": "YulIf",
															"src": "14811:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14794:5:4",
														"type": ""
													}
												],
												"src": "14758:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Approved to do so\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(memPtr, 32), \"llowance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610f88565b60405180910390f35b6100e660048036038101906100e19190610daf565b610308565b6040516100f39190610f6d565b60405180910390f35b610104610326565b60405161011191906110aa565b60405180910390f35b610134600480360381019061012f9190610d5c565b610330565b6040516101419190610f6d565b60405180910390f35b6101526104b8565b60405161015f91906110c5565b60405180910390f35b610182600480360381019061017d9190610daf565b6104c1565b60405161018f9190610f6d565b60405180910390f35b6101b260048036038101906101ad9190610cef565b61056d565b6040516101bf91906110aa565b60405180910390f35b6101d06105b5565b6040516101dd9190610f88565b60405180910390f35b61020060048036038101906101fb9190610daf565b610647565b60405161020d9190610f6d565b60405180910390f35b610230600480360381019061022b9190610daf565b610732565b60405161023d9190610f6d565b60405180910390f35b610260600480360381019061025b9190610d1c565b6107e0565b60405161026d91906110aa565b60405180910390f35b606060038054610285906111da565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906111da565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610867565b848461086f565b6001905092915050565b6000600254905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b990610fea565b60405180910390fd5b6103cd848484610a3a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610418610867565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610498576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048f9061102a565b60405180910390fd5b6104ac856104a4610867565b85840361086f565b60019150509392505050565b60006012905090565b60006105636104ce610867565b8484600160006104dc610867565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461055e91906110fc565b61086f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105c4906111da565b80601f01602080910402602001604051908101604052809291908181526020018280546105f0906111da565b801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b5050505050905090565b60008060016000610656610867565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a9061108a565b60405180910390fd5b61072761071e610867565b8585840361086f565b600191505092915050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90610fea565b60405180910390fd5b6107d66107cf610867565b8484610a3a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d69061106a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690610fca565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a2d91906110aa565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610aaa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa19061104a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190610faa565b60405180910390fd5b610b25838383610cbb565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba29061100a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3e91906110fc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ca291906110aa565b60405180910390a3610cb5848484610cc0565b50505050565b505050565b505050565b600081359050610cd4816114d2565b92915050565b600081359050610ce9816114e9565b92915050565b600060208284031215610d0557610d0461126a565b5b6000610d1384828501610cc5565b91505092915050565b60008060408385031215610d3357610d3261126a565b5b6000610d4185828601610cc5565b9250506020610d5285828601610cc5565b9150509250929050565b600080600060608486031215610d7557610d7461126a565b5b6000610d8386828701610cc5565b9350506020610d9486828701610cc5565b9250506040610da586828701610cda565b9150509250925092565b60008060408385031215610dc657610dc561126a565b5b6000610dd485828601610cc5565b9250506020610de585828601610cda565b9150509250929050565b610df881611164565b82525050565b6000610e09826110e0565b610e1381856110eb565b9350610e238185602086016111a7565b610e2c8161126f565b840191505092915050565b6000610e446023836110eb565b9150610e4f82611280565b604082019050919050565b6000610e676022836110eb565b9150610e72826112cf565b604082019050919050565b6000610e8a6015836110eb565b9150610e958261131e565b602082019050919050565b6000610ead6026836110eb565b9150610eb882611347565b604082019050919050565b6000610ed06028836110eb565b9150610edb82611396565b604082019050919050565b6000610ef36025836110eb565b9150610efe826113e5565b604082019050919050565b6000610f166024836110eb565b9150610f2182611434565b604082019050919050565b6000610f396025836110eb565b9150610f4482611483565b604082019050919050565b610f5881611190565b82525050565b610f678161119a565b82525050565b6000602082019050610f826000830184610def565b92915050565b60006020820190508181036000830152610fa28184610dfe565b905092915050565b60006020820190508181036000830152610fc381610e37565b9050919050565b60006020820190508181036000830152610fe381610e5a565b9050919050565b6000602082019050818103600083015261100381610e7d565b9050919050565b6000602082019050818103600083015261102381610ea0565b9050919050565b6000602082019050818103600083015261104381610ec3565b9050919050565b6000602082019050818103600083015261106381610ee6565b9050919050565b6000602082019050818103600083015261108381610f09565b9050919050565b600060208201905081810360008301526110a381610f2c565b9050919050565b60006020820190506110bf6000830184610f4f565b92915050565b60006020820190506110da6000830184610f5e565b92915050565b600081519050919050565b600082825260208201905092915050565b600061110782611190565b915061111283611190565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111475761114661120c565b5b828201905092915050565b600061115d82611170565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156111c55780820151818401526020810190506111aa565b838111156111d4576000848401525b50505050565b600060028204905060018216806111f257607f821691505b602082108114156112065761120561123b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420417070726f76656420746f20646f20736f0000000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6114db81611152565b81146114e657600080fd5b50565b6114f281611190565b81146114fd57600080fd5b5056fea26469706673582212203708400f71850b8d0b92d2b8fe3abc71fc4059816ab68dfc4f09d0b266d0565e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xF88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xDAF JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x867 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B9 SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CD DUP5 DUP5 DUP5 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x418 PUSH2 0x867 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48F SWAP1 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AC DUP6 PUSH2 0x4A4 PUSH2 0x867 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x563 PUSH2 0x4CE PUSH2 0x867 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x4DC PUSH2 0x867 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5C4 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F0 SWAP1 PUSH2 0x11DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x612 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x620 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x656 PUSH2 0x867 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70A SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x727 PUSH2 0x71E PUSH2 0x867 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x86F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BB SWAP1 PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D6 PUSH2 0x7CF PUSH2 0x867 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x946 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA1 SWAP1 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB11 SWAP1 PUSH2 0xFAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB25 DUP4 DUP4 DUP4 PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC3E SWAP2 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA2 SWAP2 SWAP1 PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCB5 DUP5 DUP5 DUP5 PUSH2 0xCC0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCD4 DUP2 PUSH2 0x14D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCE9 DUP2 PUSH2 0x14E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD13 DUP5 DUP3 DUP6 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD33 JUMPI PUSH2 0xD32 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD41 DUP6 DUP3 DUP7 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD52 DUP6 DUP3 DUP7 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD75 JUMPI PUSH2 0xD74 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD83 DUP7 DUP3 DUP8 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD94 DUP7 DUP3 DUP8 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDA5 DUP7 DUP3 DUP8 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD4 DUP6 DUP3 DUP7 ADD PUSH2 0xCC5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE5 DUP6 DUP3 DUP7 ADD PUSH2 0xCDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF8 DUP2 PUSH2 0x1164 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 DUP3 PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xE13 DUP2 DUP6 PUSH2 0x10EB JUMP JUMPDEST SWAP4 POP PUSH2 0xE23 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0x126F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE44 PUSH1 0x23 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xE4F DUP3 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 PUSH1 0x22 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xE72 DUP3 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8A PUSH1 0x15 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xE95 DUP3 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x26 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED0 PUSH1 0x28 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xEDB DUP3 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF3 PUSH1 0x25 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xEFE DUP3 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF16 PUSH1 0x24 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xF21 DUP3 PUSH2 0x1434 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF39 PUSH1 0x25 DUP4 PUSH2 0x10EB JUMP JUMPDEST SWAP2 POP PUSH2 0xF44 DUP3 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF58 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF67 DUP2 PUSH2 0x119A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF82 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA2 DUP2 DUP5 PUSH2 0xDFE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFC3 DUP2 PUSH2 0xE37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFE3 DUP2 PUSH2 0xE5A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1003 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1023 DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1063 DUP2 PUSH2 0xEE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1083 DUP2 PUSH2 0xF09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A3 DUP2 PUSH2 0xF2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10BF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1107 DUP3 PUSH2 0x1190 JUMP JUMPDEST SWAP2 POP PUSH2 0x1112 DUP4 PUSH2 0x1190 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1147 JUMPI PUSH2 0x1146 PUSH2 0x120C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115D DUP3 PUSH2 0x1170 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11C5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11AA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0x123B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420417070726F76656420746F20646F20736F0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x14DB DUP2 PUSH2 0x1152 JUMP JUMPDEST DUP2 EQ PUSH2 0x14E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14F2 DUP2 PUSH2 0x1190 JUMP JUMPDEST DUP2 EQ PUSH2 0x14FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY ADDMOD BLOCKHASH 0xF PUSH18 0x850B8D0B92D2B8FE3ABC71FC4059816AB68D 0xFC 0x4F MULMOD 0xD0 0xB2 PUSH7 0xD0565E64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "1367:10806:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4399:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3376:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5032:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3225:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5918:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3541:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2499:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6617:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3869:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4112:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2288:98;2342:13;2374:5;2367:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2288:98;:::o;4399:166::-;4482:4;4498:39;4507:12;:10;:12::i;:::-;4521:7;4530:6;4498:8;:39::i;:::-;4554:4;4547:11;;4399:166;;;;:::o;3376:106::-;3437:7;3463:12;;3456:19;;3376:106;:::o;5032:491::-;5181:4;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5197:36:::1;5207:6;5215:9;5226:6;5197:9;:36::i;:::-;5244:24;5271:11;:19;5283:6;5271:19;;;;;;;;;;;;;;;:33;5291:12;:10;:12::i;:::-;5271:33;;;;;;;;;;;;;;;;5244:60;;5342:6;5322:16;:26;;5314:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5427:57;5436:6;5444:12;:10;:12::i;:::-;5477:6;5458:16;:25;5427:8;:57::i;:::-;5512:4;5505:11;;;5032:491:::0;;;;;:::o;3225:91::-;3283:5;3307:2;3300:9;;3225:91;:::o;5918:212::-;6006:4;6022:80;6031:12;:10;:12::i;:::-;6045:7;6091:10;6054:11;:25;6066:12;:10;:12::i;:::-;6054:25;;;;;;;;;;;;;;;:34;6080:7;6054:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;6022:8;:80::i;:::-;6119:4;6112:11;;5918:212;;;;:::o;3541:125::-;3615:7;3641:9;:18;3651:7;3641:18;;;;;;;;;;;;;;;;3634:25;;3541:125;;;:::o;2499:102::-;2555:13;2587:7;2580:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2499:102;:::o;6617:405::-;6710:4;6726:24;6753:11;:25;6765:12;:10;:12::i;:::-;6753:25;;;;;;;;;;;;;;;:34;6779:7;6753:34;;;;;;;;;;;;;;;;6726:61;;6825:15;6805:16;:35;;6797:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6916:67;6925:12;:10;:12::i;:::-;6939:7;6967:15;6948:16;:34;6916:8;:67::i;:::-;7011:4;7004:11;;;6617:405;;;;:::o;3869:185::-;3968:4;2164:18;;;;;;;;;;;2150:32;;:10;:32;;;2142:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3984:42:::1;3994:12;:10;:12::i;:::-;4008:9;4019:6;3984:9;:42::i;:::-;4043:4;4036:11;;3869:185:::0;;;;:::o;4112:149::-;4201:7;4227:11;:18;4239:5;4227:18;;;;;;;;;;;;;;;:27;4246:7;4227:27;;;;;;;;;;;;;;;;4220:34;;4112:149;;;;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;10193:370:1:-;10341:1;10324:19;;:5;:19;;;;10316:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10421:1;10402:21;;:7;:21;;;;10394:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10503:6;10473:11;:18;10485:5;10473:18;;;;;;;;;;;;;;;:27;10492:7;10473:27;;;;;;;;;;;;;;;:36;;;;10540:7;10524:32;;10533:5;10524:32;;;10549:6;10524:32;;;;;;:::i;:::-;;;;;;;;10193:370;;;:::o;7496:713::-;7649:1;7631:20;;:6;:20;;;;7623:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7732:1;7711:23;;:9;:23;;;;7703:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7785:47;7806:6;7814:9;7825:6;7785:20;:47::i;:::-;7843:21;7867:9;:17;7877:6;7867:17;;;;;;;;;;;;;;;;7843:41;;7919:6;7902:13;:23;;7894:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;8038:6;8022:13;:22;8002:9;:17;8012:6;8002:17;;;;;;;;;;;;;;;:42;;;;8088:6;8064:9;:20;8074:9;8064:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;8127:9;8110:35;;8119:6;8110:35;;;8138:6;8110:35;;;;;;:::i;:::-;;;;;;;;8156:46;8176:6;8184:9;8195:6;8156:19;:46::i;:::-;7613:596;7496:713;;;:::o;11147:121::-;;;;:::o;11856:120::-;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:::-;5448:3;5469:67;5533:2;5528:3;5469:67;:::i;:::-;5462:74;;5545:93;5634:3;5545:93;:::i;:::-;5663:2;5658:3;5654:12;5647:19;;5306:366;;;:::o;5678:118::-;5765:24;5783:5;5765:24;:::i;:::-;5760:3;5753:37;5678:118;;:::o;5802:112::-;5885:22;5901:5;5885:22;:::i;:::-;5880:3;5873:35;5802:112;;:::o;5920:210::-;6007:4;6045:2;6034:9;6030:18;6022:26;;6058:65;6120:1;6109:9;6105:17;6096:6;6058:65;:::i;:::-;5920:210;;;;:::o;6136:313::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:78;6437:4;6428:6;6364:78;:::i;:::-;6356:86;;6136:313;;;;:::o;6455:419::-;6621:4;6659:2;6648:9;6644:18;6636:26;;6708:9;6702:4;6698:20;6694:1;6683:9;6679:17;6672:47;6736:131;6862:4;6736:131;:::i;:::-;6728:139;;6455:419;;;:::o;6880:::-;7046:4;7084:2;7073:9;7069:18;7061:26;;7133:9;7127:4;7123:20;7119:1;7108:9;7104:17;7097:47;7161:131;7287:4;7161:131;:::i;:::-;7153:139;;6880:419;;;:::o;7305:::-;7471:4;7509:2;7498:9;7494:18;7486:26;;7558:9;7552:4;7548:20;7544:1;7533:9;7529:17;7522:47;7586:131;7712:4;7586:131;:::i;:::-;7578:139;;7305:419;;;:::o;7730:::-;7896:4;7934:2;7923:9;7919:18;7911:26;;7983:9;7977:4;7973:20;7969:1;7958:9;7954:17;7947:47;8011:131;8137:4;8011:131;:::i;:::-;8003:139;;7730:419;;;:::o;8155:::-;8321:4;8359:2;8348:9;8344:18;8336:26;;8408:9;8402:4;8398:20;8394:1;8383:9;8379:17;8372:47;8436:131;8562:4;8436:131;:::i;:::-;8428:139;;8155:419;;;:::o;8580:::-;8746:4;8784:2;8773:9;8769:18;8761:26;;8833:9;8827:4;8823:20;8819:1;8808:9;8804:17;8797:47;8861:131;8987:4;8861:131;:::i;:::-;8853:139;;8580:419;;;:::o;9005:::-;9171:4;9209:2;9198:9;9194:18;9186:26;;9258:9;9252:4;9248:20;9244:1;9233:9;9229:17;9222:47;9286:131;9412:4;9286:131;:::i;:::-;9278:139;;9005:419;;;:::o;9430:::-;9596:4;9634:2;9623:9;9619:18;9611:26;;9683:9;9677:4;9673:20;9669:1;9658:9;9654:17;9647:47;9711:131;9837:4;9711:131;:::i;:::-;9703:139;;9430:419;;;:::o;9855:222::-;9948:4;9986:2;9975:9;9971:18;9963:26;;9999:71;10067:1;10056:9;10052:17;10043:6;9999:71;:::i;:::-;9855:222;;;;:::o;10083:214::-;10172:4;10210:2;10199:9;10195:18;10187:26;;10223:67;10287:1;10276:9;10272:17;10263:6;10223:67;:::i;:::-;10083:214;;;;:::o;10384:99::-;10436:6;10470:5;10464:12;10454:22;;10384:99;;;:::o;10489:169::-;10573:11;10607:6;10602:3;10595:19;10647:4;10642:3;10638:14;10623:29;;10489:169;;;;:::o;10664:305::-;10704:3;10723:20;10741:1;10723:20;:::i;:::-;10718:25;;10757:20;10775:1;10757:20;:::i;:::-;10752:25;;10911:1;10843:66;10839:74;10836:1;10833:81;10830:107;;;10917:18;;:::i;:::-;10830:107;10961:1;10958;10954:9;10947:16;;10664:305;;;;:::o;10975:96::-;11012:7;11041:24;11059:5;11041:24;:::i;:::-;11030:35;;10975:96;;;:::o;11077:90::-;11111:7;11154:5;11147:13;11140:21;11129:32;;11077:90;;;:::o;11173:126::-;11210:7;11250:42;11243:5;11239:54;11228:65;;11173:126;;;:::o;11305:77::-;11342:7;11371:5;11360:16;;11305:77;;;:::o;11388:86::-;11423:7;11463:4;11456:5;11452:16;11441:27;;11388:86;;;:::o;11480:307::-;11548:1;11558:113;11572:6;11569:1;11566:13;11558:113;;;11657:1;11652:3;11648:11;11642:18;11638:1;11633:3;11629:11;11622:39;11594:2;11591:1;11587:10;11582:15;;11558:113;;;11689:6;11686:1;11683:13;11680:101;;;11769:1;11760:6;11755:3;11751:16;11744:27;11680:101;11529:258;11480:307;;;:::o;11793:320::-;11837:6;11874:1;11868:4;11864:12;11854:22;;11921:1;11915:4;11911:12;11942:18;11932:81;;11998:4;11990:6;11986:17;11976:27;;11932:81;12060:2;12052:6;12049:14;12029:18;12026:38;12023:84;;;12079:18;;:::i;:::-;12023:84;11844:269;11793:320;;;:::o;12119:180::-;12167:77;12164:1;12157:88;12264:4;12261:1;12254:15;12288:4;12285:1;12278:15;12305:180;12353:77;12350:1;12343:88;12450:4;12447:1;12440:15;12474:4;12471:1;12464:15;12614:117;12723:1;12720;12713:12;12737:102;12778:6;12829:2;12825:7;12820:2;12813:5;12809:14;12805:28;12795:38;;12737:102;;;:::o;12845:222::-;12985:34;12981:1;12973:6;12969:14;12962:58;13054:5;13049:2;13041:6;13037:15;13030:30;12845:222;:::o;13073:221::-;13213:34;13209:1;13201:6;13197:14;13190:58;13282:4;13277:2;13269:6;13265:15;13258:29;13073:221;:::o;13300:171::-;13440:23;13436:1;13428:6;13424:14;13417:47;13300:171;:::o;13477:225::-;13617:34;13613:1;13605:6;13601:14;13594:58;13686:8;13681:2;13673:6;13669:15;13662:33;13477:225;:::o;13708:227::-;13848:34;13844:1;13836:6;13832:14;13825:58;13917:10;13912:2;13904:6;13900:15;13893:35;13708:227;:::o;13941:224::-;14081:34;14077:1;14069:6;14065:14;14058:58;14150:7;14145:2;14137:6;14133:15;14126:32;13941:224;:::o;14171:223::-;14311:34;14307:1;14299:6;14295:14;14288:58;14380:6;14375:2;14367:6;14363:15;14356:31;14171:223;:::o;14400:224::-;14540:34;14536:1;14528:6;14524:14;14517:58;14609:7;14604:2;14596:6;14592:15;14585:32;14400:224;:::o;14630:122::-;14703:24;14721:5;14703:24;:::i;:::-;14696:5;14693:35;14683:63;;14742:1;14739;14732:12;14683:63;14630:122;:::o;14758:::-;14831:24;14849:5;14831:24;:::i;:::-;14824:5;14821:35;14811:63;;14870:1;14867;14860:12;14811:63;14758:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1086000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setApprovedTokenTransferor(address)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2055,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2050,
									"end": 2063,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2080,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2073,
									"end": 2090,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1984,
									"end": 2106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 12173,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203708400f71850b8d0b92d2b8fe3abc71fc4059816ab68dfc4f09d0b266d0565e64736f6c63430008070033",
									".code": [
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 12173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2355,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2386,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4507,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4507,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4498,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4498,
											"end": 4537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4498,
											"end": 4537,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4498,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4558,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4547,
											"end": 4558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3463,
											"end": 3475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5197,
											"end": 5233,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5233,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5197,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5290,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5291,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5291,
											"end": 5303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5291,
											"end": 5303,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5291,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5304,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5314,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5436,
											"end": 5442,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5444,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5483,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5427,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5427,
											"end": 5484,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5427,
											"end": 5484,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5427,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5516,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5032,
											"end": 5523,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3309,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6031,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6065,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6066,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6066,
											"end": 6078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6066,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6066,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6079,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6087,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6088,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 6054,
											"end": 6101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6022,
											"end": 6102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6022,
											"end": 6102,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6022,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6119,
											"end": 6123,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6112,
											"end": 6123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 6130,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3666,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2601,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6750,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6764,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6765,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6765,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6778,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6840,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6805,
											"end": 6840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6797,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6925,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6946,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 6964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 6982,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6916,
											"end": 6983,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6916,
											"end": 6983,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6916,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7004,
											"end": 7015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 7022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2164,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2182,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2142,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3994,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3994,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3984,
											"end": 4026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3984,
											"end": 4026,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3984,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4036,
											"end": 4047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3869,
											"end": 4054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4245,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4227,
											"end": 4254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4261,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10193,
											"end": 10563,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10193,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10341,
											"end": 10342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10324,
											"end": 10343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 10316,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10402,
											"end": 10423,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10394,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10484,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10485,
											"end": 10490,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10492,
											"end": 10499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10533,
											"end": 10538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10549,
											"end": 10555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10556,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10563,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7496,
											"end": 8209,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7496,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7631,
											"end": 7651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7623,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7734,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7703,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7806,
											"end": 7812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7785,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7785,
											"end": 7832,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7785,
											"end": 7832,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7785,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 7884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7843,
											"end": 7884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 7925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7925,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8012,
											"end": 8018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8019,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8044,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8138,
											"end": 8144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8145,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8176,
											"end": 8182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 8156,
											"end": 8202,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8156,
											"end": 8202,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8156,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 8209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 8209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 8209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 8209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 8209,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11147,
											"end": 11268,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 11147,
											"end": 11268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11147,
											"end": 11268,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11856,
											"end": 11976,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11856,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11856,
											"end": 11976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5654,
											"end": 5666,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5678,
											"end": 5796,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5678,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 5783,
											"end": 5788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 5763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5753,
											"end": 5790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5678,
											"end": 5796,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5802,
											"end": 5914,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 5802,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5901,
											"end": 5906,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5880,
											"end": 5883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5802,
											"end": 5914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5802,
											"end": 5914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5802,
											"end": 5914,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6047,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6048,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6120,
											"end": 6121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6105,
											"end": 6122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6102,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6058,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6058,
											"end": 6123,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6058,
											"end": 6123,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6058,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 6130,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6364,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6364,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 6364,
											"end": 6442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6442,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 6364,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6136,
											"end": 6449,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6455,
											"end": 6874,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6455,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6621,
											"end": 6625,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6661,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6644,
											"end": 6662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 6718,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6862,
											"end": 6866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6736,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6736,
											"end": 6867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6736,
											"end": 6867,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6736,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6728,
											"end": 6867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6728,
											"end": 6867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6455,
											"end": 6874,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7086,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7073,
											"end": 7082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7087,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7061,
											"end": 7087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7133,
											"end": 7142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7123,
											"end": 7143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7097,
											"end": 7144,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7161,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 7299,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7471,
											"end": 7475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7511,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7498,
											"end": 7507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7512,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7558,
											"end": 7567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7548,
											"end": 7568,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7542,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7522,
											"end": 7569,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7712,
											"end": 7716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7586,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7578,
											"end": 7717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7724,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7730,
											"end": 8149,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7730,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7934,
											"end": 7936,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7923,
											"end": 7932,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7983,
											"end": 7992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7977,
											"end": 7981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7973,
											"end": 7993,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 7971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7947,
											"end": 7994,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8137,
											"end": 8141,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8011,
											"end": 8142,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8011,
											"end": 8142,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 8011,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8003,
											"end": 8142,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8003,
											"end": 8142,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 8149,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 8149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 8149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7730,
											"end": 8149,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8348,
											"end": 8357,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8344,
											"end": 8362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8402,
											"end": 8406,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8398,
											"end": 8418,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8394,
											"end": 8395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8383,
											"end": 8392,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8396,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8372,
											"end": 8419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8562,
											"end": 8566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 8436,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8428,
											"end": 8567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8155,
											"end": 8574,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8580,
											"end": 8999,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8580,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8784,
											"end": 8786,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8761,
											"end": 8787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8833,
											"end": 8842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8823,
											"end": 8843,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8817,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8797,
											"end": 8844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8861,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8861,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8861,
											"end": 8992,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8861,
											"end": 8992,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8861,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8853,
											"end": 8992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8853,
											"end": 8992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8999,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8999,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9005,
											"end": 9424,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 9005,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9171,
											"end": 9175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9194,
											"end": 9212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9186,
											"end": 9212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9186,
											"end": 9212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9258,
											"end": 9267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9256,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9248,
											"end": 9268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9244,
											"end": 9245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9242,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9229,
											"end": 9246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9222,
											"end": 9269,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 9412,
											"end": 9416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 9286,
											"end": 9417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9286,
											"end": 9417,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 9286,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9278,
											"end": 9417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9278,
											"end": 9417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9424,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9424,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9623,
											"end": 9632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9611,
											"end": 9637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9611,
											"end": 9637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9683,
											"end": 9692,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9677,
											"end": 9681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9667,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9647,
											"end": 9694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9837,
											"end": 9841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9703,
											"end": 9842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9703,
											"end": 9842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9948,
											"end": 9952,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9988,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9971,
											"end": 9989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9963,
											"end": 9989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9963,
											"end": 9989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10067,
											"end": 10068,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10065,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10052,
											"end": 10069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10043,
											"end": 10049,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 9999,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 10077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10172,
											"end": 10176,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10212,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10199,
											"end": 10208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 10287,
											"end": 10288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10276,
											"end": 10285,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10272,
											"end": 10289,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 10223,
											"end": 10290,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10223,
											"end": 10290,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 10223,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10083,
											"end": 10297,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10384,
											"end": 10483,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10384,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10436,
											"end": 10442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10470,
											"end": 10475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10464,
											"end": 10476,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 10476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10384,
											"end": 10483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10384,
											"end": 10483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10384,
											"end": 10483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10384,
											"end": 10483,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10573,
											"end": 10584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10602,
											"end": 10605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10595,
											"end": 10614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10647,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10642,
											"end": 10645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10638,
											"end": 10652,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10489,
											"end": 10658,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10704,
											"end": 10707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10741,
											"end": 10742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10723,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10718,
											"end": 10743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10775,
											"end": 10776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 10757,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 10777,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 10777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10911,
											"end": 10912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10843,
											"end": 10909,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10839,
											"end": 10913,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10836,
											"end": 10837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10833,
											"end": 10914,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10830,
											"end": 10937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10830,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10830,
											"end": 10937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10917,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10830,
											"end": 10937,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10830,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10961,
											"end": 10962,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10958,
											"end": 10959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10954,
											"end": 10963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10963,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10664,
											"end": 10969,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10975,
											"end": 11071,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 10975,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11012,
											"end": 11019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11041,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 11059,
											"end": 11064,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11041,
											"end": 11065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 11041,
											"end": 11065,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11041,
											"end": 11065,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 11041,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11071,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11077,
											"end": 11167,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 11077,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11111,
											"end": 11118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11147,
											"end": 11160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11140,
											"end": 11161,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11167,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11167,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11167,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11173,
											"end": 11299,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 11173,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11210,
											"end": 11217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11292,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11243,
											"end": 11248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11239,
											"end": 11293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11228,
											"end": 11293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11228,
											"end": 11293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11173,
											"end": 11299,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11173,
											"end": 11299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11173,
											"end": 11299,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11173,
											"end": 11299,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11305,
											"end": 11382,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 11305,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11342,
											"end": 11349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11360,
											"end": 11376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11360,
											"end": 11376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11382,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11382,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11382,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11463,
											"end": 11467,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 11456,
											"end": 11461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11452,
											"end": 11468,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11441,
											"end": 11468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11441,
											"end": 11468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11388,
											"end": 11474,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11480,
											"end": 11787,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 11480,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11548,
											"end": 11549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11572,
											"end": 11578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11569,
											"end": 11570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11566,
											"end": 11579,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11657,
											"end": 11658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11652,
											"end": 11655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11648,
											"end": 11659,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11638,
											"end": 11639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11633,
											"end": 11636,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11629,
											"end": 11640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11622,
											"end": 11661,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11591,
											"end": 11592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11582,
											"end": 11597,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 11558,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11689,
											"end": 11695,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11686,
											"end": 11687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11696,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11680,
											"end": 11781,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11680,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 11680,
											"end": 11781,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11769,
											"end": 11770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11755,
											"end": 11758,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11751,
											"end": 11767,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11744,
											"end": 11771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11680,
											"end": 11781,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 11680,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11529,
											"end": 11787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11480,
											"end": 11787,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11793,
											"end": 12113,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 11793,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11837,
											"end": 11843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11875,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11868,
											"end": 11872,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11864,
											"end": 11876,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11854,
											"end": 11876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11854,
											"end": 11876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11921,
											"end": 11922,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11915,
											"end": 11919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11911,
											"end": 11923,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11942,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11932,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 11932,
											"end": 12013,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11998,
											"end": 12002,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 11990,
											"end": 11996,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11986,
											"end": 12003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11976,
											"end": 12003,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11976,
											"end": 12003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11932,
											"end": 12013,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 11932,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12060,
											"end": 12062,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12052,
											"end": 12058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12049,
											"end": 12063,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 12029,
											"end": 12047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12026,
											"end": 12064,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12023,
											"end": 12107,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12023,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 12023,
											"end": 12107,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12023,
											"end": 12107,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 12023,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11844,
											"end": 12113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11793,
											"end": 12113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11793,
											"end": 12113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11793,
											"end": 12113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11793,
											"end": 12113,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12119,
											"end": 12299,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 12119,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12167,
											"end": 12244,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12157,
											"end": 12245,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12264,
											"end": 12268,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12254,
											"end": 12269,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12288,
											"end": 12292,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12285,
											"end": 12286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12293,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12305,
											"end": 12485,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 12305,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12353,
											"end": 12430,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12343,
											"end": 12431,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12450,
											"end": 12454,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12440,
											"end": 12455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12478,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12471,
											"end": 12472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12464,
											"end": 12479,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12614,
											"end": 12731,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 12614,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12723,
											"end": 12724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12713,
											"end": 12725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12839,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 12737,
											"end": 12839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12778,
											"end": 12784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12829,
											"end": 12831,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12825,
											"end": 12832,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12820,
											"end": 12822,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12813,
											"end": 12818,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12809,
											"end": 12823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12805,
											"end": 12833,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12795,
											"end": 12833,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12795,
											"end": 12833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12737,
											"end": 12839,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12845,
											"end": 13067,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 12845,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12985,
											"end": 13019,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12981,
											"end": 12982,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12973,
											"end": 12979,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12969,
											"end": 12983,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12962,
											"end": 13020,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13054,
											"end": 13059,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13049,
											"end": 13051,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13041,
											"end": 13047,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13037,
											"end": 13052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13030,
											"end": 13060,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 13067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12845,
											"end": 13067,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13073,
											"end": 13294,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 13073,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13213,
											"end": 13247,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 13209,
											"end": 13210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13201,
											"end": 13207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13197,
											"end": 13211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13190,
											"end": 13248,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13282,
											"end": 13286,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13277,
											"end": 13279,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13269,
											"end": 13275,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13265,
											"end": 13280,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13258,
											"end": 13287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13073,
											"end": 13294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13073,
											"end": 13294,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13300,
											"end": 13471,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 13300,
											"end": 13471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13440,
											"end": 13463,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420417070726F76656420746F20646F20736F0000000000000000000000"
										},
										{
											"begin": 13436,
											"end": 13437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 13434,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13424,
											"end": 13438,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13417,
											"end": 13464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13300,
											"end": 13471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13300,
											"end": 13471,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13477,
											"end": 13702,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 13477,
											"end": 13702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13617,
											"end": 13651,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13613,
											"end": 13614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13605,
											"end": 13611,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13601,
											"end": 13615,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13594,
											"end": 13652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13686,
											"end": 13694,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13673,
											"end": 13679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13669,
											"end": 13684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13662,
											"end": 13695,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13477,
											"end": 13702,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13708,
											"end": 13935,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 13708,
											"end": 13935,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13848,
											"end": 13882,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 13844,
											"end": 13845,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13832,
											"end": 13846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13825,
											"end": 13883,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13917,
											"end": 13927,
											"name": "PUSH",
											"source": 4,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13912,
											"end": 13914,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13904,
											"end": 13910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13900,
											"end": 13915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13893,
											"end": 13928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13708,
											"end": 13935,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13708,
											"end": 13935,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13941,
											"end": 14165,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 13941,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14081,
											"end": 14115,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14077,
											"end": 14078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14069,
											"end": 14075,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14065,
											"end": 14079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14058,
											"end": 14116,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14150,
											"end": 14157,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14145,
											"end": 14147,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14137,
											"end": 14143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14133,
											"end": 14148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14126,
											"end": 14158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13941,
											"end": 14165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13941,
											"end": 14165,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14171,
											"end": 14394,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 14171,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14311,
											"end": 14345,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14307,
											"end": 14308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14295,
											"end": 14309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14288,
											"end": 14346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14380,
											"end": 14386,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14375,
											"end": 14377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14367,
											"end": 14373,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14363,
											"end": 14378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14356,
											"end": 14387,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14171,
											"end": 14394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14171,
											"end": 14394,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14400,
											"end": 14624,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 14400,
											"end": 14624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 14536,
											"end": 14537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14528,
											"end": 14534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14524,
											"end": 14538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14517,
											"end": 14575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14609,
											"end": 14616,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14604,
											"end": 14606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14596,
											"end": 14602,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14592,
											"end": 14607,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14585,
											"end": 14617,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14400,
											"end": 14624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14400,
											"end": 14624,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14630,
											"end": 14752,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 14630,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14703,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 14721,
											"end": 14726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14703,
											"end": 14727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 14703,
											"end": 14727,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14703,
											"end": 14727,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 14703,
											"end": 14727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14696,
											"end": 14701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14693,
											"end": 14728,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14683,
											"end": 14746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 14683,
											"end": 14746,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14742,
											"end": 14743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14739,
											"end": 14740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14732,
											"end": 14744,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14683,
											"end": 14746,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 14683,
											"end": 14746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14630,
											"end": 14752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14630,
											"end": 14752,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14758,
											"end": 14880,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 14758,
											"end": 14880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14831,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 14849,
											"end": 14854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14831,
											"end": 14855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 14831,
											"end": 14855,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14831,
											"end": 14855,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 14831,
											"end": 14855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14824,
											"end": 14829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14821,
											"end": 14856,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14811,
											"end": 14874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 14811,
											"end": 14874,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14870,
											"end": 14871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14867,
											"end": 14868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14860,
											"end": 14872,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14811,
											"end": 14874,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 14811,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14758,
											"end": 14880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14758,
											"end": 14880,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ERC20.sol\":{\"keccak256\":\"0x1594087a50ae99e1d274a214c48578feb274b18c139539b5e958ab0d1d1fcae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://834903ff9d5dc89f65e163d4d7da13828e4d54e9170cac696fb481c4f3f9b1d6\",\"dweb:/ipfs/Qmdj55ayMVRjZBKzYvLbi4ch3UfewXWUQPRiVPh55rZV42\"]},\"IERC20.sol\":{\"keccak256\":\"0x22859cd4d66846c6d076fb1dac43c6affc9477b88e5e8bce75d5bf4d792de125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25760bd6fa560b82e0f1c277c0a721f71c1bfd214d618cb9a65757d74fd3f2e0\",\"dweb:/ipfs/QmU5UZjPV3gzWbc5ndK5fQj9Ca8tasj3n34YqbGCuAjR6c\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 43,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 45,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 47,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 49,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 51,
								"contract": "ERC20.sol:ERC20",
								"label": "approvedTransferor",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x22859cd4d66846c6d076fb1dac43c6affc9477b88e5e8bce75d5bf4d792de125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25760bd6fa560b82e0f1c277c0a721f71c1bfd214d618cb9a65757d74fd3f2e0\",\"dweb:/ipfs/QmU5UZjPV3gzWbc5ndK5fQj9Ca8tasj3n34YqbGCuAjR6c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x22859cd4d66846c6d076fb1dac43c6affc9477b88e5e8bce75d5bf4d792de125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25760bd6fa560b82e0f1c277c0a721f71c1bfd214d618cb9a65757d74fd3f2e0\",\"dweb:/ipfs/QmU5UZjPV3gzWbc5ndK5fQj9Ca8tasj3n34YqbGCuAjR6c\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xc9728de78b2dc3785bc6cc070e1ed8a2a855459b99f6bc1b8d17b4d2821fe36e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2977d4a4bfcd16800b9442abd22134592100c156d5a5f2b6d1cd3d62818ab7b\",\"dweb:/ipfs/QmcKhKHMKriycRzyFKaQMAqFun33547tykyn2A1tA1KBBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							595
						],
						"IERC20": [
							673
						],
						"IERC20Metadata": [
							698
						]
					},
					"id": 596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 596,
							"sourceUnit": 674,
							"src": "115:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 596,
							"sourceUnit": 699,
							"src": "138:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 596,
							"sourceUnit": 22,
							"src": "169:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1385:7:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "1385:7:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 673,
										"src": "1394:6:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1394:6:1"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 698,
										"src": "1402:14:1"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1402:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "194:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 595,
							"linearizedBaseContracts": [
								595,
								698,
								673,
								21
							],
							"name": "ERC20",
							"nameLocation": "1376:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1459:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "1423:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1431:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1423:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1442:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1531:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "1475:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1483:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1475:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 41,
											"keyType": {
												"id": 39,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1494:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 40,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1513:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1565:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "1549:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1549:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 47,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1599:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "1584:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 46,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 49,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1625:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "1610:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 48,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1610:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 51,
									"mutability": "mutable",
									"name": "approvedTransferor",
									"nameLocation": "1656:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 595,
									"src": "1639:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1639:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "2040:66:1",
										"statements": [
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "2050:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 60,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2058:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2050:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "2050:13:1"
											},
											{
												"expression": {
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 63,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "2073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 64,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2083:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2073:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "2073:17:1"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1681:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 68,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2010:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1996:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 53,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2017:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 55,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2017:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:44:1"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2040:0:1"
									},
									"scope": 595,
									"src": "1984:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2134:90:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2150:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2150:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 73,
																"name": "approvedTransferor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "2164:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2150:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420417070726f76656420746f20646f20736f",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2184:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																"typeString": "literal_string \"Not Approved to do so\""
															},
															"value": "Not Approved to do so"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34363e1d7e986e0a8fc958e84a6e5bf79fc72739f6fa8efff301b6b047de7ebd",
																"typeString": "literal_string \"Not Approved to do so\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2142:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2142:66:1"
											},
											{
												"id": 78,
												"nodeType": "PlaceholderStatement",
												"src": "2216:1:1"
											}
										]
									},
									"id": 80,
									"name": "onlyApproved",
									"nameLocation": "2121:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:1"
									},
									"src": "2112:112:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										685
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "2357:29:1",
										"statements": [
											{
												"expression": {
													"id": 87,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "2374:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "2367:12:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2229:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2297:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2324:8:1"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2342:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:15:1"
									},
									"scope": 595,
									"src": "2288:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										691
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "2570:31:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "2587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "2580:14:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2392:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2508:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2537:8:1"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2555:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 94,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2555:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:15:1"
									},
									"scope": 595,
									"src": "2499:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3290:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3307:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 106,
												"id": 108,
												"nodeType": "Return",
												"src": "3300:9:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2607:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3234:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 103,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3265:8:1"
									},
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:2:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3283:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3283:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3282:7:1"
									},
									"scope": 595,
									"src": "3225:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										604
									],
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "3446:36:1",
										"statements": [
											{
												"expression": {
													"id": 117,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "3463:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 118,
												"nodeType": "Return",
												"src": "3456:19:1"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3322:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3385:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 113,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3419:8:1"
									},
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3396:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3437:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:9:1"
									},
									"scope": 595,
									"src": "3376:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "3624:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 129,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3641:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 131,
													"indexExpression": {
														"id": 130,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "3651:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3641:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 132,
												"nodeType": "Return",
												"src": "3634:25:1"
											}
										]
									},
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3489:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3550:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3597:8:1"
									},
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3568:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3560:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:17:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "3615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:9:1"
									},
									"scope": 595,
									"src": "3541:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "3974:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 148,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "3994:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3994:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "4008:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 151,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "4019:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 147,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "3984:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3984:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "3984:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4043:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 146,
												"id": 155,
												"nodeType": "Return",
												"src": "4036:11:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3672:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 143,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 142,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "3946:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3946:12:1"
										}
									],
									"name": "transfer",
									"nameLocation": "3878:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3937:8:1"
									},
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3895:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3887:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3914:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3906:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:35:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "3968:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3968:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:6:1"
									},
									"scope": 595,
									"src": "3869:185:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										632
									],
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "4210:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 168,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "4227:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 170,
														"indexExpression": {
															"id": 169,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4239:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4227:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 172,
													"indexExpression": {
														"id": 171,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "4246:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4227:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "4220:34:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "4060:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4121:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4183:8:1"
									},
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4139:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4131:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4131:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4154:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4146:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4130:32:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "4201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4200:9:1"
									},
									"scope": 595,
									"src": "4112:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										642
									],
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "4488:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 187,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "4507:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4507:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4521:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4530:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 186,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "4498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4498:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "4498:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4554:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 185,
												"id": 194,
												"nodeType": "Return",
												"src": "4547:11:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "4267:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4408:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4464:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4424:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4416:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4416:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4441:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4433:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4433:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4415:33:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:6:1"
									},
									"scope": 595,
									"src": "4399:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										654
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "5187:336:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 212,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5207:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 213,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5215:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 214,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "5226:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "5197:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5197:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "5197:36:1"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5252:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 245,
														"src": "5244:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5244:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 219,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "5271:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 221,
														"indexExpression": {
															"id": 220,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5283:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5271:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 224,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 222,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "5291:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5291:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5271:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5244:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 227,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "5322:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 228,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "5342:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5322:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5350:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5314:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "5314:79:1"
											},
											{
												"id": 242,
												"nodeType": "UncheckedBlock",
												"src": "5403:92:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 234,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "5436:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 235,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "5444:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5444:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 237,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "5458:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 238,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "5477:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5458:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 233,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "5427:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5427:57:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 241,
														"nodeType": "ExpressionStatement",
														"src": "5427:57:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5512:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 210,
												"id": 244,
												"nodeType": "Return",
												"src": "5505:11:1"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4571:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "onlyApproved",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "5159:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5159:12:1"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5041:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 205,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5150:8:1"
									},
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5071:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5063:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5063:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5095:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5087:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5122:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5114:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5053:81:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "5181:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5181:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:6:1"
									},
									"scope": 595,
									"src": "5032:491:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "6012:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 257,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6031:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6031:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 259,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "6045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 260,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "6054:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 263,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 261,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "6066:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6066:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6054:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 265,
																"indexExpression": {
																	"id": 264,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "6080:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6054:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 266,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "6091:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6054:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 256,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "6022:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6022:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "6022:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6119:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 255,
												"id": 271,
												"nodeType": "Return",
												"src": "6112:11:1"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "5529:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5953:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5945:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5970:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5962:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5962:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5944:37:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "6006:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6006:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:6:1"
									},
									"scope": 595,
									"src": "5918:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "6716:306:1",
										"statements": [
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6734:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "6726:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 285,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "6753:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 288,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 286,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "6765:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6753:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 290,
													"indexExpression": {
														"id": 289,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6779:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6753:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6726:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 293,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "6805:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 294,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "6825:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6805:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6842:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6797:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6797:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "6797:85:1"
											},
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6892:102:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 300,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "6925:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6925:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 302,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "6939:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 303,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "6948:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 304,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "6967:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6948:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 299,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "6916:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6916:67:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 307,
														"nodeType": "ExpressionStatement",
														"src": "6916:67:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7011:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 282,
												"id": 310,
												"nodeType": "Return",
												"src": "7004:11:1"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "6136:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6626:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6652:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6644:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6669:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6661:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:42:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "6710:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6710:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6709:6:1"
									},
									"scope": 595,
									"src": "6617:405:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "7613:596:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 323,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "7631:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7649:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7641:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 324,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7641:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7641:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7631:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7653:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7623:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "7623:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 333,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "7711:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7732:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7724:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 334,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7724:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7724:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7711:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7736:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7703:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7703:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "7703:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "7806:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "7814:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "7825:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7785:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7785:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "7785:47:1"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7851:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 388,
														"src": "7843:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7843:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 353,
												"initialValue": {
													"baseExpression": {
														"id": 350,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "7867:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 352,
													"indexExpression": {
														"id": 351,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "7877:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7867:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7843:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "7902:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 356,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "7919:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7902:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7927:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7894:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7894:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "7894:74:1"
											},
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "7978:77:1",
												"statements": [
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 361,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "8002:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 363,
																"indexExpression": {
																	"id": 362,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "8012:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8002:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 364,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8022:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 365,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "8038:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8022:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8002:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "8002:42:1"
													}
												]
											},
											{
												"expression": {
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 370,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8064:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 372,
														"indexExpression": {
															"id": 371,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "8074:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8064:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 373,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "8088:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8064:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "8064:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 377,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "8119:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "8127:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "8138:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 376,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "8110:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8110:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "EmitStatement",
												"src": "8105:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "8176:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "8184:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "8195:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8156:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8156:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "8156:46:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "7028:463:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7505:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7532:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "7524:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7524:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7556:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "7548:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7583:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "7575:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7575:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7514:81:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7613:0:1"
									},
									"scope": 595,
									"src": "7496:713:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "8550:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 398,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "8568:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8587:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8579:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8579:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8579:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8568:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8591:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 397,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8560:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8560:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "8560:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8665:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8657:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8657:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8657:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8669:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8678:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 407,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8636:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8636:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "8636:49:1"
											},
											{
												"expression": {
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 416,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "8696:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 417,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "8712:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8696:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "8696:22:1"
											},
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 420,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "8728:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 422,
														"indexExpression": {
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8738:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8728:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 423,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "8750:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8728:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "8728:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8788:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8780:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8780:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8780:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8792:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8801:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 426,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "8771:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8771:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "EmitStatement",
												"src": "8766:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8847:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8839:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8839:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8839:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8851:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8860:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8819:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8819:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "8819:48:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "8215:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8494:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8508:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "8500:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8500:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8525:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "8517:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8499:33:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8550:0:1"
									},
									"scope": 595,
									"src": "8485:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "9259:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 448,
																"src": "9277:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9296:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9288:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 455,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9288:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9288:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9277:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9300:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9269:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9269:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "9269:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9385:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9377:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9377:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9377:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9389:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 463,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9347:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "9347:49:1"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9415:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "9407:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"baseExpression": {
														"id": 474,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "9432:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 476,
													"indexExpression": {
														"id": 475,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "9442:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9432:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9407:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "9468:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 480,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "9486:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9468:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9494:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9460:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "9460:71:1"
											},
											{
												"id": 493,
												"nodeType": "UncheckedBlock",
												"src": "9541:79:1",
												"statements": [
													{
														"expression": {
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 485,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "9565:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 487,
																"indexExpression": {
																	"id": 486,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "9575:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9565:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 488,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "9586:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 489,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "9603:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9586:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9565:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 492,
														"nodeType": "ExpressionStatement",
														"src": "9565:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "9629:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "9645:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9629:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "9629:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 499,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9676:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9693:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9685:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9685:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9685:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9697:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 498,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "9667:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9667:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "EmitStatement",
												"src": "9662:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 508,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "9735:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9752:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9744:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9744:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9744:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9756:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9715:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9715:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "9715:48:1"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "8880:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9203:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9217:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "9209:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9209:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9234:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "9226:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9208:33:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9259:0:1"
									},
									"scope": 595,
									"src": "9194:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10306:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "10324:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10341:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10333:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 529,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10333:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10324:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10345:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10316:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10316:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "10316:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "10402:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10421:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10413:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10413:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10413:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10402:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10425:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10394:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10394:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "10394:68:1"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 547,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "10473:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 550,
															"indexExpression": {
																"id": 548,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "10485:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10473:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 551,
														"indexExpression": {
															"id": 549,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10492:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10473:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 552,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "10503:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10473:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "10473:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 556,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "10533:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10549:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "10524:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10524:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "EmitStatement",
												"src": "10519:37:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "9776:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10228:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10220:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10220:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10251:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10243:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10243:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10276:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10268:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10268:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10210:78:1"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10306:0:1"
									},
									"scope": 595,
									"src": "10193:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11266:2:1",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "10569:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11156:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11194:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11186:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11216:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11208:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11208:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11236:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11228:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11228:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11176:72:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11266:0:1"
									},
									"scope": 595,
									"src": "11147:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "11974:2:1",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11274:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11865:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11902:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "11894:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11894:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11924:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "11916:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11916:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11944:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "11936:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11884:72:1"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11974:0:1"
									},
									"scope": 595,
									"src": "11856:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "12047:123:1",
										"statements": [
											{
												"expression": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 589,
														"name": "approvedTransferor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "12135:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 590,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "12156:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12135:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "12135:28:1"
											}
										]
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovedTokenTransferor",
									"nameLocation": "11992:27:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12028:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "12020:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12019:17:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12047:0:1"
									},
									"scope": 595,
									"src": "11983:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 596,
							"src": "1367:10806:1",
							"usedErrors": []
						}
					],
					"src": "90:12084:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							673
						]
					},
					"id": 674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 598,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 673,
							"linearizedBaseContracts": [
								673
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "211:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "291:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "302:2:2"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "328:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "327:9:2"
									},
									"scope": 673,
									"src": "282:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "343:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "429:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "447:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "439:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "438:17:2"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "479:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:9:2"
									},
									"scope": 673,
									"src": "420:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "494:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "717:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "734:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "726:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:35:2"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 673,
									"src": "708:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 673,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 673,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1876:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2186:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2216:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2208:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2240:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2232:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2267:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2259:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2198:81:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "2298:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2298:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:6:2"
									},
									"scope": 673,
									"src": "2177:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "2310:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 663,
									"name": "Transfer",
									"nameLocation": "2479:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2504:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2488:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2526:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2510:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2538:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2530:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2487:57:2"
									},
									"src": "2473:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "2551:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 672,
									"name": "Approval",
									"nameLocation": "2710:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2719:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2742:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2775:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2767:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:63:2"
									},
									"src": "2704:78:2"
								}
							],
							"scope": 674,
							"src": "187:2597:2",
							"usedErrors": []
						}
					],
					"src": "91:2694:2"
				},
				"id": 2
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							673
						],
						"IERC20Metadata": [
							698
						]
					},
					"id": 699,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 674,
							"src": "135:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 678,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 673,
										"src": "304:6:3"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "304:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "159:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 698,
							"linearizedBaseContracts": [
								698,
								673
							],
							"name": "IERC20Metadata",
							"nameLocation": "286:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "317:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "385:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:3"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "415:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:3"
									},
									"scope": 698,
									"src": "376:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "436:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "506:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "538:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "538:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:15:3"
									},
									"scope": 698,
									"src": "497:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "559:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "638:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "672:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 694,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "672:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:7:3"
									},
									"scope": 698,
									"src": "629:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 699,
							"src": "276:405:3",
							"usedErrors": []
						}
					],
					"src": "110:572:3"
				},
				"id": 3
			}
		}
	}
}