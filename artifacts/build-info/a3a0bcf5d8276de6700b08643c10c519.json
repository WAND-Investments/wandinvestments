{
	"id": "a3a0bcf5d8276de6700b08643c10c519",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"WandAirdrop.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./Ownable.sol\";\r\n\r\ncontract testAirDrop is Ownable{ \r\n\r\n    //TODO: Update airdropped balance of tUSDC \r\n    //mapping(address => uint256) public airdroppedBal;\r\n    struct btonsLocked {  \r\n        uint256 timeInit;  \r\n        uint256 amounts;  \r\n        }\r\n    mapping(address => btonsLocked) public airdroppedBal;\r\n    IERC20 public USDC;\r\n    IERC20 public Bton;\r\n    constructor(address _btonAddr) {\r\n        USDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B);\r\n        Bton = IERC20(_btonAddr);\r\n        }\r\n\r\n   \r\n    function startAirDrop() external\r\n    {\r\n        airdroppedBal[msg.sender].timeInit = block.timestamp;\r\n     //TODO: Check amount of BTON Held\r\n\r\n    }\r\n\r\n    function calcAirdrop() public { //TODO: Make this internal and this has to be called in withdraw to update.\r\n        uint256 deltaTimeFromInit;\r\n        uint256 epochs;\r\n        uint256 airdropAmt;\r\n    deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit;\r\n    epochs = deltaTimeFromInit / 180; //test\r\n    airdropAmt = epochs *1;\r\n    airdroppedBal[msg.sender].amounts = airdropAmt;\r\n\r\n    }\r\n    function withdrawAirDrop() public { //withdraw everything\r\n        require (airdroppedBal[msg.sender].amounts >0, \"You dont have anything\");\r\n\r\n        airdroppedBal[msg.sender].amounts =0;\r\n        airdroppedBal[msg.sender].timeInit = block.timestamp;\r\n        //Bton.transferFrom(msg.sender,0x000000000000000000000000000000000000dEaD, _amtWithdraw);\r\n        //TODO: Transfer USDC from this to the account\r\n    }\r\n\r\n\r\n\r\n}\r\n"
			},
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"WandAirdrop.sol": {
				"testAirDrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_btonAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Bton",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "airdroppedBal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timeInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amounts",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calcAirdrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirDrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAirDrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"WandAirdrop.sol\":80:1592  contract testAirDrop is Ownable{ \r... */\n  mstore(0x40, 0x80)\n    /* \"WandAirdrop.sol\":432:578  constructor(address _btonAddr) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"Ownable.sol\":933:945  _msgSender() */\n  tag_8\n    /* \"Ownable.sol\":933:943  _msgSender */\n  shl(0x20, tag_9)\n    /* \"Ownable.sol\":933:945  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"Ownable.sol\":914:932  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"Ownable.sol\":914:946  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"WandAirdrop.sol\":488:530  0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B */\n  0xd7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b\n    /* \"WandAirdrop.sol\":474:478  USDC */\n  0x02\n  0x00\n    /* \"WandAirdrop.sol\":474:531  USDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandAirdrop.sol\":556:565  _btonAddr */\n  dup1\n    /* \"WandAirdrop.sol\":542:546  Bton */\n  0x03\n  0x00\n    /* \"WandAirdrop.sol\":542:566  Bton = IERC20(_btonAddr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandAirdrop.sol\":432:578  constructor(address _btonAddr) {\r... */\n  pop\n    /* \"WandAirdrop.sol\":80:1592  contract testAirDrop is Ownable{ \r... */\n  jump(tag_12)\n    /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"Context.sol\":693:700  address */\n  0x00\n    /* \"Context.sol\":719:729  msg.sender */\n  caller\n    /* \"Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"Ownable.sol\":2336:2352  address oldOwner */\n  0x00\n    /* \"Ownable.sol\":2355:2361  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":2336:2361  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Ownable.sol\":2380:2388  newOwner */\n  dup2\n    /* \"Ownable.sol\":2371:2377  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":2371:2388  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":2434:2442  newOwner */\n  dup2\n    /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":2424:2432  oldOwner */\n  dup2\n    /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":2326:2450  {... */\n  pop\n    /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_16:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_18\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":243:362   */\ntag_21:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_24\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_16\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_27:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_29\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_30:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_23:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_19:\n    /* \"#utility.yul\":1147:1171   */\n  tag_36\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_27\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_37:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"WandAirdrop.sol\":80:1592  contract testAirDrop is Ownable{ \r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"WandAirdrop.sol\":80:1592  contract testAirDrop is Ownable{ \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x77af3226\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x77af3226\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x89a30271\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa87c70fa\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x02699df8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x283a1e16\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x754fe93e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"WandAirdrop.sol\":750:1163  function calcAirdrop() public { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"WandAirdrop.sol\":591:742  function startAirDrop() external\r... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"WandAirdrop.sol\":407:425  IERC20 public Bton */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandAirdrop.sol\":1169:1583  function withdrawAirDrop() public { //withdraw everything\r... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"WandAirdrop.sol\":382:400  IERC20 public USDC */\n    tag_8:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandAirdrop.sol\":323:375  mapping(address => btonsLocked) public airdroppedBal */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"WandAirdrop.sol\":750:1163  function calcAirdrop() public { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n    tag_14:\n        /* \"WandAirdrop.sol\":867:892  uint256 deltaTimeFromInit */\n      0x00\n        /* \"WandAirdrop.sol\":903:917  uint256 epochs */\n      dup1\n        /* \"WandAirdrop.sol\":928:946  uint256 airdropAmt */\n      0x00\n        /* \"WandAirdrop.sol\":991:1004  airdroppedBal */\n      0x01\n        /* \"WandAirdrop.sol\":991:1016  airdroppedBal[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1005:1015  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":991:1016  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":991:1025  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n      sload\n        /* \"WandAirdrop.sol\":973:988  block.timestamp */\n      timestamp\n        /* \"WandAirdrop.sol\":973:1025  block.timestamp - airdroppedBal[msg.sender].timeInit */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"WandAirdrop.sol\":953:1025  deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit */\n      swap3\n      pop\n        /* \"WandAirdrop.sol\":1061:1064  180 */\n      0xb4\n        /* \"WandAirdrop.sol\":1041:1058  deltaTimeFromInit */\n      dup4\n        /* \"WandAirdrop.sol\":1041:1064  deltaTimeFromInit / 180 */\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"WandAirdrop.sol\":1032:1064  epochs = deltaTimeFromInit / 180 */\n      swap2\n      pop\n        /* \"WandAirdrop.sol\":1099:1100  1 */\n      0x01\n        /* \"WandAirdrop.sol\":1091:1097  epochs */\n      dup3\n        /* \"WandAirdrop.sol\":1091:1100  epochs *1 */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"WandAirdrop.sol\":1078:1100  airdropAmt = epochs *1 */\n      swap1\n      pop\n        /* \"WandAirdrop.sol\":1143:1153  airdropAmt */\n      dup1\n        /* \"WandAirdrop.sol\":1107:1120  airdroppedBal */\n      0x01\n        /* \"WandAirdrop.sol\":1107:1132  airdroppedBal[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1121:1131  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":1107:1132  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":1107:1140  airdroppedBal[msg.sender].amounts */\n      0x01\n      add\n        /* \"WandAirdrop.sol\":1107:1153  airdroppedBal[msg.sender].amounts = airdropAmt */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":780:1163  { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n      pop\n      pop\n      pop\n        /* \"WandAirdrop.sol\":750:1163  function calcAirdrop() public { //TODO: Make this internal and this has to be called in withdraw to update.\r... */\n      jump\t// out\n        /* \"WandAirdrop.sol\":591:742  function startAirDrop() external\r... */\n    tag_16:\n        /* \"WandAirdrop.sol\":677:692  block.timestamp */\n      timestamp\n        /* \"WandAirdrop.sol\":640:653  airdroppedBal */\n      0x01\n        /* \"WandAirdrop.sol\":640:665  airdroppedBal[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":654:664  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":640:665  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":640:674  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n        /* \"WandAirdrop.sol\":640:692  airdroppedBal[msg.sender].timeInit = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":591:742  function startAirDrop() external\r... */\n      jump\t// out\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_50\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_51\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_50:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_52\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_29\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_52:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      tag_57\n        /* \"Ownable.sol\":1752:1753  0 */\n      0x00\n        /* \"Ownable.sol\":1725:1743  _transferOwnership */\n      tag_58\n        /* \"Ownable.sol\":1725:1755  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_57:\n        /* \"Ownable.sol\":1661:1762  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"WandAirdrop.sol\":407:425  IERC20 public Bton */\n    tag_20:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandAirdrop.sol\":1169:1583  function withdrawAirDrop() public { //withdraw everything\r... */\n    tag_24:\n        /* \"WandAirdrop.sol\":1280:1281  0 */\n      0x00\n        /* \"WandAirdrop.sol\":1245:1258  airdroppedBal */\n      0x01\n        /* \"WandAirdrop.sol\":1245:1270  airdroppedBal[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1259:1269  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":1245:1270  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":1245:1278  airdroppedBal[msg.sender].amounts */\n      0x01\n      add\n      sload\n        /* \"WandAirdrop.sol\":1245:1281  airdroppedBal[msg.sender].amounts >0 */\n      gt\n        /* \"WandAirdrop.sol\":1236:1308  require (airdroppedBal[msg.sender].amounts >0, \"You dont have anything\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"WandAirdrop.sol\":1356:1357  0 */\n      0x00\n        /* \"WandAirdrop.sol\":1321:1334  airdroppedBal */\n      0x01\n        /* \"WandAirdrop.sol\":1321:1346  airdroppedBal[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1335:1345  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":1321:1346  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":1321:1354  airdroppedBal[msg.sender].amounts */\n      0x01\n      add\n        /* \"WandAirdrop.sol\":1321:1357  airdroppedBal[msg.sender].amounts =0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":1405:1420  block.timestamp */\n      timestamp\n        /* \"WandAirdrop.sol\":1368:1381  airdroppedBal */\n      0x01\n        /* \"WandAirdrop.sol\":1368:1393  airdroppedBal[msg.sender] */\n      0x00\n        /* \"WandAirdrop.sol\":1382:1392  msg.sender */\n      caller\n        /* \"WandAirdrop.sol\":1368:1393  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"WandAirdrop.sol\":1368:1402  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n        /* \"WandAirdrop.sol\":1368:1420  airdroppedBal[msg.sender].timeInit = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"WandAirdrop.sol\":1169:1583  function withdrawAirDrop() public { //withdraw everything\r... */\n      jump\t// out\n        /* \"WandAirdrop.sol\":382:400  IERC20 public USDC */\n    tag_26:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n    tag_29:\n        /* \"Ownable.sol\":1075:1082  address */\n      0x00\n        /* \"Ownable.sol\":1101:1107  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1094:1107  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1029:1114  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"WandAirdrop.sol\":323:375  mapping(address => btonsLocked) public airdroppedBal */\n    tag_35:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_40:\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      tag_65\n        /* \"Ownable.sol\":1252:1262  _msgSender */\n      tag_51\n        /* \"Ownable.sol\":1252:1264  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1241:1248  owner() */\n      tag_66\n        /* \"Ownable.sol\":1241:1246  owner */\n      tag_29\n        /* \"Ownable.sol\":1241:1248  owner() */\n      jump\t// in\n    tag_66:\n        /* \"Ownable.sol\":1241:1264  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1233:1301  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_55\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"Ownable.sol\":2019:2020  0 */\n      0x00\n        /* \"Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1999:2007  newOwner */\n      dup2\n        /* \"Ownable.sol\":1999:2021  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Ownable.sol\":1991:2064  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      tag_73\n        /* \"Ownable.sol\":2093:2101  newOwner */\n      dup2\n        /* \"Ownable.sol\":2074:2092  _transferOwnership */\n      tag_58\n        /* \"Ownable.sol\":2074:2102  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_73:\n        /* \"Ownable.sol\":1911:2109  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_51:\n        /* \"Context.sol\":693:700  address */\n      0x00\n        /* \"Context.sol\":719:729  msg.sender */\n      caller\n        /* \"Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_58:\n        /* \"Ownable.sol\":2336:2352  address oldOwner */\n      0x00\n        /* \"Ownable.sol\":2355:2361  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2336:2361  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":2380:2388  newOwner */\n      dup2\n        /* \"Ownable.sol\":2371:2377  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":2371:2388  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":2434:2442  newOwner */\n      dup2\n        /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2424:2432  oldOwner */\n      dup2\n        /* \"Ownable.sol\":2403:2443  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":2326:2450  {... */\n      pop\n        /* \"Ownable.sol\":2263:2450  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_77:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_79\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_34:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":228:347   */\n    tag_82:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_85\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_77\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_86:\n        /* \"#utility.yul\":574:598   */\n      tag_88\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:768   */\n    tag_90:\n        /* \"#utility.yul\":711:761   */\n      tag_92\n        /* \"#utility.yul\":755:760   */\n      dup2\n        /* \"#utility.yul\":711:761   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:762   */\n      mstore\n        /* \"#utility.yul\":611:768   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:1140   */\n    tag_94:\n        /* \"#utility.yul\":916:919   */\n      0x00\n        /* \"#utility.yul\":937:1004   */\n      tag_96\n        /* \"#utility.yul\":1001:1003   */\n      0x26\n        /* \"#utility.yul\":996:999   */\n      dup4\n        /* \"#utility.yul\":937:1004   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":930:1004   */\n      swap2\n      pop\n        /* \"#utility.yul\":1013:1106   */\n      tag_98\n        /* \"#utility.yul\":1102:1105   */\n      dup3\n        /* \"#utility.yul\":1013:1106   */\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1131:1133   */\n      0x40\n        /* \"#utility.yul\":1126:1129   */\n      dup3\n        /* \"#utility.yul\":1122:1134   */\n      add\n        /* \"#utility.yul\":1115:1134   */\n      swap1\n      pop\n        /* \"#utility.yul\":774:1140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1146:1512   */\n    tag_100:\n        /* \"#utility.yul\":1288:1291   */\n      0x00\n        /* \"#utility.yul\":1309:1376   */\n      tag_102\n        /* \"#utility.yul\":1373:1375   */\n      0x20\n        /* \"#utility.yul\":1368:1371   */\n      dup4\n        /* \"#utility.yul\":1309:1376   */\n      tag_97\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1302:1376   */\n      swap2\n      pop\n        /* \"#utility.yul\":1385:1478   */\n      tag_103\n        /* \"#utility.yul\":1474:1477   */\n      dup3\n        /* \"#utility.yul\":1385:1478   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1503:1505   */\n      0x20\n        /* \"#utility.yul\":1498:1501   */\n      dup3\n        /* \"#utility.yul\":1494:1506   */\n      add\n        /* \"#utility.yul\":1487:1506   */\n      swap1\n      pop\n        /* \"#utility.yul\":1146:1512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1884   */\n    tag_105:\n        /* \"#utility.yul\":1660:1663   */\n      0x00\n        /* \"#utility.yul\":1681:1748   */\n      tag_107\n        /* \"#utility.yul\":1745:1747   */\n      0x16\n        /* \"#utility.yul\":1740:1743   */\n      dup4\n        /* \"#utility.yul\":1681:1748   */\n      tag_97\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1674:1748   */\n      swap2\n      pop\n        /* \"#utility.yul\":1757:1850   */\n      tag_108\n        /* \"#utility.yul\":1846:1849   */\n      dup3\n        /* \"#utility.yul\":1757:1850   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1875:1877   */\n      0x20\n        /* \"#utility.yul\":1870:1873   */\n      dup3\n        /* \"#utility.yul\":1866:1878   */\n      add\n        /* \"#utility.yul\":1859:1878   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1890:2008   */\n    tag_110:\n        /* \"#utility.yul\":1977:2001   */\n      tag_112\n        /* \"#utility.yul\":1995:2000   */\n      dup2\n        /* \"#utility.yul\":1977:2001   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1972:1975   */\n      dup3\n        /* \"#utility.yul\":1965:2002   */\n      mstore\n        /* \"#utility.yul\":1890:2008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2014:2236   */\n    tag_31:\n        /* \"#utility.yul\":2107:2111   */\n      0x00\n        /* \"#utility.yul\":2145:2147   */\n      0x20\n        /* \"#utility.yul\":2134:2143   */\n      dup3\n        /* \"#utility.yul\":2130:2148   */\n      add\n        /* \"#utility.yul\":2122:2148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2158:2229   */\n      tag_115\n        /* \"#utility.yul\":2226:2227   */\n      0x00\n        /* \"#utility.yul\":2215:2224   */\n      dup4\n        /* \"#utility.yul\":2211:2228   */\n      add\n        /* \"#utility.yul\":2202:2208   */\n      dup5\n        /* \"#utility.yul\":2158:2229   */\n      tag_86\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2014:2236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2242:2490   */\n    tag_22:\n        /* \"#utility.yul\":2348:2352   */\n      0x00\n        /* \"#utility.yul\":2386:2388   */\n      0x20\n        /* \"#utility.yul\":2375:2384   */\n      dup3\n        /* \"#utility.yul\":2371:2389   */\n      add\n        /* \"#utility.yul\":2363:2389   */\n      swap1\n      pop\n        /* \"#utility.yul\":2399:2483   */\n      tag_117\n        /* \"#utility.yul\":2480:2481   */\n      0x00\n        /* \"#utility.yul\":2469:2478   */\n      dup4\n        /* \"#utility.yul\":2465:2482   */\n      add\n        /* \"#utility.yul\":2456:2462   */\n      dup5\n        /* \"#utility.yul\":2399:2483   */\n      tag_90\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2242:2490   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2496:2915   */\n    tag_72:\n        /* \"#utility.yul\":2662:2666   */\n      0x00\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup3\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2677:2703   */\n      swap1\n      pop\n        /* \"#utility.yul\":2749:2758   */\n      dup2\n        /* \"#utility.yul\":2743:2747   */\n      dup2\n        /* \"#utility.yul\":2739:2759   */\n      sub\n        /* \"#utility.yul\":2735:2736   */\n      0x00\n        /* \"#utility.yul\":2724:2733   */\n      dup4\n        /* \"#utility.yul\":2720:2737   */\n      add\n        /* \"#utility.yul\":2713:2760   */\n      mstore\n        /* \"#utility.yul\":2777:2908   */\n      tag_119\n        /* \"#utility.yul\":2903:2907   */\n      dup2\n        /* \"#utility.yul\":2777:2908   */\n      tag_94\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2769:2908   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2921:3340   */\n    tag_55:\n        /* \"#utility.yul\":3087:3091   */\n      0x00\n        /* \"#utility.yul\":3125:3127   */\n      0x20\n        /* \"#utility.yul\":3114:3123   */\n      dup3\n        /* \"#utility.yul\":3110:3128   */\n      add\n        /* \"#utility.yul\":3102:3128   */\n      swap1\n      pop\n        /* \"#utility.yul\":3174:3183   */\n      dup2\n        /* \"#utility.yul\":3168:3172   */\n      dup2\n        /* \"#utility.yul\":3164:3184   */\n      sub\n        /* \"#utility.yul\":3160:3161   */\n      0x00\n        /* \"#utility.yul\":3149:3158   */\n      dup4\n        /* \"#utility.yul\":3145:3162   */\n      add\n        /* \"#utility.yul\":3138:3185   */\n      mstore\n        /* \"#utility.yul\":3202:3333   */\n      tag_121\n        /* \"#utility.yul\":3328:3332   */\n      dup2\n        /* \"#utility.yul\":3202:3333   */\n      tag_100\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3194:3333   */\n      swap1\n      pop\n        /* \"#utility.yul\":2921:3340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3346:3765   */\n    tag_62:\n        /* \"#utility.yul\":3512:3516   */\n      0x00\n        /* \"#utility.yul\":3550:3552   */\n      0x20\n        /* \"#utility.yul\":3539:3548   */\n      dup3\n        /* \"#utility.yul\":3535:3553   */\n      add\n        /* \"#utility.yul\":3527:3553   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3608   */\n      dup2\n        /* \"#utility.yul\":3593:3597   */\n      dup2\n        /* \"#utility.yul\":3589:3609   */\n      sub\n        /* \"#utility.yul\":3585:3586   */\n      0x00\n        /* \"#utility.yul\":3574:3583   */\n      dup4\n        /* \"#utility.yul\":3570:3587   */\n      add\n        /* \"#utility.yul\":3563:3610   */\n      mstore\n        /* \"#utility.yul\":3627:3758   */\n      tag_123\n        /* \"#utility.yul\":3753:3757   */\n      dup2\n        /* \"#utility.yul\":3627:3758   */\n      tag_105\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3619:3758   */\n      swap1\n      pop\n        /* \"#utility.yul\":3346:3765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:4103   */\n    tag_37:\n        /* \"#utility.yul\":3892:3896   */\n      0x00\n        /* \"#utility.yul\":3930:3932   */\n      0x40\n        /* \"#utility.yul\":3919:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3933   */\n      add\n        /* \"#utility.yul\":3907:3933   */\n      swap1\n      pop\n        /* \"#utility.yul\":3943:4014   */\n      tag_125\n        /* \"#utility.yul\":4011:4012   */\n      0x00\n        /* \"#utility.yul\":4000:4009   */\n      dup4\n        /* \"#utility.yul\":3996:4013   */\n      add\n        /* \"#utility.yul\":3987:3993   */\n      dup6\n        /* \"#utility.yul\":3943:4014   */\n      tag_110\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4024:4096   */\n      tag_126\n        /* \"#utility.yul\":4092:4094   */\n      0x20\n        /* \"#utility.yul\":4081:4090   */\n      dup4\n        /* \"#utility.yul\":4077:4095   */\n      add\n        /* \"#utility.yul\":4068:4074   */\n      dup5\n        /* \"#utility.yul\":4024:4096   */\n      tag_110\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3771:4103   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4359   */\n    tag_97:\n        /* \"#utility.yul\":4274:4285   */\n      0x00\n        /* \"#utility.yul\":4308:4314   */\n      dup3\n        /* \"#utility.yul\":4303:4306   */\n      dup3\n        /* \"#utility.yul\":4296:4315   */\n      mstore\n        /* \"#utility.yul\":4348:4352   */\n      0x20\n        /* \"#utility.yul\":4343:4346   */\n      dup3\n        /* \"#utility.yul\":4339:4353   */\n      add\n        /* \"#utility.yul\":4324:4353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4365:4550   */\n    tag_45:\n        /* \"#utility.yul\":4405:4406   */\n      0x00\n        /* \"#utility.yul\":4422:4442   */\n      tag_131\n        /* \"#utility.yul\":4440:4441   */\n      dup3\n        /* \"#utility.yul\":4422:4442   */\n      tag_113\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4417:4442   */\n      swap2\n      pop\n        /* \"#utility.yul\":4456:4476   */\n      tag_132\n        /* \"#utility.yul\":4474:4475   */\n      dup4\n        /* \"#utility.yul\":4456:4476   */\n      tag_113\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4451:4476   */\n      swap3\n      pop\n        /* \"#utility.yul\":4495:4496   */\n      dup3\n        /* \"#utility.yul\":4485:4520   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":4500:4518   */\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4485:4520   */\n    tag_133:\n        /* \"#utility.yul\":4542:4543   */\n      dup3\n        /* \"#utility.yul\":4539:4540   */\n      dup3\n        /* \"#utility.yul\":4535:4544   */\n      div\n        /* \"#utility.yul\":4530:4544   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4556:4904   */\n    tag_47:\n        /* \"#utility.yul\":4596:4603   */\n      0x00\n        /* \"#utility.yul\":4619:4639   */\n      tag_137\n        /* \"#utility.yul\":4637:4638   */\n      dup3\n        /* \"#utility.yul\":4619:4639   */\n      tag_113\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4614:4639   */\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4673   */\n      tag_138\n        /* \"#utility.yul\":4671:4672   */\n      dup4\n        /* \"#utility.yul\":4653:4673   */\n      tag_113\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4648:4673   */\n      swap3\n      pop\n        /* \"#utility.yul\":4841:4842   */\n      dup2\n        /* \"#utility.yul\":4773:4839   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4769:4843   */\n      div\n        /* \"#utility.yul\":4766:4767   */\n      dup4\n        /* \"#utility.yul\":4763:4844   */\n      gt\n        /* \"#utility.yul\":4758:4759   */\n      dup3\n        /* \"#utility.yul\":4751:4760   */\n      iszero\n        /* \"#utility.yul\":4744:4761   */\n      iszero\n        /* \"#utility.yul\":4740:4845   */\n      and\n        /* \"#utility.yul\":4737:4868   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":4848:4866   */\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4737:4868   */\n    tag_139:\n        /* \"#utility.yul\":4896:4897   */\n      dup3\n        /* \"#utility.yul\":4893:4894   */\n      dup3\n        /* \"#utility.yul\":4889:4898   */\n      mul\n        /* \"#utility.yul\":4878:4898   */\n      swap1\n      pop\n        /* \"#utility.yul\":4556:4904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5101   */\n    tag_43:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4970:4990   */\n      tag_143\n        /* \"#utility.yul\":4988:4989   */\n      dup3\n        /* \"#utility.yul\":4970:4990   */\n      tag_113\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4965:4990   */\n      swap2\n      pop\n        /* \"#utility.yul\":5004:5024   */\n      tag_144\n        /* \"#utility.yul\":5022:5023   */\n      dup4\n        /* \"#utility.yul\":5004:5024   */\n      tag_113\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4999:5024   */\n      swap3\n      pop\n        /* \"#utility.yul\":5043:5044   */\n      dup3\n        /* \"#utility.yul\":5040:5041   */\n      dup3\n        /* \"#utility.yul\":5037:5045   */\n      lt\n        /* \"#utility.yul\":5034:5068   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":5048:5066   */\n      tag_146\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5034:5068   */\n    tag_145:\n        /* \"#utility.yul\":5093:5094   */\n      dup3\n        /* \"#utility.yul\":5090:5091   */\n      dup3\n        /* \"#utility.yul\":5086:5095   */\n      sub\n        /* \"#utility.yul\":5078:5095   */\n      swap1\n      pop\n        /* \"#utility.yul\":4910:5101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5107:5203   */\n    tag_89:\n        /* \"#utility.yul\":5144:5151   */\n      0x00\n        /* \"#utility.yul\":5173:5197   */\n      tag_148\n        /* \"#utility.yul\":5191:5196   */\n      dup3\n        /* \"#utility.yul\":5173:5197   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5162:5197   */\n      swap1\n      pop\n        /* \"#utility.yul\":5107:5203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5209:5335   */\n    tag_149:\n        /* \"#utility.yul\":5246:5253   */\n      0x00\n        /* \"#utility.yul\":5286:5328   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5279:5284   */\n      dup3\n        /* \"#utility.yul\":5275:5329   */\n      and\n        /* \"#utility.yul\":5264:5329   */\n      swap1\n      pop\n        /* \"#utility.yul\":5209:5335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5418   */\n    tag_113:\n        /* \"#utility.yul\":5378:5385   */\n      0x00\n        /* \"#utility.yul\":5407:5412   */\n      dup2\n        /* \"#utility.yul\":5396:5412   */\n      swap1\n      pop\n        /* \"#utility.yul\":5341:5418   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5424:5563   */\n    tag_93:\n        /* \"#utility.yul\":5487:5496   */\n      0x00\n        /* \"#utility.yul\":5520:5557   */\n      tag_153\n        /* \"#utility.yul\":5551:5556   */\n      dup3\n        /* \"#utility.yul\":5520:5557   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5507:5557   */\n      swap1\n      pop\n        /* \"#utility.yul\":5424:5563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5569:5695   */\n    tag_154:\n        /* \"#utility.yul\":5619:5628   */\n      0x00\n        /* \"#utility.yul\":5652:5689   */\n      tag_156\n        /* \"#utility.yul\":5683:5688   */\n      dup3\n        /* \"#utility.yul\":5652:5689   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5639:5689   */\n      swap1\n      pop\n        /* \"#utility.yul\":5569:5695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5701:5814   */\n    tag_157:\n        /* \"#utility.yul\":5751:5760   */\n      0x00\n        /* \"#utility.yul\":5784:5808   */\n      tag_159\n        /* \"#utility.yul\":5802:5807   */\n      dup3\n        /* \"#utility.yul\":5784:5808   */\n      tag_149\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5771:5808   */\n      swap1\n      pop\n        /* \"#utility.yul\":5701:5814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5820:6000   */\n    tag_141:\n        /* \"#utility.yul\":5868:5945   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5858:5946   */\n      mstore\n        /* \"#utility.yul\":5965:5969   */\n      0x11\n        /* \"#utility.yul\":5962:5963   */\n      0x04\n        /* \"#utility.yul\":5955:5970   */\n      mstore\n        /* \"#utility.yul\":5989:5993   */\n      0x24\n        /* \"#utility.yul\":5986:5987   */\n      0x00\n        /* \"#utility.yul\":5979:5994   */\n      revert\n        /* \"#utility.yul\":6006:6186   */\n    tag_135:\n        /* \"#utility.yul\":6054:6131   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6051:6052   */\n      0x00\n        /* \"#utility.yul\":6044:6132   */\n      mstore\n        /* \"#utility.yul\":6151:6155   */\n      0x12\n        /* \"#utility.yul\":6148:6149   */\n      0x04\n        /* \"#utility.yul\":6141:6156   */\n      mstore\n        /* \"#utility.yul\":6175:6179   */\n      0x24\n        /* \"#utility.yul\":6172:6173   */\n      0x00\n        /* \"#utility.yul\":6165:6180   */\n      revert\n        /* \"#utility.yul\":6315:6432   */\n    tag_84:\n        /* \"#utility.yul\":6424:6425   */\n      0x00\n        /* \"#utility.yul\":6421:6422   */\n      dup1\n        /* \"#utility.yul\":6414:6426   */\n      revert\n        /* \"#utility.yul\":6438:6663   */\n    tag_99:\n        /* \"#utility.yul\":6578:6612   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6574:6575   */\n      0x00\n        /* \"#utility.yul\":6566:6572   */\n      dup3\n        /* \"#utility.yul\":6562:6576   */\n      add\n        /* \"#utility.yul\":6555:6613   */\n      mstore\n        /* \"#utility.yul\":6647:6655   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6642:6644   */\n      0x20\n        /* \"#utility.yul\":6634:6640   */\n      dup3\n        /* \"#utility.yul\":6630:6645   */\n      add\n        /* \"#utility.yul\":6623:6656   */\n      mstore\n        /* \"#utility.yul\":6438:6663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6669:6851   */\n    tag_104:\n        /* \"#utility.yul\":6809:6843   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6797:6803   */\n      dup3\n        /* \"#utility.yul\":6793:6807   */\n      add\n        /* \"#utility.yul\":6786:6844   */\n      mstore\n        /* \"#utility.yul\":6669:6851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6857:7029   */\n    tag_109:\n        /* \"#utility.yul\":6997:7021   */\n      0x596f7520646f6e74206861766520616e797468696e6700000000000000000000\n        /* \"#utility.yul\":6993:6994   */\n      0x00\n        /* \"#utility.yul\":6985:6991   */\n      dup3\n        /* \"#utility.yul\":6981:6995   */\n      add\n        /* \"#utility.yul\":6974:7022   */\n      mstore\n        /* \"#utility.yul\":6857:7029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7035:7157   */\n    tag_80:\n        /* \"#utility.yul\":7108:7132   */\n      tag_169\n        /* \"#utility.yul\":7126:7131   */\n      dup2\n        /* \"#utility.yul\":7108:7132   */\n      tag_89\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7101:7106   */\n      dup2\n        /* \"#utility.yul\":7098:7133   */\n      eq\n        /* \"#utility.yul\":7088:7151   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":7147:7148   */\n      0x00\n        /* \"#utility.yul\":7144:7145   */\n      dup1\n        /* \"#utility.yul\":7137:7149   */\n      revert\n        /* \"#utility.yul\":7088:7151   */\n    tag_170:\n        /* \"#utility.yul\":7035:7157   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201999764a44e1c32578c01d91f00b44f30cff0ba4eea225aff273caa449c087ad64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_244": {
									"entryPoint": null,
									"id": 244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 234,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_203": {
									"entryPoint": 242,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:4",
														"type": ""
													}
												],
												"src": "7:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:4"
															},
															"nodeType": "YulIf",
															"src": "243:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:4",
														"type": ""
													}
												],
												"src": "156:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:4",
														"type": ""
													}
												],
												"src": "513:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:4",
														"type": ""
													}
												],
												"src": "594:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:4",
														"type": ""
													}
												],
												"src": "696:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:4"
															},
															"nodeType": "YulIf",
															"src": "1127:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:4",
														"type": ""
													}
												],
												"src": "1074:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610ce9380380610ce9833981810160405281019061003291906101cb565b61004e6100436100ea60201b60201c565b6100f260201b60201c565b73d7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610246565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506101c58161022f565b92915050565b6000602082840312156101e1576101e061022a565b5b60006101ef848285016101b6565b91505092915050565b60006102038261020a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610238816101f8565b811461024357600080fd5b50565b610a94806102556000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806377af32261161006657806377af3226146100d457806389a30271146100de5780638da5cb5b146100fc578063a87c70fa1461011a578063f2fde38b1461014b57610093565b806302699df814610098578063283a1e16146100a2578063715018a6146100ac578063754fe93e146100b6575b600080fd5b6100a0610167565b005b6100aa610226565b005b6100b461026f565b005b6100be6102f7565b6040516100cb919061075d565b60405180910390f35b6100dc61031d565b005b6100e6610433565b6040516100f3919061075d565b60405180910390f35b610104610459565b6040516101119190610742565b60405180910390f35b610134600480360381019061012f919061067f565b610482565b6040516101429291906107d8565b60405180910390f35b6101656004803603810190610160919061067f565b6104a6565b005b6000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154426101ba919061089d565b925060b4836101c99190610812565b91506001826101d89190610843565b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b61027761059e565b73ffffffffffffffffffffffffffffffffffffffff16610295610459565b73ffffffffffffffffffffffffffffffffffffffff16146102eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e290610798565b60405180910390fd5b6102f560006105a6565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116103a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610399906107b8565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010154905082565b6104ae61059e565b73ffffffffffffffffffffffffffffffffffffffff166104cc610459565b73ffffffffffffffffffffffffffffffffffffffff1614610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610798565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610778565b60405180910390fd5b61059b816105a6565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061067981610a47565b92915050565b600060208284031215610695576106946109a1565b5b60006106a38482850161066a565b91505092915050565b6106b5816108d1565b82525050565b6106c48161090d565b82525050565b60006106d7602683610801565b91506106e2826109a6565b604082019050919050565b60006106fa602083610801565b9150610705826109f5565b602082019050919050565b600061071d601683610801565b915061072882610a1e565b602082019050919050565b61073c81610903565b82525050565b600060208201905061075760008301846106ac565b92915050565b600060208201905061077260008301846106bb565b92915050565b60006020820190508181036000830152610791816106ca565b9050919050565b600060208201905081810360008301526107b1816106ed565b9050919050565b600060208201905081810360008301526107d181610710565b9050919050565b60006040820190506107ed6000830185610733565b6107fa6020830184610733565b9392505050565b600082825260208201905092915050565b600061081d82610903565b915061082883610903565b92508261083857610837610972565b5b828204905092915050565b600061084e82610903565b915061085983610903565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561089257610891610943565b5b828202905092915050565b60006108a882610903565b91506108b383610903565b9250828210156108c6576108c5610943565b5b828203905092915050565b60006108dc826108e3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109188261091f565b9050919050565b600061092a82610931565b9050919050565b600061093c826108e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520646f6e74206861766520616e797468696e6700000000000000000000600082015250565b610a50816108d1565b8114610a5b57600080fd5b5056fea26469706673582212201999764a44e1c32578c01d91f00b44f30cff0ba4eea225aff273caa449c087ad64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCE9 CODESIZE SUB DUP1 PUSH2 0xCE9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x4E PUSH2 0x43 PUSH2 0xEA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xF2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xD7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C5 DUP2 PUSH2 0x22F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E1 JUMPI PUSH2 0x1E0 PUSH2 0x22A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF DUP5 DUP3 DUP6 ADD PUSH2 0x1B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203 DUP3 PUSH2 0x20A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x238 DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x243 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA94 DUP1 PUSH2 0x255 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77AF3226 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x77AF3226 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14B JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2699DF8 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x283A1E16 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x754FE93E EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x31D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD TIMESTAMP PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST SWAP3 POP PUSH1 0xB4 DUP4 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP3 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x277 PUSH2 0x59E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x295 PUSH2 0x459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F5 PUSH1 0x0 PUSH2 0x5A6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x59E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CC PUSH2 0x459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH2 0x5A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x679 DUP2 PUSH2 0xA47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH2 0x694 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP5 DUP3 DUP6 ADD PUSH2 0x66A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x8D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x90D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 PUSH1 0x26 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E2 DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH1 0x20 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x705 DUP3 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71D PUSH1 0x16 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x728 DUP3 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x757 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x772 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x791 DUP2 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B1 DUP2 PUSH2 0x6ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D1 DUP2 PUSH2 0x710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x7FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x733 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81D DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP2 POP PUSH2 0x828 DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x972 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84E DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP2 POP PUSH2 0x859 DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x943 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A8 DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B3 DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C5 PUSH2 0x943 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x918 DUP3 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92A DUP3 PUSH2 0x931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E74206861766520616E797468696E6700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA50 DUP2 PUSH2 0x8D1 JUMP JUMPDEST DUP2 EQ PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SWAP10 PUSH23 0x4A44E1C32578C01D91F00B44F30CFF0BA4EEA225AFF273 0xCA LOG4 0x49 0xC0 DUP8 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "80:1512:3:-:0;;;432:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;914:32:2;933:12;:10;;;:12;;:::i;:::-;914:18;;;:32;;:::i;:::-;488:42:3;474:4;;:57;;;;;;;;;;;;;;;;;;556:9;542:4;;:24;;;;;;;;;;;;;;;;;;432:146;80:1512;;640:96:0;693:7;719:10;712:17;;640:96;:::o;2263:187:2:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;7:143:4:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;80:1512:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Bton_226": {
									"entryPoint": 759,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USDC_223": {
									"entryPoint": 1075,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 1438,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_203": {
									"entryPoint": 1446,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@airdroppedBal_220": {
									"entryPoint": 1154,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calcAirdrop_301": {
									"entryPoint": 359,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_132": {
									"entryPoint": 1113,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_160": {
									"entryPoint": 623,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirDrop_257": {
									"entryPoint": 550,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_183": {
									"entryPoint": 1190,
									"id": 183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawAirDrop_333": {
									"entryPoint": 797,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack": {
									"entryPoint": 1723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$99__to_t_address__fromStack_reversed": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$99_to_t_address": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1": {
									"entryPoint": 2590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7160:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:4"
															},
															"nodeType": "YulIf",
															"src": "228:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:4",
														"type": ""
													}
												],
												"src": "152:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:4",
														"type": ""
													}
												],
												"src": "487:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "689:79:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "755:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$99_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "711:43:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:50:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:63:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "699:63:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "677:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "684:3:4",
														"type": ""
													}
												],
												"src": "611:157:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "920:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "930:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "996:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1001:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "937:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1102:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1013:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1013:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1115:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1126:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1131:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "908:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "916:3:4",
														"type": ""
													}
												],
												"src": "774:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1368:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1309:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1474:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1385:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1385:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1385:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1487:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1503:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1487:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1280:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1288:3:4",
														"type": ""
													}
												],
												"src": "1146:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1664:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1674:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1740:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1681:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1681:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1674:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1846:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1757:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1859:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1652:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1660:3:4",
														"type": ""
													}
												],
												"src": "1518:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1955:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1972:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1995:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1977:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1977:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1943:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1950:3:4",
														"type": ""
													}
												],
												"src": "1890:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2112:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2122:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2134:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2145:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2130:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2122:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2202:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2215:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2226:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2158:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2084:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2096:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2107:4:4",
														"type": ""
													}
												],
												"src": "2014:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:137:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2363:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2375:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2363:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2456:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2469:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2480:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2465:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2465:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2399:56:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:84:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2399:84:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$99__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2325:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2337:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2348:4:4",
														"type": ""
													}
												],
												"src": "2242:248:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2667:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2677:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2685:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2677:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2724:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2735:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2743:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2749:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2739:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2739:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2713:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2769:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2903:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2777:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2769:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2647:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2662:4:4",
														"type": ""
													}
												],
												"src": "2496:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3092:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3102:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3114:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3125:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3102:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3149:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3160:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3145:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3168:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3174:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3194:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3328:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3202:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3194:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3072:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3087:4:4",
														"type": ""
													}
												],
												"src": "2921:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3527:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3539:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3550:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3535:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3535:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3527:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3574:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3585:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3593:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3589:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3589:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3563:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3753:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3627:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3497:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3512:4:4",
														"type": ""
													}
												],
												"src": "3346:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3897:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3907:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3919:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3930:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3907:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3987:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4000:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4011:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3996:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3996:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3943:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3943:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4068:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4081:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4092:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4077:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4077:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4024:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4024:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3861:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3873:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3881:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3892:4:4",
														"type": ""
													}
												],
												"src": "3771:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4149:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4169:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4142:6:4",
														"type": ""
													}
												],
												"src": "4109:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4286:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4303:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4308:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4324:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4343:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4348:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4339:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4339:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4324:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4258:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4263:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4274:11:4",
														"type": ""
													}
												],
												"src": "4190:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4407:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4417:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4440:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4422:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4417:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4451:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4474:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4456:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4451:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4498:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4500:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4500:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4500:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4495:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4488:9:4"
															},
															"nodeType": "YulIf",
															"src": "4485:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4530:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4539:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4542:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4530:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4396:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4399:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4405:1:4",
														"type": ""
													}
												],
												"src": "4365:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4604:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4614:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4637:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4619:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4614:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4648:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4671:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4653:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4648:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4846:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4848:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4848:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4848:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4758:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4751:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4751:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4744:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4744:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4766:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4773:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4841:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4769:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4769:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4763:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4740:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4740:105:4"
															},
															"nodeType": "YulIf",
															"src": "4737:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4878:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4893:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4896:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4889:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4878:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4587:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4590:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4596:7:4",
														"type": ""
													}
												],
												"src": "4556:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4965:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4988:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4970:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4965:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4999:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5022:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5004:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4999:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5046:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5048:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5040:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5043:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5037:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5037:8:4"
															},
															"nodeType": "YulIf",
															"src": "5034:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5078:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5090:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5093:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5086:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5078:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4941:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4944:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4950:4:4",
														"type": ""
													}
												],
												"src": "4910:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5152:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5162:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5191:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5173:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5162:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5134:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5144:7:4",
														"type": ""
													}
												],
												"src": "5107:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5264:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5279:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5286:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5264:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5236:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5246:7:4",
														"type": ""
													}
												],
												"src": "5209:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5386:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5396:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5407:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5396:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5368:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5378:7:4",
														"type": ""
													}
												],
												"src": "5341:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5497:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5507:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5551:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5520:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5520:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5507:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$99_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5477:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5487:9:4",
														"type": ""
													}
												],
												"src": "5424:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5629:66:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5639:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5683:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5652:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5639:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5609:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5619:9:4",
														"type": ""
													}
												],
												"src": "5569:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5761:53:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5771:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5802:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5784:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:24:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5771:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5741:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5751:9:4",
														"type": ""
													}
												],
												"src": "5701:113:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5848:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5979:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6034:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6044:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6148:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6151:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6141:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6141:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6141:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6175:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6165:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6165:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6006:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6281:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6298:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6301:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6291:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6291:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6291:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "6192:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6404:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6421:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6424:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6414:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "6315:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6544:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6566:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6574:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6562:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6562:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6578:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6555:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6555:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6634:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6642:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6630:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6647:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6623:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6623:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6623:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6536:6:4",
														"type": ""
													}
												],
												"src": "6438:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6775:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6797:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6805:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6793:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6793:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6809:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6786:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6786:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6786:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6767:6:4",
														"type": ""
													}
												],
												"src": "6669:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6963:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6985:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6993:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6981:14:4"
																	},
																	{
																		"hexValue": "596f7520646f6e74206861766520616e797468696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6997:24:4",
																		"type": "",
																		"value": "You dont have anything"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6974:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6974:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6955:6:4",
														"type": ""
													}
												],
												"src": "6857:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7078:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7135:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7144:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7147:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7137:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7137:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7137:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7101:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7126:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7108:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7108:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7098:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7098:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7091:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:43:4"
															},
															"nodeType": "YulIf",
															"src": "7088:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7071:5:4",
														"type": ""
													}
												],
												"src": "7035:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$99_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$99__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$99_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$99_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"You dont have anything\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806377af32261161006657806377af3226146100d457806389a30271146100de5780638da5cb5b146100fc578063a87c70fa1461011a578063f2fde38b1461014b57610093565b806302699df814610098578063283a1e16146100a2578063715018a6146100ac578063754fe93e146100b6575b600080fd5b6100a0610167565b005b6100aa610226565b005b6100b461026f565b005b6100be6102f7565b6040516100cb919061075d565b60405180910390f35b6100dc61031d565b005b6100e6610433565b6040516100f3919061075d565b60405180910390f35b610104610459565b6040516101119190610742565b60405180910390f35b610134600480360381019061012f919061067f565b610482565b6040516101429291906107d8565b60405180910390f35b6101656004803603810190610160919061067f565b6104a6565b005b6000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154426101ba919061089d565b925060b4836101c99190610812565b91506001826101d89190610843565b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050565b42600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b61027761059e565b73ffffffffffffffffffffffffffffffffffffffff16610295610459565b73ffffffffffffffffffffffffffffffffffffffff16146102eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e290610798565b60405180910390fd5b6102f560006105a6565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116103a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610399906107b8565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555042600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915090508060000154908060010154905082565b6104ae61059e565b73ffffffffffffffffffffffffffffffffffffffff166104cc610459565b73ffffffffffffffffffffffffffffffffffffffff1614610522576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051990610798565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610778565b60405180910390fd5b61059b816105a6565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061067981610a47565b92915050565b600060208284031215610695576106946109a1565b5b60006106a38482850161066a565b91505092915050565b6106b5816108d1565b82525050565b6106c48161090d565b82525050565b60006106d7602683610801565b91506106e2826109a6565b604082019050919050565b60006106fa602083610801565b9150610705826109f5565b602082019050919050565b600061071d601683610801565b915061072882610a1e565b602082019050919050565b61073c81610903565b82525050565b600060208201905061075760008301846106ac565b92915050565b600060208201905061077260008301846106bb565b92915050565b60006020820190508181036000830152610791816106ca565b9050919050565b600060208201905081810360008301526107b1816106ed565b9050919050565b600060208201905081810360008301526107d181610710565b9050919050565b60006040820190506107ed6000830185610733565b6107fa6020830184610733565b9392505050565b600082825260208201905092915050565b600061081d82610903565b915061082883610903565b92508261083857610837610972565b5b828204905092915050565b600061084e82610903565b915061085983610903565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561089257610891610943565b5b828202905092915050565b60006108a882610903565b91506108b383610903565b9250828210156108c6576108c5610943565b5b828203905092915050565b60006108dc826108e3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006109188261091f565b9050919050565b600061092a82610931565b9050919050565b600061093c826108e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520646f6e74206861766520616e797468696e6700000000000000000000600082015250565b610a50816108d1565b8114610a5b57600080fd5b5056fea26469706673582212201999764a44e1c32578c01d91f00b44f30cff0ba4eea225aff273caa449c087ad64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x77AF3226 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x77AF3226 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x89A30271 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x14B JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x2699DF8 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x283A1E16 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x754FE93E EQ PUSH2 0xB6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0x226 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB4 PUSH2 0x26F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBE PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x31D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP3 SWAP2 SWAP1 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x67F JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD TIMESTAMP PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST SWAP3 POP PUSH1 0xB4 DUP4 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x812 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP3 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x843 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x277 PUSH2 0x59E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x295 PUSH2 0x459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2F5 PUSH1 0x0 PUSH2 0x5A6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x399 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x59E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CC PUSH2 0x459 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x519 SWAP1 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP1 PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x59B DUP2 PUSH2 0x5A6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x679 DUP2 PUSH2 0xA47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x695 JUMPI PUSH2 0x694 PUSH2 0x9A1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP5 DUP3 DUP6 ADD PUSH2 0x66A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B5 DUP2 PUSH2 0x8D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6C4 DUP2 PUSH2 0x90D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D7 PUSH1 0x26 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E2 DUP3 PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FA PUSH1 0x20 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x705 DUP3 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71D PUSH1 0x16 DUP4 PUSH2 0x801 JUMP JUMPDEST SWAP2 POP PUSH2 0x728 DUP3 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73C DUP2 PUSH2 0x903 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x757 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x772 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x791 DUP2 PUSH2 0x6CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B1 DUP2 PUSH2 0x6ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D1 DUP2 PUSH2 0x710 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7ED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x7FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x733 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81D DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP2 POP PUSH2 0x828 DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x838 JUMPI PUSH2 0x837 PUSH2 0x972 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84E DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP2 POP PUSH2 0x859 DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x892 JUMPI PUSH2 0x891 PUSH2 0x943 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A8 DUP3 PUSH2 0x903 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B3 DUP4 PUSH2 0x903 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x8C6 JUMPI PUSH2 0x8C5 PUSH2 0x943 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x918 DUP3 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92A DUP3 PUSH2 0x931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93C DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E74206861766520616E797468696E6700000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA50 DUP2 PUSH2 0x8D1 JUMP JUMPDEST DUP2 EQ PUSH2 0xA5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT SWAP10 PUSH23 0x4A44E1C32578C01D91F00B44F30CFF0BA4EEA225AFF273 0xCA LOG4 0x49 0xC0 DUP8 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "80:1512:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:413;;;:::i;:::-;;591:151;;;:::i;:::-;;1661:101:2;;;:::i;:::-;;407:18:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1169:414;;;:::i;:::-;;382:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1029:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:52:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1911:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;750:413:3;867:25;903:14;928:18;991:13;:25;1005:10;991:25;;;;;;;;;;;;;;;:34;;;973:15;:52;;;;:::i;:::-;953:72;;1061:3;1041:17;:23;;;;:::i;:::-;1032:32;;1099:1;1091:6;:9;;;;:::i;:::-;1078:22;;1143:10;1107:13;:25;1121:10;1107:25;;;;;;;;;;;;;;;:33;;:46;;;;780:383;;;750:413::o;591:151::-;677:15;640:13;:25;654:10;640:25;;;;;;;;;;;;;;;:34;;:52;;;;591:151::o;1661:101:2:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1725:30:::1;1752:1;1725:18;:30::i;:::-;1661:101::o:0;407:18:3:-;;;;;;;;;;;;;:::o;1169:414::-;1280:1;1245:13;:25;1259:10;1245:25;;;;;;;;;;;;;;;:33;;;:36;1236:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1356:1;1321:13;:25;1335:10;1321:25;;;;;;;;;;;;;;;:33;;:36;;;;1405:15;1368:13;:25;1382:10;1368:25;;;;;;;;;;;;;;;:34;;:52;;;;1169:414::o;382:18::-;;;;;;;;;;;;;:::o;1029:85:2:-;1075:7;1101:6;;;;;;;;;;;1094:13;;1029:85;:::o;323:52:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1911:198:2:-;1252:12;:10;:12::i;:::-;1241:23;;:7;:5;:7::i;:::-;:23;;;1233:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:1:::1;1999:22;;:8;:22;;;;1991:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2074:28;2093:8;2074:18;:28::i;:::-;1911:198:::0;:::o;640:96:0:-;693:7;719:10;712:17;;640:96;:::o;2263:187:2:-;2336:16;2355:6;;;;;;;;;;;2336:25;;2380:8;2371:6;;:17;;;;;;;;;;;;;;;;;;2434:8;2403:40;;2424:8;2403:40;;;;;;;;;;;;2326:124;2263:187;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:157::-;711:50;755:5;711:50;:::i;:::-;706:3;699:63;611:157;;:::o;774:366::-;916:3;937:67;1001:2;996:3;937:67;:::i;:::-;930:74;;1013:93;1102:3;1013:93;:::i;:::-;1131:2;1126:3;1122:12;1115:19;;774:366;;;:::o;1146:::-;1288:3;1309:67;1373:2;1368:3;1309:67;:::i;:::-;1302:74;;1385:93;1474:3;1385:93;:::i;:::-;1503:2;1498:3;1494:12;1487:19;;1146:366;;;:::o;1518:::-;1660:3;1681:67;1745:2;1740:3;1681:67;:::i;:::-;1674:74;;1757:93;1846:3;1757:93;:::i;:::-;1875:2;1870:3;1866:12;1859:19;;1518:366;;;:::o;1890:118::-;1977:24;1995:5;1977:24;:::i;:::-;1972:3;1965:37;1890:118;;:::o;2014:222::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2158:71;2226:1;2215:9;2211:17;2202:6;2158:71;:::i;:::-;2014:222;;;;:::o;2242:248::-;2348:4;2386:2;2375:9;2371:18;2363:26;;2399:84;2480:1;2469:9;2465:17;2456:6;2399:84;:::i;:::-;2242:248;;;;:::o;2496:419::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2749:9;2743:4;2739:20;2735:1;2724:9;2720:17;2713:47;2777:131;2903:4;2777:131;:::i;:::-;2769:139;;2496:419;;;:::o;2921:::-;3087:4;3125:2;3114:9;3110:18;3102:26;;3174:9;3168:4;3164:20;3160:1;3149:9;3145:17;3138:47;3202:131;3328:4;3202:131;:::i;:::-;3194:139;;2921:419;;;:::o;3346:::-;3512:4;3550:2;3539:9;3535:18;3527:26;;3599:9;3593:4;3589:20;3585:1;3574:9;3570:17;3563:47;3627:131;3753:4;3627:131;:::i;:::-;3619:139;;3346:419;;;:::o;3771:332::-;3892:4;3930:2;3919:9;3915:18;3907:26;;3943:71;4011:1;4000:9;3996:17;3987:6;3943:71;:::i;:::-;4024:72;4092:2;4081:9;4077:18;4068:6;4024:72;:::i;:::-;3771:332;;;;;:::o;4190:169::-;4274:11;4308:6;4303:3;4296:19;4348:4;4343:3;4339:14;4324:29;;4190:169;;;;:::o;4365:185::-;4405:1;4422:20;4440:1;4422:20;:::i;:::-;4417:25;;4456:20;4474:1;4456:20;:::i;:::-;4451:25;;4495:1;4485:35;;4500:18;;:::i;:::-;4485:35;4542:1;4539;4535:9;4530:14;;4365:185;;;;:::o;4556:348::-;4596:7;4619:20;4637:1;4619:20;:::i;:::-;4614:25;;4653:20;4671:1;4653:20;:::i;:::-;4648:25;;4841:1;4773:66;4769:74;4766:1;4763:81;4758:1;4751:9;4744:17;4740:105;4737:131;;;4848:18;;:::i;:::-;4737:131;4896:1;4893;4889:9;4878:20;;4556:348;;;;:::o;4910:191::-;4950:4;4970:20;4988:1;4970:20;:::i;:::-;4965:25;;5004:20;5022:1;5004:20;:::i;:::-;4999:25;;5043:1;5040;5037:8;5034:34;;;5048:18;;:::i;:::-;5034:34;5093:1;5090;5086:9;5078:17;;4910:191;;;;:::o;5107:96::-;5144:7;5173:24;5191:5;5173:24;:::i;:::-;5162:35;;5107:96;;;:::o;5209:126::-;5246:7;5286:42;5279:5;5275:54;5264:65;;5209:126;;;:::o;5341:77::-;5378:7;5407:5;5396:16;;5341:77;;;:::o;5424:139::-;5487:9;5520:37;5551:5;5520:37;:::i;:::-;5507:50;;5424:139;;;:::o;5569:126::-;5619:9;5652:37;5683:5;5652:37;:::i;:::-;5639:50;;5569:126;;;:::o;5701:113::-;5751:9;5784:24;5802:5;5784:24;:::i;:::-;5771:37;;5701:113;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:180;6054:77;6051:1;6044:88;6151:4;6148:1;6141:15;6175:4;6172:1;6165:15;6315:117;6424:1;6421;6414:12;6438:225;6578:34;6574:1;6566:6;6562:14;6555:58;6647:8;6642:2;6634:6;6630:15;6623:33;6438:225;:::o;6669:182::-;6809:34;6805:1;6797:6;6793:14;6786:58;6669:182;:::o;6857:172::-;6997:24;6993:1;6985:6;6981:14;6974:48;6857:172;:::o;7035:122::-;7108:24;7126:5;7108:24;:::i;:::-;7101:5;7098:35;7088:63;;7147:1;7144;7137:12;7088:63;7035:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "541600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Bton()": "2667",
								"USDC()": "2622",
								"airdroppedBal(address)": "infinite",
								"calcAirdrop()": "infinite",
								"owner()": "2566",
								"renounceOwnership()": "30419",
								"startAirDrop()": "22375",
								"transferOwnership(address)": "30811",
								"withdrawAirDrop()": "29679"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 432,
									"end": 578,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 933,
									"end": 945,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 932,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 914,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 914,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 488,
									"end": 530,
									"name": "PUSH",
									"source": 3,
									"value": "D7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B"
								},
								{
									"begin": 474,
									"end": 478,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 474,
									"end": 478,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 474,
									"end": 531,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 474,
									"end": 531,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 474,
									"end": 531,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 474,
									"end": 531,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 556,
									"end": 565,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 542,
									"end": 546,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 542,
									"end": 566,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 542,
									"end": 566,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 542,
									"end": 566,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 542,
									"end": 566,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 432,
									"end": 578,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2355,
									"end": 2361,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2336,
									"end": 2361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2380,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2371,
									"end": 2388,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2434,
									"end": 2442,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2424,
									"end": 2432,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2403,
									"end": 2443,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2326,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2263,
									"end": 2450,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 1592,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201999764a44e1c32578c01d91f00b44f30cff0ba4eea225aff273caa449c087ad64736f6c63430008070033",
									".code": [
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "77AF3226"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "77AF3226"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "89A30271"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "A87C70FA"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "2699DF8"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "283A1E16"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "754FE93E"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 80,
											"end": 1592,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 591,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 742,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 407,
											"end": 425,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 867,
											"end": 892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 917,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1004,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1015,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1016,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 991,
											"end": 1025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 991,
											"end": 1025,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 973,
											"end": 988,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 973,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 953,
											"end": 1025,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 953,
											"end": 1025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1064,
											"name": "PUSH",
											"source": 3,
											"value": "B4"
										},
										{
											"begin": 1041,
											"end": 1058,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1099,
											"end": 1100,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1120,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1132,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1140,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1107,
											"end": 1140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1153,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1153,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 780,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 750,
											"end": 1163,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 591,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 677,
											"end": 692,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 653,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 664,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 640,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 640,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 674,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 640,
											"end": 692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 640,
											"end": 692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 692,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 640,
											"end": 692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 591,
											"end": 742,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1725,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1762,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 407,
											"end": 425,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 407,
											"end": 425,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1278,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1245,
											"end": 1281,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1236,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1356,
											"end": 1357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1334,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1345,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1346,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1357,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1321,
											"end": 1357,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1420,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1381,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1392,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1393,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1402,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1368,
											"end": 1420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1583,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 382,
											"end": 400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 382,
											"end": 400,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1029,
											"end": 1114,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1252,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1252,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1241,
											"end": 1264,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1233,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1991,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1911,
											"end": 2109,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2442,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2424,
											"end": 2432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2403,
											"end": 2443,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2450,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 768,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 611,
											"end": 768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 755,
											"end": 760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 711,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 711,
											"end": 761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 699,
											"end": 762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 611,
											"end": 768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 1140,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 774,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 996,
											"end": 999,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 937,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 937,
											"end": 1004,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 1004,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 937,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 1004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 930,
											"end": 1004,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1013,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1102,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1013,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1013,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1013,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1013,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1129,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1122,
											"end": 1134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1115,
											"end": 1134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1115,
											"end": 1134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 1140,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 774,
											"end": 1140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 774,
											"end": 1140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 774,
											"end": 1140,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1146,
											"end": 1512,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1146,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1309,
											"end": 1376,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1376,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1309,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1474,
											"end": 1477,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1385,
											"end": 1478,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1478,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1385,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1505,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1512,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1884,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1518,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1740,
											"end": 1743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1681,
											"end": 1748,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1681,
											"end": 1748,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1681,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1846,
											"end": 1849,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1757,
											"end": 1850,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1757,
											"end": 1850,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1757,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1884,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1884,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1995,
											"end": 2000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1977,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 2002,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 2008,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2107,
											"end": 2111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2147,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2134,
											"end": 2143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2122,
											"end": 2148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2211,
											"end": 2228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2158,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2158,
											"end": 2229,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2229,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2158,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2014,
											"end": 2236,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2371,
											"end": 2389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2480,
											"end": 2481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2478,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2462,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2399,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2496,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2496,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2743,
											"end": 2747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2759,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2733,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2903,
											"end": 2907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2777,
											"end": 2908,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2777,
											"end": 2908,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2777,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 2908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2915,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2921,
											"end": 3340,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2921,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3087,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3127,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3114,
											"end": 3123,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3110,
											"end": 3128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3102,
											"end": 3128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3172,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3138,
											"end": 3185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3328,
											"end": 3332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3202,
											"end": 3333,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3202,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3194,
											"end": 3333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3194,
											"end": 3333,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 3340,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3346,
											"end": 3765,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3346,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3535,
											"end": 3553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3527,
											"end": 3553,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3593,
											"end": 3597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3609,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3563,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3753,
											"end": 3757,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3627,
											"end": 3758,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3758,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3627,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3765,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3933,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 3933,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 3933,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 4011,
											"end": 4012,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3996,
											"end": 4013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 3993,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3943,
											"end": 4014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3943,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4092,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4068,
											"end": 4074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4024,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4024,
											"end": 4096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4024,
											"end": 4096,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 4024,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3771,
											"end": 4103,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4274,
											"end": 4285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4308,
											"end": 4314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4296,
											"end": 4315,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4348,
											"end": 4352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4346,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4359,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4440,
											"end": 4441,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4422,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4442,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4417,
											"end": 4442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4474,
											"end": 4475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4456,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4451,
											"end": 4476,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4451,
											"end": 4476,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4485,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4544,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4365,
											"end": 4550,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4596,
											"end": 4603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4637,
											"end": 4638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4619,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4639,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4639,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4671,
											"end": 4672,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4653,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4648,
											"end": 4673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4839,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4769,
											"end": 4843,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4844,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4758,
											"end": 4759,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4744,
											"end": 4761,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4740,
											"end": 4845,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4868,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4737,
											"end": 4868,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 4848,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4737,
											"end": 4868,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4737,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4904,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4965,
											"end": 4990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5022,
											"end": 5023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 5004,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5037,
											"end": 5045,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5034,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 5101,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5107,
											"end": 5203,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 5107,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5191,
											"end": 5196,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5173,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5197,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5107,
											"end": 5203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5107,
											"end": 5203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5107,
											"end": 5203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5107,
											"end": 5203,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5209,
											"end": 5335,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5209,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5328,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5279,
											"end": 5284,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5329,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5264,
											"end": 5329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5209,
											"end": 5335,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5418,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5424,
											"end": 5563,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5424,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5487,
											"end": 5496,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5520,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5551,
											"end": 5556,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5520,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5520,
											"end": 5557,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5520,
											"end": 5557,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 5520,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5507,
											"end": 5557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5507,
											"end": 5557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5563,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5424,
											"end": 5563,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5569,
											"end": 5695,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 5569,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5683,
											"end": 5688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5652,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5652,
											"end": 5689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5652,
											"end": 5689,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5652,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5569,
											"end": 5695,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5701,
											"end": 5814,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5701,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5771,
											"end": 5808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5771,
											"end": 5808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5701,
											"end": 5814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5701,
											"end": 5814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5701,
											"end": 5814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5701,
											"end": 5814,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5820,
											"end": 6000,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5820,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5945,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5946,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5965,
											"end": 5969,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5955,
											"end": 5970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 5993,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5994,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6006,
											"end": 6186,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6006,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6054,
											"end": 6131,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6132,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6151,
											"end": 6155,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 6148,
											"end": 6149,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6179,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6180,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6432,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6315,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6426,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6663,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 6438,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6578,
											"end": 6612,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6562,
											"end": 6576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6613,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6655,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6642,
											"end": 6644,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6634,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6623,
											"end": 6656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6663,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6663,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6669,
											"end": 6851,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 6669,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6809,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6793,
											"end": 6807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6786,
											"end": 6844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6669,
											"end": 6851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6669,
											"end": 6851,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6857,
											"end": 7029,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6857,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6997,
											"end": 7021,
											"name": "PUSH",
											"source": 4,
											"value": "596F7520646F6E74206861766520616E797468696E6700000000000000000000"
										},
										{
											"begin": 6993,
											"end": 6994,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6981,
											"end": 6995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 7029,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 7029,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7035,
											"end": 7157,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7035,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7126,
											"end": 7131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7108,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7101,
											"end": 7106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7133,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7088,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7088,
											"end": 7151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7147,
											"end": 7148,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7149,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7088,
											"end": 7151,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7088,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7157,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Bton()": "754fe93e",
							"USDC()": "89a30271",
							"airdroppedBal(address)": "a87c70fa",
							"calcAirdrop()": "02699df8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"startAirDrop()": "283a1e16",
							"transferOwnership(address)": "f2fde38b",
							"withdrawAirDrop()": "77af3226"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_btonAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Bton\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calcAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WandAirdrop.sol\":\"testAirDrop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"Ownable.sol\":{\"keccak256\":\"0xfc688f3896433e8e6cd736ebd0dd9835c448650581b2cd407036f4eb03e9f53a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db1dc2ac41e05e1b6e032fa560a90bc3165302b7dc9786a9b315d6cc9d1505f8\",\"dweb:/ipfs/QmWSSboXQo745ayiGR1LskggyRKBTpEtU5KzJapztEqVST\"]},\"WandAirdrop.sol\":{\"keccak256\":\"0x891afce0015fa12fb5ade490a5851864f2f7f6384f258fc16c87ef319c0e489c\",\"urls\":[\"bzz-raw://eda82bac6857f513c8fa4312e3b0ee6ff1bf0db8279247d2ed515a136ce21e60\",\"dweb:/ipfs/QmSgp6QoLdqZ9P18ZMHAsAtKXbjiACDQ9ujiBmdgboX3fC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> WandAirdrop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "WandAirdrop.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "702:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "712:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:0"
									},
									"scope": 21,
									"src": "640:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "809:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "819:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:0"
									},
									"scope": 21,
									"src": "742:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "608:235:0",
							"usedErrors": []
						}
					],
					"src": "86:758:0"
				},
				"id": 0
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20",
							"nameLocation": "197:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "327:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:1"
									},
									"scope": 99,
									"src": "281:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:1"
									},
									"scope": 99,
									"src": "419:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "725:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "744:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 99,
									"src": "707:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1078:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1093:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1133:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:1"
									},
									"scope": 99,
									"src": "1059:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1812:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1829:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:1"
									},
									"scope": 99,
									"src": "1795:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2207:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2231:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2258:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2297:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:1"
									},
									"scope": 99,
									"src": "2176:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 89,
									"name": "Transfer",
									"nameLocation": "2478:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2487:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2509:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2529:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:1"
									},
									"src": "2472:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 98,
									"name": "Approval",
									"nameLocation": "2709:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2718:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2741:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2766:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:1"
									},
									"src": "2703:78:1"
								}
							],
							"scope": 100,
							"src": "187:2596:1",
							"usedErrors": []
						}
					],
					"src": "91:2693:1"
				},
				"id": 1
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Ownable": [
							204
						]
					},
					"id": 205,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 102,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 205,
							"sourceUnit": 22,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 104,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "661:7:2"
									},
									"id": 105,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 103,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 204,
							"linearizedBaseContracts": [
								204,
								21
							],
							"name": "Ownable",
							"nameLocation": "650:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 107,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 204,
									"src": "675:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 106,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 113,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "731:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "762:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:2"
									},
									"src": "704:84:2"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "904:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 118,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "933:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "914:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "914:32:2"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:2"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:2"
									},
									"scope": 204,
									"src": "890:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "1084:30:2",
										"statements": [
											{
												"expression": {
													"id": 129,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "1101:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "1094:13:2"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:2"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 204,
									"src": "1029:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1223:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 136,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 132,
																	"src": "1241:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 138,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1252:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:2"
											},
											{
												"id": 144,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 146,
									"name": "onlyOwner",
									"nameLocation": "1211:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:2"
									},
									"src": "1202:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1715:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1752:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1744:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1744:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1725:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1725:30:2"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1325:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1705:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1670:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:2"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:2"
									},
									"scope": 204,
									"src": "1661:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1981:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 169,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "1999:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2019:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 170,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1991:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 179,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2093:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 178,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "2074:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "2074:28:2"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1768:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 166,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 165,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "1971:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1971:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1920:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1946:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1938:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:2"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:2"
									},
									"scope": 204,
									"src": "1911:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2326:124:2",
										"statements": [
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2344:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "2336:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 192,
												"initialValue": {
													"id": 191,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "2355:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:25:2"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "2371:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 194,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2380:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2371:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2371:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 198,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2424:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2434:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2403:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2398:45:2"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2115:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2272:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2299:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2291:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:18:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:2"
									},
									"scope": 204,
									"src": "2263:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 205,
							"src": "632:1820:2",
							"usedErrors": []
						}
					],
					"src": "87:2366:2"
				},
				"id": 2
			},
			"WandAirdrop.sol": {
				"ast": {
					"absolutePath": "WandAirdrop.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"IERC20": [
							99
						],
						"Ownable": [
							204
						],
						"testAirDrop": [
							334
						]
					},
					"id": 335,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 206,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 100,
							"src": "29:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 208,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 205,
							"src": "53:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 209,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 204,
										"src": "104:7:3"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "104:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 334,
							"linearizedBaseContracts": [
								334,
								204,
								21
							],
							"name": "testAirDrop",
							"nameLocation": "89:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "testAirDrop.btonsLocked",
									"id": 215,
									"members": [
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "timeInit",
											"nameLocation": "267:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "259:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "259:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "296:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 215,
											"src": "288:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 213,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "288:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "btonsLocked",
									"nameLocation": "234:11:3",
									"nodeType": "StructDefinition",
									"scope": 334,
									"src": "227:90:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87c70fa",
									"id": 220,
									"mutability": "mutable",
									"name": "airdroppedBal",
									"nameLocation": "362:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "323:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
										"typeString": "mapping(address => struct testAirDrop.btonsLocked)"
									},
									"typeName": {
										"id": 219,
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "331:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "323:31:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
											"typeString": "mapping(address => struct testAirDrop.btonsLocked)"
										},
										"valueType": {
											"id": 218,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 217,
												"name": "btonsLocked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 215,
												"src": "342:11:3"
											},
											"referencedDeclaration": 215,
											"src": "342:11:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_btonsLocked_$215_storage_ptr",
												"typeString": "struct testAirDrop.btonsLocked"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89a30271",
									"id": 223,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "396:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "382:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$99",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 222,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 221,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 99,
											"src": "382:6:3"
										},
										"referencedDeclaration": 99,
										"src": "382:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "754fe93e",
									"id": 226,
									"mutability": "mutable",
									"name": "Bton",
									"nameLocation": "421:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 334,
									"src": "407:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$99",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 225,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 224,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 99,
											"src": "407:6:3"
										},
										"referencedDeclaration": 99,
										"src": "407:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "463:115:3",
										"statements": [
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "474:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307844374143643261394644313539453639426231303241316361323143396133653341354637373142",
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "488:42:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 232,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "481:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "481:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														}
													},
													"src": "474:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "474:57:3"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 237,
														"name": "Bton",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "542:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 239,
																"name": "_btonAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "556:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 238,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "549:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$99_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "549:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$99",
															"typeString": "contract IERC20"
														}
													},
													"src": "542:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$99",
														"typeString": "contract IERC20"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "542:24:3"
											}
										]
									},
									"id": 244,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "_btonAddr",
												"nameLocation": "452:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "444:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:19:3"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:0:3"
									},
									"scope": 334,
									"src": "432:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "629:113:3",
										"statements": [
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 247,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "640:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																	"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																}
															},
															"id": 250,
															"indexExpression": {
																"expression": {
																	"id": 248,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "654:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "654:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "640:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																"typeString": "struct testAirDrop.btonsLocked storage ref"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeInit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "640:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 252,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "677:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "677:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "640:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "640:52:3"
											}
										]
									},
									"functionSelector": "283a1e16",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startAirDrop",
									"nameLocation": "600:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:3"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:3"
									},
									"scope": 334,
									"src": "591:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "780:383:3",
										"statements": [
											{
												"assignments": [
													261
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "deltaTimeFromInit",
														"nameLocation": "875:17:3",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "867:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "867:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"nodeType": "VariableDeclarationStatement",
												"src": "867:25:3"
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "epochs",
														"nameLocation": "911:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "903:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"nodeType": "VariableDeclarationStatement",
												"src": "903:14:3"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "airdropAmt",
														"nameLocation": "936:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "928:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "928:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 268,
												"nodeType": "VariableDeclarationStatement",
												"src": "928:18:3"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "deltaTimeFromInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "953:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 270,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "973:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "973:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 272,
																	"name": "airdroppedBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "991:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																		"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																	}
																},
																"id": 275,
																"indexExpression": {
																	"expression": {
																		"id": 273,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1005:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1005:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "991:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																	"typeString": "struct testAirDrop.btonsLocked storage ref"
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timeInit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "991:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "973:52:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "953:72:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "953:72:3"
											},
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "epochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1032:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 281,
															"name": "deltaTimeFromInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1041:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313830",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1061:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"src": "1041:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1032:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1032:32:3"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 286,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1078:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 287,
															"name": "epochs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1091:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1099:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1091:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1078:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1078:22:3"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 292,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "1107:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																	"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																}
															},
															"id": 295,
															"indexExpression": {
																"expression": {
																	"id": 293,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1121:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1121:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1107:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																"typeString": "struct testAirDrop.btonsLocked storage ref"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "1107:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1143:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1107:46:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "1107:46:3"
											}
										]
									},
									"functionSelector": "02699df8",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAirdrop",
									"nameLocation": "759:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:3"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:3"
									},
									"scope": 334,
									"src": "750:413:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "1203:380:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 305,
																		"name": "airdroppedBal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "1245:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																			"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"expression": {
																			"id": 306,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1259:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1259:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1245:25:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																		"typeString": "struct testAirDrop.btonsLocked storage ref"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amounts",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 214,
																"src": "1245:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1280:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1245:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e74206861766520616e797468696e67",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1283:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
																"typeString": "literal_string \"You dont have anything\""
															},
															"value": "You dont have anything"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3d96ad2c465b84ea221961d483d812d581c8ab092ab14583afe42af7aa1c1c1",
																"typeString": "literal_string \"You dont have anything\""
															}
														],
														"id": 304,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1236:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1236:72:3"
											},
											{
												"expression": {
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 315,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "1321:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																	"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																}
															},
															"id": 318,
															"indexExpression": {
																"expression": {
																	"id": 316,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1335:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1335:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1321:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																"typeString": "struct testAirDrop.btonsLocked storage ref"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 214,
														"src": "1321:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1321:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "1321:36:3"
											},
											{
												"expression": {
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 323,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "1368:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$215_storage_$",
																	"typeString": "mapping(address => struct testAirDrop.btonsLocked storage ref)"
																}
															},
															"id": 326,
															"indexExpression": {
																"expression": {
																	"id": 324,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1382:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1382:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1368:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$215_storage",
																"typeString": "struct testAirDrop.btonsLocked storage ref"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeInit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "1368:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 328,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1405:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1368:52:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "1368:52:3"
											}
										]
									},
									"functionSelector": "77af3226",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAirDrop",
									"nameLocation": "1178:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:2:3"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:3"
									},
									"scope": 334,
									"src": "1169:414:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 335,
							"src": "80:1512:3",
							"usedErrors": []
						}
					],
					"src": "2:1592:3"
				},
				"id": 3
			}
		}
	}
}